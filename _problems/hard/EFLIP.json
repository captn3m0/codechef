{"category_name":"hard","status":"success","problem_code":"EFLIP","problem_name":"Chef and Edge Flipping","body":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/LTIME89\/hindi\/EFLIP.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/LTIME89\/bengali\/EFLIP.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/LTIME89\/mandarin\/EFLIP.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/LTIME89\/russian\/EFLIP.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/LTIME89\/vietnamese\/EFLIP.pdf) as well.\r\n\r\nChef likes tournament graphs, which are directed graphs where each unordered pair of vertices is directly connected by exactly one edge. A directed graph is *strongly connected* if for each pair of vertices $(a, b)$, there is a path from the vertex $a$ to the vertex $b$.\r\n\r\nConsider a tournament graph $G$ with $N$ vertices (numbered $1$ through $N$). Chef takes a sequence of pairs of vertices $(a_1, b_1), (a_2, b_2), \\ldots, (a_M, b_M)$ and does the following for each $i$ from $1$ to $M$ in this order:\r\n- Flip the direction of the edge between vertices $a_i$ and $b_i$.\r\n- If the graph is strongly connected either before or after flipping this edge, declare $G$ a *bad tournament*.\r\n\r\nIf $G$ is never declared a bad tournament, Chef calls it a *good tournament*. Given the sequence of $M$ edge flips, find a good tournament.\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains two space-separated integers $N$ and $M$.\r\n- $M$ lines follow. For each valid $i$, the $i$-th of these lines contains two space-separated integers $a_i$ and $b_i$.\r\n\r\n### Output\r\nFor each test case, print $N-1$ lines. For each valid $i$, the $i$-th of these lines should contain $N-i$ space-separated integers; for each valid $j$, the $j$-th of these integers should be $1$ if there is an edge from the vertex $i$ to the vertex $i+j$ or $0$ if there is an edge from the vertex $i+j$ to the vertex $i$.\r\n\r\nIt can be proved that a good tournament always exists under the given constraints. If there are multiple solutions, you may print any one of them.\r\n\r\n### Constraints\r\n- $1 \\le T \\le 400$\r\n- $6 \\le N \\le 400$\r\n- the sum of $N$ over all test cases does not exceed $4,000$\r\n\r\n### Subtasks\r\n**Subtask #1 (30 points):** $M = N-2$\r\n\r\n**Subtask #2 (40 points):** $M = \\left\\lceil\\frac{3N}{2}\\right\\rceil - 3$\r\n\r\n**Subtask #3 (30 points):** $M = 2N-11$\r\n\r\n### Example Input\r\n```\r\n1\r\n6 4\r\n1 3\r\n3 4\r\n2 6\r\n5 6\r\n```\r\n\r\n### Example Output\r\n```\r\n1 0 1 1 1\r\n0 0 0 1\r\n1 1 1\r\n1 1\r\n0\r\n```\r\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/LTIME89\/hindi\/EFLIP.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/LTIME89\/bengali\/EFLIP.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/LTIME89\/mandarin\/EFLIP.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/LTIME89\/russian\/EFLIP.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/LTIME89\/vietnamese\/EFLIP.pdf) as well.\r\n\r\nChef likes tournament graphs, which are directed graphs where each unordered pair of vertices is directly connected by exactly one edge. A directed graph is *strongly connected* if for each pair of vertices $(a, b)$, there is a path from the vertex $a$ to the vertex $b$.\r\n\r\nConsider a tournament graph $G$ with $N$ vertices (numbered $1$ through $N$). Chef takes a sequence of pairs of vertices $(a_1, b_1), (a_2, b_2), \\ldots, (a_M, b_M)$ and does the following for each $i$ from $1$ to $M$ in this order:\r\n- Flip the direction of the edge between vertices $a_i$ and $b_i$.\r\n- If the graph is strongly connected either before or after flipping this edge, declare $G$ a *bad tournament*.\r\n\r\nIf $G$ is never declared a bad tournament, Chef calls it a *good tournament*. Given the sequence of $M$ edge flips, find a good tournament.\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains two space-separated integers $N$ and $M$.\r\n- $M$ lines follow. For each valid $i$, the $i$-th of these lines contains two space-separated integers $a_i$ and $b_i$.\r\n\r\n### Output\r\nFor each test case, print $N-1$ lines. For each valid $i$, the $i$-th of these lines should contain $N-i$ space-separated integers; for each valid $j$, the $j$-th of these integers should be $1$ if there is an edge from the vertex $i$ to the vertex $i+j$ or $0$ if there is an edge from the vertex $i+j$ to the vertex $i$.\r\n\r\nIt can be proved that a good tournament always exists under the given constraints. If there are multiple solutions, you may print any one of them.\r\n\r\n### Constraints\r\n- $1 \\le T \\le 400$\r\n- $6 \\le N \\le 400$\r\n- the sum of $N$ over all test cases does not exceed $4,000$\r\n\r\n### Subtasks\r\n**Subtask #1 (30 points):** $M = N-2$\r\n\r\n**Subtask #2 (40 points):** $M = \\left\\lceil\\frac{3N}{2}\\right\\rceil - 3$\r\n\r\n**Subtask #3 (30 points):** $M = 2N-11$\r\n\r\n### Example Input\r\n```\r\n1\r\n6 4\r\n1 3\r\n3 4\r\n2 6\r\n5 6\r\n```\r\n\r\n### Example Output\r\n```\r\n1 0 1 1 1\r\n0 0 0 1\r\n1 1 1\r\n1 1\r\n0\r\n```\r\n","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"https:\/\/youtu.be\/D-ldgVoSBko","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"mohammed200218","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;<\/span><span class='m-username--link'>mohammed200218<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"16-10-2020","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/constructive'>constructive<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/depth-first-search'>depth-first-search<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/graphs'>graphs<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/hard'>hard<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/ltime89'>ltime89<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/mohammed200218'>mohammed200218<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/mohammed200218'>mohammed200218<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/psychik'>psychik<\/a>","problem_difficulty_level":"Hard","user_zen_mode":false,"best_tag":"Depth First Search","editorial_url":"https:\/\/discuss.codechef.com\/problems\/EFLIP","time":{"view_start_date":1104528600,"submit_start_date":1104528600,"visible_start_date":1104528600,"end_date":1735669800,"current":1643797993},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=EFLIP","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}