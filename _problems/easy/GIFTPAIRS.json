{"category_name":"easy","status":"success","problem_code":"GIFTPAIRS","problem_name":"Hopscotch","body":"This is an example statement in markdown. This is the statement of the problem [TANDC](https:\/\/codechef.com\/problems\/TANDC) on CodeChef. The main statement starts with the next paragraph. Please make sure to remove this paragraph from your statement before publishing your problem. If your problem doesn't contain Subtasks, you should remove the section subtask too. We are using markdown the syntax of which can be seen [at](https:\/\/github.com\/showdownjs\/showdown\/wiki\/Showdown's-Markdown-syntax). We request you to not use any HTML tags in the statement, e.g. no p, ul, li, pre, br or b tags. If you face any issue, please contact admins or email us at help@codechef.com.\n\nTracy is teaching Charlie maths via a game called $N$-Cube, which involves three sections involving $N$.\n\nTracy gives Charlie a number $N$, and Charlie makes a list of $N$-th powers of integers in increasing order $1^N, 2^N, 3^N, \\dot, \\text{so on}$. This teaches him exponentiation.\n\nThen Charlie performs the following subtraction game $N$ times: Take all pairs of consecutive numbers in the list and take their difference. These differences then form the new list for the next iteration of the game. Eg, if $N$ was 6, the list proceeds as $[1, 64, 729, 4096 ... ]$ to $[63, 685, 3367 ...]$, and so on $5$ more times.\n\nAfter the subtraction game, Charlie has to correctly tell Tracy the $N$-th element of the list. This number is the *value of the game*.\n\nAfter practice Charlie became an expert in the game. To challenge him more, Tracy will give two numbers $M$ (where $M$ is a prime) and $R$ instead of just a single number $N$, and the game must start from $M_R - 1$ instead of $N$. Since the *value of the game* can now become large, Charlie just have to tell the largest integer $K$ such that $M_K$ divides this number. Since even $K$ can be large, output $K$ modulo 1000000007 ($10^9 + 7$).\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"- $1 \\leq T \\leq 10^3$\n- $1 \\leq N \\leq 10^3$\n- $0 \\leq A_i \\leq N$\n- The non-zero elements of $A$ are distinct.","constraintsState":true,"subtasks":"- 30 points : $1 \\leq R \\leq 10000$\n- 70 points : $1 \\leq R \\leq 10^9$\n","subtasksState":false,"statement":"*\"We\u2019ve already come too far to end this now\".*\n\n$N$ players advance to the fifth round and the game is going to be Hopscotch. Every player has to select one mannequin before the start of the game.\n\nPlayers are numbered $1$ to $N$. You are given an array $A$ of size $N$, where    \n* If $A_i = i$, the $i^{\\text{th}}$ player selects their own mannequin.\n* If $A_i = j$ where $j \\neq i$, the $i^{\\text{th}}$ player decides the mannequin for the $j^{\\text{th}}$ player.\n* If $A_i = 0$, the $i^{\\text{th}}$ player hasn\u2019t decided yet.\n\nThe VIPs want to know the number of ways that the undecided players can select mannequins such that everyone gets a mannequin, and no undecided players select their own mannequin.\n\n**It is guaranteed that every (non-zero) element in $A$ is unique**, i.e, if $1 \\leq i, j \\leq N$ are such that $i \\neq j, A_i > 0$, and $A_j > 0$, then $A_i \\neq A_j$.\n\nSince the answer can be very large, print it modulo $10^9 + 7$.","inputFormat":"- The first line of input contains a single integer $T$, denoting the number of test cases. The description of $T$ test cases follows.\n- The first line of each test case contains a single integer $N$ denoting the number of players.    \n- The second line contains $N$ space-separated integers, the $i^{\\text{th}}$ of which is $A_i$ as described in the statement above.\n","inputFormatState":true,"outputFormat":"For every test case, print one line containing the number of ways undecided players can select mannequins for others such that everyone receives a mannequin, modulo $10^9+7$.","outputFormatState":true,"sampleTestCases":[{"id":"1","input":"3    \n5    \n1 2 3 4 5    \n6    \n3 6 1 0 0 0    \n10    \n0 0 0 0 0 0 0 0 0 0","output":"0    \n3    \n1334961","explanation":"**Test Case 1:** There is no undecided player, so the number of ways is $0$.\n\n**Test Case 2:** There are $3$ ways for the last $3$ players to decide mannequins, all of which are listed below:\n- $4 \\rightarrow 2 , 5 \\rightarrow 4, 6 \\rightarrow 5$\n- $4 \\rightarrow 5 , 5 \\rightarrow 4, 6 \\rightarrow 2$\n- $4 \\rightarrow 5 , 5 \\rightarrow 2, 6 \\rightarrow 4$\n\nwhere $a \\rightarrow b$ means that $a$ selects the mannequin for $b$.","isDeleted":false}]},"video_editorial_url":"https:\/\/youtu.be\/nBXYM_SsaTc","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"2","source_sizelimit":"50000","problem_author":"still_me","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #684273;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>4&#9733;<\/span><span class='m-username--link'>still_me<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"12-12-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/combinatoric'>combinatoric<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/dynamic-programming'>dynamic-programming<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy'>easy<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/infi2021'>infi2021<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/still_me'>still_me<\/a>","problem_difficulty_level":"Unavailable","user_zen_mode":false,"best_tag":"Dynamic Programming","editorial_url":"https:\/\/discuss.codechef.com\/problems\/GIFTPAIRS","time":{"view_start_date":1640194200,"submit_start_date":1640194200,"visible_start_date":1640194200,"end_date":1735669800,"current":1643797817},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=GIFTPAIRS","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}