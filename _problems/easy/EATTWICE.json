{"category_name":"easy","status":"success","problem_code":"EATTWICE","problem_name":"Eat Twice","body":"### Read problems statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/COOK107\/hindi\/EATTWICE.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/COOK107\/mandarin\/EATTWICE.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/COOK107\/russian\/EATTWICE.pdf), [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/COOK107\/vietnamese\/EATTWICE.pdf), and [Bengali](https:\/\/www.codechef.com\/download\/translated\/COOK107\/bengali\/EATTWICE.pdf) as well.\n\nHasan has recently heard about Chef's restaurant, which serves the tastiest dishes. The restaurant has published a list of $N$ dishes (numbered $1$ through $N$) that will be served in the next $M$ days. For each valid $i$, the $i$-th dish will be served only on the $D_i$-th day. Hasan has investigated their tastiness and he knows that for each valid $i$, the $i$-th dish has tastiness $V_i$.\n\nHasan's budget is only large enough to try two dishes. He wants to choose these two dishes in such a way that their total (summed up) tastiness is as large as possible. However, he cannot try 2 dishes on the same day.\n\nHelp Hasan and calculate the maximum possible total tastiness of the dishes he should try.\n\n### Input\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\n- The first line of each test case contains two space-separated integers $N$ and $M$.\n- $N$ lines follow. For each valid $i$, the $i$-th of these lines contains two space-separated integers $D_i$ and $V_i$.\n\n### Output\nFor each test case, print a single line containing one integer \u2014 the maximum total tastiness.\n\n### Constraints \n- $1 \\le T \\le 1,000$\n- $2 \\le N, M \\le 10^5$\n- $1 \\le D_i \\le M$ for each valid $i$\n- $1 \\le V_i \\le 10^9$ for each valid $i$\n- there are at least two dishes that are served on different days\n- the sum of $N$ over all test cases does not exceed $10^6$\n- the sum of $M$ over all test cases does not exceed $10^6$\n\n### Example Input\n```\n2\n3 6\n5 7\n1 9\n2 5\n3 7\n5 8\n2 5\n5 10\n```\n\n### Example Output\n```\n16\n15\n```\n\n### Explanation\n**Example case 1:** The optimal solution is to try dishes $1$ and $2$.\n\n**Example case 2:** The optimal solution is to try dishes $2$ and $3$.\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"### Read problems statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/COOK107\/hindi\/EATTWICE.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/COOK107\/mandarin\/EATTWICE.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/COOK107\/russian\/EATTWICE.pdf), [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/COOK107\/vietnamese\/EATTWICE.pdf), and [Bengali](https:\/\/www.codechef.com\/download\/translated\/COOK107\/bengali\/EATTWICE.pdf) as well.\n\nHasan has recently heard about Chef's restaurant, which serves the tastiest dishes. The restaurant has published a list of $N$ dishes (numbered $1$ through $N$) that will be served in the next $M$ days. For each valid $i$, the $i$-th dish will be served only on the $D_i$-th day. Hasan has investigated their tastiness and he knows that for each valid $i$, the $i$-th dish has tastiness $V_i$.\n\nHasan's budget is only large enough to try two dishes. He wants to choose these two dishes in such a way that their total (summed up) tastiness is as large as possible. However, he cannot try 2 dishes on the same day.\n\nHelp Hasan and calculate the maximum possible total tastiness of the dishes he should try.\n\n### Input\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\n- The first line of each test case contains two space-separated integers $N$ and $M$.\n- $N$ lines follow. For each valid $i$, the $i$-th of these lines contains two space-separated integers $D_i$ and $V_i$.\n\n### Output\nFor each test case, print a single line containing one integer \u2014 the maximum total tastiness.\n\n### Constraints \n- $1 \\le T \\le 1,000$\n- $2 \\le N, M \\le 10^5$\n- $1 \\le D_i \\le M$ for each valid $i$\n- $1 \\le V_i \\le 10^9$ for each valid $i$\n- there are at least two dishes that are served on different days\n- the sum of $N$ over all test cases does not exceed $10^6$\n- the sum of $M$ over all test cases does not exceed $10^6$","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[{"id":"1","input":"2\n3 6\n5 7\n1 9\n2 5\n3 7\n5 8\n2 5\n5 10","output":"16\n15","explanation":"**Example case 1:** The optimal solution is to try dishes $1$ and $2$.\n\n**Example case 2:** The optimal solution is to try dishes $2$ and $3$.","isDeleted":false}]},"video_editorial_url":"https:\/\/youtu.be\/gHNOZmjxadU","languages_supported":"CPP14, C, JAVA, PYTH 3.6, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"kingofnumbers","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;<\/span><span class='m-username--link'>kingofnumbers<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"19-06-2019","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/cook-off'>cook-off<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/cook107'>cook107<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/kingofnumbers'>kingofnumbers<\/a>","problem_difficulty_level":"Easy","user_zen_mode":false,"best_tag":"","editorial_url":"https:\/\/discuss.codechef.com\/problems\/EATTWICE","time":{"view_start_date":1561314600,"submit_start_date":1561314600,"visible_start_date":1561314600,"end_date":1735669800,"current":1643797806},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=EATTWICE","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}