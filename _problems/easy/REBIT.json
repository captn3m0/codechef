{"category_name":"easy","status":"success","problem_code":"REBIT","problem_name":"Ready Bitwise","body":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/APRIL20\/hindi\/REBIT.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/APRIL20\/bengali\/REBIT.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/APRIL20\/mandarin\/REBIT.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/APRIL20\/russian\/REBIT.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/APRIL20\/vietnamese\/REBIT.pdf) as well.\r\n\r\nYukti found a strange paper with a Boolean expression written on it. Unfortunately, all the operands were missing from this expression. Being an innovative person, Yukti immediately created a riddle for her students based on this incomplete expression.\r\n\r\nThe students are given a string $L$ describing a valid Boolean expression, where each operand (value) is replaced by the character '#'. A valid expression is defined as one of the following:\r\n- A single term '#'.\r\n- A string in the format \"([expression1][operator][expression2])\", where [expression1] and [expression2] are valid expressions and [operator] is one of the characters '&', '|' and '^' (denoting bitwise AND, OR and XOR respectively).\r\n\r\nEach of the characters '#' in the string $L$ should be replaced by one of the characters '0', '1', 'a' and 'A', uniformly randomly and independently. Then, the resulting expression is evaluated as follows:\r\n- A Boolean value $a$ ($0$ or $1$) is chosen. Each occurrence of the character 'a' is interpreted as this value and each occurrence of 'A' is interpreted as its negation ($1-a$). The characters '0' and '1' are interpreted as the Boolean values $0$ and $1$ respectively.\r\n- Since there are two possible values of $a$, we obtain two constant Boolean expressions this way. Let's denote them by $G_0$ (when $a$ = 0) and $G_1$ (when $a$ = 1). \r\n- Let's evaluate $G_0$ and $G_1$.\r\n    - If $G_0 = G_1 = 0$, the value of the expression is '0'.\r\n    - If $G_0 = G_1 = 1$, the value of the expression is '1'.\r\n    - If $G_0 = 0$ and $G_1 = 1$, the value of the expression is 'a'.\r\n    - If $G_0 = 1$ and $G_1 = 0$, the value of the expression is 'A'.\r\n\r\nCan you find the probabilities with which the expression obtained after substituting for each character '#' evaluates to these values? It can be proved that for each of these values, the probability can be expressed as a fraction $\\frac{P}{Q}$, where $P$ and $Q$ are integers ($P \\ge 0$, $Q \\gt 0$) and $Q$ is coprime with $998,244,353$. You should compute $P \\cdot Q^{-1}$ modulo $998,244,353$ for each of these values.\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first and only line of each test case contains a single string $L$.\r\n\r\n### Output\r\nFor each test case, print a single line containing four space-separated integers \u2015 the answers corresponding to the probabilities that the value of the Boolean expression is '0', '1', 'a' or 'A' respectively.\r\n\r\n### Constraints\r\n- $1 \\le T \\le 600$\r\n- $1 \\le |L| \\le 100,000$\r\n- $L$ contains only characters '#', '(', ')', '&', '|' and '^'\r\n- the sum of $|L|$ over all test cases does not exceed $10^6$\r\n\r\n### Subtasks\r\n**Subtask #1 (30 points):** $|L| \\le 300$\r\n\r\n**Subtask #2 (70 points):** original constraints\r\n\r\n### Example Input\r\n<pre>\r\n2\r\n#\r\n(#&#)\r\n<\/pre>\r\n\r\n### Example Output\r\n```\r\n748683265 748683265 748683265 748683265\r\n436731905 935854081 811073537 811073537\r\n```\r\n\r\n### Explanation\r\n**Example case 1:** The probabilities that the value of the expression is '0', '1', 'a' or 'A' are all equal to $1\/4$.\r\n\r\n**Example case 2:** There can be total 16 different expressions. Out of which :\r\n\r\nFor : (1&1)  ---&gt; $G_0 = G_1 = 1$, Probability for 1 = $1\/16$ \r\n\r\n(a&1) , (1&a) , (a&a) ---&gt; $G_0 = 0$ and $G_1 = 1$, Probability for 'a' = $3\/16$ \r\n\r\n(A&1) , (1&A) , (A&A) ----&gt; $G_0 = 1$ and $G_1 = 0$, Probability for 'A' = $3\/16$\r\n\r\nRest all expressions have $G_0 = G_1 = 0$, Probability for '0' = $9\/16$ \r\n\r\nProbability are expressed as mentioned in Problem Statement.\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/APRIL20\/hindi\/REBIT.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/APRIL20\/bengali\/REBIT.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/APRIL20\/mandarin\/REBIT.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/APRIL20\/russian\/REBIT.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/APRIL20\/vietnamese\/REBIT.pdf) as well.\r\n\r\nYukti found a strange paper with a Boolean expression written on it. Unfortunately, all the operands were missing from this expression. Being an innovative person, Yukti immediately created a riddle for her students based on this incomplete expression.\r\n\r\nThe students are given a string $L$ describing a valid Boolean expression, where each operand (value) is replaced by the character '#'. A valid expression is defined as one of the following:\r\n- A single term '#'.\r\n- A string in the format \"([expression1][operator][expression2])\", where [expression1] and [expression2] are valid expressions and [operator] is one of the characters '&', '|' and '^' (denoting bitwise AND, OR and XOR respectively).\r\n\r\nEach of the characters '#' in the string $L$ should be replaced by one of the characters '0', '1', 'a' and 'A', uniformly randomly and independently. Then, the resulting expression is evaluated as follows:\r\n- A Boolean value $a$ ($0$ or $1$) is chosen. Each occurrence of the character 'a' is interpreted as this value and each occurrence of 'A' is interpreted as its negation ($1-a$). The characters '0' and '1' are interpreted as the Boolean values $0$ and $1$ respectively.\r\n- Since there are two possible values of $a$, we obtain two constant Boolean expressions this way. Let's denote them by $G_0$ (when $a$ = 0) and $G_1$ (when $a$ = 1). \r\n- Let's evaluate $G_0$ and $G_1$.\r\n    - If $G_0 = G_1 = 0$, the value of the expression is '0'.\r\n    - If $G_0 = G_1 = 1$, the value of the expression is '1'.\r\n    - If $G_0 = 0$ and $G_1 = 1$, the value of the expression is 'a'.\r\n    - If $G_0 = 1$ and $G_1 = 0$, the value of the expression is 'A'.\r\n\r\nCan you find the probabilities with which the expression obtained after substituting for each character '#' evaluates to these values? It can be proved that for each of these values, the probability can be expressed as a fraction $\\frac{P}{Q}$, where $P$ and $Q$ are integers ($P \\ge 0$, $Q \\gt 0$) and $Q$ is coprime with $998,244,353$. You should compute $P \\cdot Q^{-1}$ modulo $998,244,353$ for each of these values.\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first and only line of each test case contains a single string $L$.\r\n\r\n### Output\r\nFor each test case, print a single line containing four space-separated integers \u2015 the answers corresponding to the probabilities that the value of the Boolean expression is '0', '1', 'a' or 'A' respectively.\r\n\r\n### Constraints\r\n- $1 \\le T \\le 600$\r\n- $1 \\le |L| \\le 100,000$\r\n- $L$ contains only characters '#', '(', ')', '&', '|' and '^'\r\n- the sum of $|L|$ over all test cases does not exceed $10^6$\r\n\r\n### Subtasks\r\n**Subtask #1 (30 points):** $|L| \\le 300$\r\n\r\n**Subtask #2 (70 points):** original constraints","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[{"id":"1","input":"\r\n2\r\n#\r\n(#&#)\r\n","output":"748683265 748683265 748683265 748683265\r\n436731905 935854081 811073537 811073537","explanation":"**Example case 1:** The probabilities that the value of the expression is '0', '1', 'a' or 'A' are all equal to $1\/4$.\r\n\r\n**Example case 2:** There can be total 16 different expressions. Out of which :\r\n\r\nFor : (1&1)  ---&gt; $G_0 = G_1 = 1$, Probability for 1 = $1\/16$ \r\n\r\n(a&1) , (1&a) , (a&a) ---&gt; $G_0 = 0$ and $G_1 = 1$, Probability for 'a' = $3\/16$ \r\n\r\n(A&1) , (1&A) , (A&A) ----&gt; $G_0 = 1$ and $G_1 = 0$, Probability for 'A' = $3\/16$\r\n\r\nRest all expressions have $G_0 = G_1 = 0$, Probability for '0' = $9\/16$ \r\n\r\nProbability are expressed as mentioned in Problem Statement.","isDeleted":false}]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"krikti","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;<\/span><span class='m-username--link'>krikti<\/span>","problem_tester":null,"problem_tester_html_handle":"","date_added":"17-01-2020","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/april20'>april20<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy-medium'>easy-medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/implementation'>implementation<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/krikti'>krikti<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/probability'>probability<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/taran_1407'>taran_1407<\/a>","problem_difficulty_level":"Easy-Medium","user_zen_mode":false,"best_tag":"","editorial_url":"https:\/\/discuss.codechef.com\/problems\/REBIT","time":{"view_start_date":1586779202,"submit_start_date":1586779202,"visible_start_date":1586779202,"end_date":1735669800,"current":1643797869},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=REBIT","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}