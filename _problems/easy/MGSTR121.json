{"category_name":"easy","status":"success","problem_code":"MGSTR121","problem_name":"K - Magical String","body":"You have been given a string $S$ of size $N$ which consists of **uppercase characters** only. A  $K$-Magical String is a string in which the longest **non - decreasing subsequence** is of size exactly $K$.\r\n\r\nYou have been given $Q$ queries where each query is in the form $L, R,$ and $K$.\r\nFor each query, check whether substring from index $L$ to index $R$ can be converted into a $K$-Magical String or not by rearranging its characters and print the final rearranged string too. \r\n\r\nIf there exist multiple answers, print the **lexicographically largest** string possible.\r\n  \r\n**Note:** \r\n- Each query will be treated independently i.e. after each query the string will remain the same as it was initially. \r\n- The input files are large. The use of Fast I\/O is recommended.\r\n\r\n\r\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"- $1 \\leq T \\leq 100$\n- $1 \\leq N \\leq 10^5$\n- $1 \\leq Q \\leq 10^5$\n- $1 \\leq L \\leq R \\leq N$\n- $1 \\leq K \\leq N$\n- The sum of $( R - L + 1 )$ over all $Q$ queries over all test cases whose answer is `\"Yes\"` is less than or equal to $10^6$.","constraintsState":true,"subtasks":"","subtasksState":false,"statement":"You have been given a string $S$ of size $N$ which consists of **uppercase characters** only. A  $K$-Magical String is a string in which the longest **non - decreasing subsequence** is of size exactly $K$.\n\nYou have been given $Q$ queries where each query is in the form $L, R,$ and $K$.\nFor each query, check whether substring from index $L$ to index $R$ can be converted into a $K$-Magical String or not by rearranging its characters and print the final rearranged string too. \n\nIf there exist multiple answers, print the **lexicographically largest** string possible.\n  \n**Note:** \n- Each query will be treated independently i.e. after each query the string will remain the same as it was initially. \n- The input files are large. The use of Fast I\/O is recommended.\n\n\n","inputFormat":"- The first line contains\u00a0$T$\u00a0denoting\u00a0the number\u00a0of test cases.\n- The first line of each test case contains an\u00a0integer\u00a0$N$\u00a0denoting the length of the string.\n- The second line of each test case contains the string\u00a0$S$\u00a0given in question.\n- The third line of the test case contains\u00a0an integer\u00a0$Q$\u00a0denoting the number of queries.\n- Next, $Q$\u00a0lines contain three space-separated integers\u00a0$L, R,$ and $K$.\n\n","inputFormatState":true,"outputFormat":"For each query in each test case, print\u00a0`\"Yes\"`\u00a0if it is possible to rearrange the characters of that substring such that it can be converted into $K$-Magical string and print the rearranged string\u00a0else print `\"No\"`\u00a0without quotes.\n\nYou may print each character of the string in uppercase or lowercase (for example, the strings \"yEs\", \"yes\", \"Yes\" and \"YES\" will all be treated as identical).","outputFormatState":true,"sampleTestCases":[{"id":"1","input":"1\n9\nEFDAABCBD\n4\n1 9 6\n6 8 1\n4 7 3\n1 2 1","output":"Yes\nFEDAABBCD\nNo\nYes\nCAAB\nYes\nFE","explanation":"**Test case $1$**: \n\n**For the first query :** \n$L = 1, R = 9, K = 6$ , the substring we are concerned with is `\"EFDAABCBD\"`, we can rearrange its characters to `\"FEDAABBCD\"`. Now, as it has the longest non-decreasing subsequence of size exactly $K = 6$ (The longest non decreasing subsequence being `\"AABBCD\"`). Therefore, the answer to this query is \"Yes\".\n\n**For the second query:** \n$L = 6, R = 8, K = 1$, the substring is `\"BCB\"`, as there is no way in which we could rearrange the characters such that the longest non decreasing subsequence could become of size exactly $K = 1$. Therefore, the answer to this query is \"No\".\n\n**For the third query:**\n$L = 4, R = 7, K = 3$ , the substring is `\"AABC\"`, we can rearrange its characters to `\"CAAB\"`. Now, as this string has the longest non-decreasing subsequence of size exactly $K = 3$ and the subsequence will be `\"AAB\"`. Therefore the answer to this query is \"Yes\".\n\n**For the fourth query:**\n $L = 1, R = 2, K = 1$, the substring is `\"EF\"`, we can rearrange its characters to `\"FE\"` . Now, as this string has the longest non-decreasing subsequence of size exactly $K  = 1$ and the subsequence will be `\"F\"`. Therefore the answer to this query is \"Yes\".","isDeleted":false}]},"video_editorial_url":"https:\/\/youtu.be\/5hace8uYXPc","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"mystic_ankush","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;<\/span><span class='m-username--link'>mystic_ankush<\/span>","problem_tester":"mexomerf","problem_tester_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;<\/span><span class='m-username--link'>mexomerf<\/span>","date_added":"24-09-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/easy'>easy<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/mystic_ankush'>mystic_ankush<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/prefix-sum'>prefix-sum<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/start16'>start16<\/a>","problem_difficulty_level":"Easy","user_zen_mode":false,"best_tag":"Prefix Sum","editorial_url":"https:\/\/discuss.codechef.com\/problems\/MGSTR121","time":{"view_start_date":1634751002,"submit_start_date":1634751002,"visible_start_date":1634751002,"end_date":1735669800,"current":1643797845},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=MGSTR121","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}