{"category_name":"easy","status":"success","problem_code":"MKGPLNKS","problem_name":"Magical Planks","body":"Ryan is a small town boy who has been given a task by his father. He has $N$ wooden planks, numbered from $1$ to $N$, which are colored either black or white.  \n\n\nHis task is to color all planks the same color! But there is some magic in the winds of his small town. Whenever he colors a plank of some color $C$ to color $P$, the neighboring planks which also have their color $C$ ,gets colored automatically to $P$. Now this process continues for the newly colored planks also. If none of the neighbors have same color, then nothing happens to the neighbors.  \n\n\nSuppose Ryan has planks which have their coloring : $B B W W W B$ \nIf Ryan colors the forth plank( of color $W$ ) to $B$, then the following will  happen to the planks: \n\n $B B B B B B$ \n\n\nYou have to determine the minimum number of planks Ryan has to paint so that all planks have the same color.Ryan can paint any plank to the color of his choice.\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"- $1 \\leq T \\leq 10^{5}$\n- $1 \\leq N \\leq 10^5$\n-  $S$ consists only of characters $B$ and $W$ \n- The sum of $N$ over all cases doesn't exceed $10^{5}$.\n","constraintsState":true,"subtasks":"","subtasksState":false,"statement":"Ryan is a boy from a small town,  who has been given a task by his father. He has $N$ wooden planks, numbered from $1$ to $N$, which are colored either black or white.  \n\n\nHis task is to color all planks the same color! But there is some magic in the winds of his small town. Whenever he colors the $i^{th}$ ( plank which has the color $S_i$ ) to a color $P$ then following events happen: \n - if $2 \\leq i \\leq N$ and $S_i = S_{i - 1}$, then color of $(i - 1)^{th}$ plank changes to $P$.\n - if $1 \\leq i \\leq N - 1$ and $S_i = S_{i + 1}$, then color of $(i + 1)^{th}$ plank changes to $P$. \n\nNow this process continues for the newly colored planks also. If none of the neighbors have same color, then nothing happens to the neighbors.  \n\n\nSuppose Ryan has planks which have their coloring : $B B W W W B$ \nIf Ryan colors the fourth plank( whose color is $W$ ) to color $B$, then the finally the planks would be colored as following: \n\n $B B B B B B$ \n\nRyan can choose any **one** of the $N$ planks and change its color as many times as he wants. Determine the minimum number of times Ryan has to paint a plank such that all planks get the same color at the end.","inputFormat":"- First line will contain $T$, number of testcases. Then the testcases follow.\n- The first line of each test case consists of an integer $N$ the number of planks\n- Second line of each test case consists of a string $S$ of size $N$,where the $i$ th character denotes the color of plank $i$ \n \n","inputFormatState":true,"outputFormat":"For each testcase, output a single integer denoting the minimum number of times Ryan has to paint a **single** plank such that all planks get the same color at the end.\n","outputFormatState":true,"sampleTestCases":[{"id":"1","input":"4\n6\nBBWWWB\n5\nWWBWB\n2\nBB\n9\nWWBBBBBWW\n","output":"1\n2\n0\n1\n","explanation":"**Test case 1:**\nThe first test case is already described in the question.\n\n**Test case 2:**\nRyan can paint the third plank to $W$. After doing so the color string of planks become $W W W W B$. Then he can again paint the third plank to the color $B$. \nAfter doing so the string goes through following transitions:\n - The color of **third** plank changes to $B$. ( The string becomes $W W B W B$ )\n - The color of **second** and **fourth** plank changes to $B$. ( The string becomes $W B B B B$ )\n - The color of **first** plank changes to $B$. ( The string becomes $B B B B B$ )\n\nFinally, all planks have same color.\n\n**Test case 3:**\nAll planks have the same color.\n\n**Test case 4:**\nRyan can paint any of the planks numbered from $3$ to $7$ to $W$, and all these planks will be colored to $W$!","isDeleted":false}]},"video_editorial_url":"https:\/\/youtu.be\/s70OfH-TuQo","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"0.5","source_sizelimit":"50000","problem_author":"need_for_code","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #684273;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>4&#9733;<\/span><span class='m-username--link'>need_for_code<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"5-10-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/fzbz2021'>fzbz2021<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/fzbz2021'>fzbz2021<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/need_for_code'>need_for_code<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/simple'>simple<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/simple'>simple<\/a>","problem_difficulty_level":"Simple","user_zen_mode":false,"best_tag":"","editorial_url":"https:\/\/discuss.codechef.com\/problems\/MKGPLNKS","time":{"view_start_date":1637951400,"submit_start_date":1637951400,"visible_start_date":1637951400,"end_date":1735669800,"current":1643797847},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=MKGPLNKS","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}