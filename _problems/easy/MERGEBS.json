{"category_name":"easy","status":"success","problem_code":"MERGEBS","problem_name":"Merging Binary Strings","body":"This is an example statement in markdown. This is the statement of the problem [TANDC](https:\/\/codechef.com\/problems\/TANDC) on CodeChef. The main statement starts with the next paragraph. Please make sure to remove this paragraph from your statement before publishing your problem. If your problem doesn't contain Subtasks, you should remove the section subtask too. We are using markdown the syntax of which can be seen [at](https:\/\/github.com\/showdownjs\/showdown\/wiki\/Showdown's-Markdown-syntax). We request you to not use any HTML tags in the statement, e.g. no p, ul, li, pre, br or b tags. If you face any issue, please contact admins or email us at help@codechef.com.\n\nTracy is teaching Charlie maths via a game called $N$-Cube, which involves three sections involving $N$.\n\nTracy gives Charlie a number $N$, and Charlie makes a list of $N$-th powers of integers in increasing order $1^N, 2^N, 3^N, \\dot, \\text{so on}$. This teaches him exponentiation.\n\nThen Charlie performs the following subtraction game $N$ times: Take all pairs of consecutive numbers in the list and take their difference. These differences then form the new list for the next iteration of the game. Eg, if $N$ was 6, the list proceeds as $[1, 64, 729, 4096 ... ]$ to $[63, 685, 3367 ...]$, and so on $5$ more times.\n\nAfter the subtraction game, Charlie has to correctly tell Tracy the $N$-th element of the list. This number is the *value of the game*.\n\nAfter practice Charlie became an expert in the game. To challenge him more, Tracy will give two numbers $M$ (where $M$ is a prime) and $R$ instead of just a single number $N$, and the game must start from $M_R - 1$ instead of $N$. Since the *value of the game* can now become large, Charlie just have to tell the largest integer $K$ such that $M_K$ divides this number. Since even $K$ can be large, output $K$ modulo 1000000007 ($10^9 + 7$).\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"- $1 \\leq T \\leq 1000$\n- $1 \\leq N \\leq 1000$\n- It is guaranteed that the sum of $N$ over all test cases does not exceed $2000$.\n- $|A| = |B| = N$\n- $A$ and $B$ are binary strings, i.e, contain only $0$ and $1$.\n","constraintsState":true,"subtasks":"","subtasksState":true,"statement":"You have two binary strings $A$ and $B$, both of length $N$. You have to merge both the binary strings to form a new binary string $C$ of length $2 \\cdot N$. The relative order of characters in the original binary strings $A$ and $B$ should not change in the binary string $C$.\n\nFor example, if $A = {\\color{blue}01011}$ and $B = {\\color{red}10100}$, one possible way to merge them to form $C$ is: $C = {\\color{blue}0}{\\color{red}1}{\\color{red}0}{\\color{blue}1}{\\color{red}1}{\\color{blue}0}{\\color{blue}1}{\\color{blue}1}{\\color{red}0}{\\color{red}0}$.\n\n**Minimize** the number of inversions in the merged binary string $C$.\n\nAs a reminder, a pair of indices $(i, j)$ is an inversion for binary string $C$ if and only if $1 \\leq i \\lt j \\leq |C|$, $C_i = 1$ and $C_j = 0$.","inputFormat":"- The first line of input contains a single integer $T$, denoting the number of test cases. The description of $T$ test cases follows.\n- The first line of each test case contains a single integer $N$ \u2014 the length of the binary strings $A$ and $B$.\n- The second line of each test case contains the binary string $A$.\n- The third line of each test case contains the binary string $B$.\n","inputFormatState":true,"outputFormat":"For each test case, output a single line containing the **minimum** number of inversions in the merged binary string $C$.\n","outputFormatState":true,"sampleTestCases":[{"id":"1","input":"3\n4\n1010\n0101\n5\n10010\n11001\n5\n00001\n11110\n","output":"6\n12\n4\n","explanation":"**Test Case $1$:** $A = {\\color{blue}1010}$ and $B = {\\color{red}0101}$. One optimal $C$ is ${\\color{red}0}{\\color{blue}1}{\\color{blue}0}{\\color{red}1}{\\color{red}0}{\\color{blue}1}{\\color{blue}0}{\\color{red}1}$. The $6$ inversions in this $C$ are $\\{(2, 3), (2, 5), (2, 7), (4, 5), (4, 7), (6, 7)\\}$.\n\n**Test Case $2$:** $A = {\\color{blue}10010}$ and $B = {\\color{red}11001}$. One optimal $C$ is ${\\color{blue}1}{\\color{blue}0}{\\color{blue}0}{\\color{red}1}{\\color{red}1}{\\color{red}0}{\\color{red}0}{\\color{blue}1}{\\color{blue}0}{\\color{red}1}$.\n\n**Test Case $3$:** $A = {\\color{blue}00001}$ and $B = {\\color{red}11110}$. One optimal $C$ is ${\\color{blue}0}{\\color{blue}0}{\\color{blue}0}{\\color{blue}0}{\\color{red}1}{\\color{red}1}{\\color{red}1}{\\color{red}1}{\\color{red}0}{\\color{blue}1}$.","isDeleted":false}]},"video_editorial_url":"https:\/\/youtu.be\/P-G0R7zGoBA","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"jeevanjyot","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;<\/span><span class='m-username--link'>jeevanjyot<\/span>","problem_tester":"aryanc403","problem_tester_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;<\/span><span class='m-username--link'>aryanc403<\/span>","date_added":"16-01-2022","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/dynamic-programming'>dynamic-programming<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy-medium'>easy-medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/jeevanjyot'>jeevanjyot<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/start22'>start22<\/a>","problem_difficulty_level":"Unavailable","user_zen_mode":false,"best_tag":"Dynamic Programming","editorial_url":"https:\/\/discuss.codechef.com\/problems\/MERGEBS","time":{"view_start_date":1642613400,"submit_start_date":1642613400,"visible_start_date":1642613400,"end_date":1735669800,"current":1643797843},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=MERGEBS","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}