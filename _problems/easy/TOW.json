{"category_name":"easy","status":"success","problem_code":"TOW","problem_name":"Tug of War","body":"This is an example statement in markdown. This is the statement of the problem [TANDC](https:\/\/codechef.com\/problems\/TANDC) on CodeChef. The main statement starts with the next paragraph. Please make sure to remove this paragraph from your statement before publishing your problem. If your problem doesn't contain Subtasks, you should remove the section subtask too. We are using markdown the syntax of which can be seen [at](https:\/\/github.com\/showdownjs\/showdown\/wiki\/Showdown's-Markdown-syntax). We request you to not use any HTML tags in the statement, e.g. no p, ul, li, pre, br or b tags. If you face any issue, please contact admins or email us at help@codechef.com.\n\nTracy is teaching Charlie maths via a game called $N$-Cube, which involves three sections involving $N$.\n\nTracy gives Charlie a number $N$, and Charlie makes a list of $N$-th powers of integers in increasing order $1^N, 2^N, 3^N, \\dot, \\text{so on}$. This teaches him exponentiation.\n\nThen Charlie performs the following subtraction game $N$ times: Take all pairs of consecutive numbers in the list and take their difference. These differences then form the new list for the next iteration of the game. Eg, if $N$ was 6, the list proceeds as $[1, 64, 729, 4096 ... ]$ to $[63, 685, 3367 ...]$, and so on $5$ more times.\n\nAfter the subtraction game, Charlie has to correctly tell Tracy the $N$-th element of the list. This number is the *value of the game*.\n\nAfter practice Charlie became an expert in the game. To challenge him more, Tracy will give two numbers $M$ (where $M$ is a prime) and $R$ instead of just a single number $N$, and the game must start from $M_R - 1$ instead of $N$. Since the *value of the game* can now become large, Charlie just have to tell the largest integer $K$ such that $M_K$ divides this number. Since even $K$ can be large, output $K$ modulo 1000000007 ($10^9 + 7$).\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"- $1 \\leq T \\leq 10^4$\n- $1 \\leq N,M \\leq 10^6$\n- $1 \\leq A_i,B_j \\leq 10^9$ ($1 \\leq i \\leq N$, $1 \\leq j \\leq M$)\n- Sum of $N$ and $M$ across all test cases will not exceed $10^6$\n\n","constraintsState":true,"subtasks":"- 30 points : $1 \\leq R \\leq 10000$\n- 70 points : $1 \\leq R \\leq 10^9$\n","subtasksState":false,"statement":"*\"Stick with the strongest team, that's the only way.\"*\n\nGi-Hun and his mates have survived the deadly night, but now it\u2019s time for the tug of war. The game proceeds as follows:\n\nTwo teams have to face off against each other in a tug of war match. The match proceeds in a series of rounds as follows:\n- Initially, one player from each team will come forward to play.\n- The one who wins the round will stay in, while the loser is eliminated. If the round is a draw, both players are eliminated.\n- When a member of a team is eliminated, that team then sends another person to play in the next round.\n- This process continues as long as both teams have at least one player left.\n\nNote that if a player wins their round, **they must stay in** for the next round \u2014 they cannot be replaced by another player.\n\nA team is said to win the match if **it has at least $1$ player remaining, while all players of the opponent's team are eliminated. If both teams have no players left, the match is said to be a draw.**\n\nGi-Hun has to come up with a strategy for his team to win the game. He saw the opponent queue of $N$ players, where their $i^{\\text{th}}$ player has strength $A_i$. He also knows that the opponent will send the players in the same order as they appear in $A$. Formally for any two players $i$ and $j$ where $i<j$, player $i$ will always play before player $j$. He also knows the strength of his $M$ players \u2014 the $i^{\\text{th}}$ player of his team has strength $B_i$. \n\nFurther, Gi-Hun knows that when two players play against each other, **the player with higher strength always wins. If both players have equal strength, the round is a draw.**\n\nNow, he wants to know whether they can win a match or not, and if they can, what is the ordering of his team players that will let them win. In case multiple orderings are possible, he would like to know the lexicographically smallest ordering.\n\nAn array $X$ is [lexicographically smaller](https:\/\/en.wikipedia.org\/wiki\/Lexicographical_order) than an array $Y$ if there exists an index $i$ such that $X_i$ < $Y_i$, and $X_j=Y_j$ for all $1 \\leq j \\lt i$. Less formally, at the first index $i$ in which they differ, $X_i$ < $Y_i$.\n","inputFormat":"- The first line of input contains a single integer $T$, denoting the number of test cases. The description of $T$ test cases follows.\n- The first line of each test case contains two space-separated integers $N$ and $M$ \u2014 the sizes of the opponent team and Gi-Hun's team, respectively.\n- The second line of each test case contains $N$ space-separated integers, $A_1, A_2, \\ldots, A_N$ \u2014 the strengths of the opponents, in order.\n- The third line of each test case contains $M$ space-separated integers, $B_1, B_2, \\ldots, B_M$ \u2014 the strengths of Gi-Hun's team.\n","inputFormatState":true,"outputFormat":"- The first line of each test case should contain a single string, either \u201cYES\u201d or \u201cNO\u201d, denoting whether it is possible for Gi-Hun's team to win or not.\n- If the first line contains \"YES\", print a second line containing $M$ space-separated integers \u2014 the lexicographically smallest ordering which will allow Gi-Hun's team to win.\n","outputFormatState":true,"sampleTestCases":[{"id":"1","input":"5\n3 1\n4 3 5\n6\n3 3\n2 4 7\n2 3 7\n3 3\n2 7 4\n2 7 3\n4 4\n2 6 5 1\n4 6 5 2\n2 2\n7 4\n7 4\n","output":"YES\n6\nYES\n2 7 3\nNO\nYES\n2 6 5 4\nNO\n","explanation":"**Test Case 1:** There is only one possible ordering, that being $[6]$. The match will proceed as follows:\n\n- Round 1: $B_1 = 6$ will defeat $A_1 = 4$, $A_1$ is eliminated.\n- Round 2: $B_1 = 6$ will defeat $A_2 = 3$, $A_2$ is eliminated.\n- Round 3: $B_1 = 6$ will defeat $A_3 = 5$, $A_3$ is eliminated.\n\n$B_1$ still remains and all opponents have been defeated, making this a victory for Gi-Hun's team.\n\n**Test Case 2:** The ordering which result in victory are $[2,7,3],[3,7,2],[7,2,3]$, and $[7,3,2]$. Of these, the lexicographically smallest is $[2, 7, 3]$.\n\nLet $Q = [2, 7, 3]$. The match proceeds as follows:\n- Round 1: $Q_1 = 2$ will draw with $A_1 = 2$, eliminating both.\n- Round 2: $Q_2 = 7$ will defeat $A_2 = 4$, eliminating $A_2$.\n- Round 3: $Q_2 = 7$ will draw with $A_3 = 7$, eliminating both.\n\n$Q_3 = 3$ still remains, so Gi-Hun's team wins.\n\n**Test Case 3:** It is not possible to win the match.\n","isDeleted":false}]},"video_editorial_url":"https:\/\/youtu.be\/R6PRY98K7WI","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"aman1108","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;<\/span><span class='m-username--link'>aman1108<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"10-12-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/aman1108'>aman1108<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/binary-search'>binary-search<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/constructive'>constructive<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy'>easy<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/infi2021'>infi2021<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/two-pointers'>two-pointers<\/a>","problem_difficulty_level":"Unavailable","user_zen_mode":false,"best_tag":"Binary Search","editorial_url":"https:\/\/discuss.codechef.com\/problems\/TOW","time":{"view_start_date":1640194200,"submit_start_date":1640194200,"visible_start_date":1640194200,"end_date":1735669800,"current":1643797897},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=TOW","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}