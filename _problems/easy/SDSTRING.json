{"category_name":"easy","status":"success","problem_code":"SDSTRING","problem_name":"Self-Destructing Strings","body":"### Read problems statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/COOK125\/hindi\/SDSTRING.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/COOK125\/mandarin\/SDSTRING.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/COOK125\/russian\/SDSTRING.pdf), [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/COOK125\/vietnamese\/SDSTRING.pdf), and [Bengali](https:\/\/www.codechef.com\/download\/translated\/COOK125\/bengali\/SDSTRING.pdf) as well.\r\n\r\nA binary string is called a *self-destructing string* if it can reduced to an empty string by performing the following operation some number of times (possibly zero): Choose a valid integer $i$ such that the $i$-th character of the current string is different from the $i+1$-th character, and remove these two characters from the string.\r\n\r\nYou are given a binary string $s$. Your task is to convert $s$ to a self-destructing string. To do that, you may perform the following operation any number of times (possibly zero): Choose an integer $i$ ($1 \\le i \\le |s|-1$) such that the $i$-th character of $s$ is different from the $i+1$-th character, and invert one of these characters (inverting a character means changing '0' to '1' or '1' to '0', e.g. the string \"01\" can be changed to \"00\").\r\n\r\nFind the smallest number of operations required to convert $s$ to a self-destructing string or determine that it is impossible.\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first and only line of each test case contains a single string $s$.\r\n\r\n### Output\r\nFor each test case, print a single line containing one integer \u2015 the smallest required number of operations or $-1$ if it is impossible to convert $s$ to a self-destructing string.\r\n\r\n### Constraints\r\n- $1 \\le T \\le 1,000$\r\n- $1 \\le |s| \\le 10^6$\r\n- $s$ contains only characters '0' and '1'\r\n- the sum of $|s|$ over all test cases does not exceed $10^6$\r\n\r\n### Example Input\r\n```\r\n3\r\n001101\r\n1101\r\n110\r\n```\r\n\r\n### Example Output\r\n```\r\n0\r\n1\r\n-1\r\n```\r\n\r\n### Explanation\r\n**Example case 1:** We already have a self-destructing string because \"0**01**101\" can be converted to \"0**10**1\", to \"**01**\" and finally to an empty string.\r\n\r\n**Example case 2:** We can choose $i=3$ (since $s_3 \\neq s_4$) and then invert $s_4$ to obtain \"1100\", which is a self-destructing string.\r\n\r\n**Example case 3:** It can be shown that \"110\" cannot be converted to a self-destructing string.\r\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"### Read problems statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/COOK125\/hindi\/SDSTRING.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/COOK125\/mandarin\/SDSTRING.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/COOK125\/russian\/SDSTRING.pdf), [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/COOK125\/vietnamese\/SDSTRING.pdf), and [Bengali](https:\/\/www.codechef.com\/download\/translated\/COOK125\/bengali\/SDSTRING.pdf) as well.\r\n\r\nA binary string is called a *self-destructing string* if it can reduced to an empty string by performing the following operation some number of times (possibly zero): Choose a valid integer $i$ such that the $i$-th character of the current string is different from the $i+1$-th character, and remove these two characters from the string.\r\n\r\nYou are given a binary string $s$. Your task is to convert $s$ to a self-destructing string. To do that, you may perform the following operation any number of times (possibly zero): Choose an integer $i$ ($1 \\le i \\le |s|-1$) such that the $i$-th character of $s$ is different from the $i+1$-th character, and invert one of these characters (inverting a character means changing '0' to '1' or '1' to '0', e.g. the string \"01\" can be changed to \"00\").\r\n\r\nFind the smallest number of operations required to convert $s$ to a self-destructing string or determine that it is impossible.\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first and only line of each test case contains a single string $s$.\r\n\r\n### Output\r\nFor each test case, print a single line containing one integer \u2015 the smallest required number of operations or $-1$ if it is impossible to convert $s$ to a self-destructing string.\r\n\r\n### Constraints\r\n- $1 \\le T \\le 1,000$\r\n- $1 \\le |s| \\le 10^6$\r\n- $s$ contains only characters '0' and '1'\r\n- the sum of $|s|$ over all test cases does not exceed $10^6$","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[{"id":"1","input":"3\r\n001101\r\n1101\r\n110","output":"0\r\n1\r\n-1","explanation":"**Example case 1:** We already have a self-destructing string because \"0**01**101\" can be converted to \"0**10**1\", to \"**01**\" and finally to an empty string.\r\n\r\n**Example case 2:** We can choose $i=3$ (since $s_3 \\neq s_4$) and then invert $s_4$ to obtain \"1100\", which is a self-destructing string.\r\n\r\n**Example case 3:** It can be shown that \"110\" cannot be converted to a self-destructing string.","isDeleted":false}]},"video_editorial_url":"https:\/\/youtu.be\/V_JCVoIskQ4","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"jeevanjyot","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;<\/span><span class='m-username--link'>jeevanjyot<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"11-12-2020","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/cook125'>cook125<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/jeevanjyot'>jeevanjyot<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/observation'>observation<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/rajarshi_basu'>rajarshi_basu<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/simple'>simple<\/a>","problem_difficulty_level":"Simple","user_zen_mode":false,"best_tag":"","editorial_url":"https:\/\/discuss.codechef.com\/problems\/SDSTRING","time":{"view_start_date":1104528600,"submit_start_date":1104528600,"visible_start_date":1104528600,"end_date":1735669800,"current":1643797877},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=SDSTRING","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}