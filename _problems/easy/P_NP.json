{"category_name":"easy","status":"success","problem_code":"P_NP","problem_name":"P Equal To NP","body":"This is an example statement in markdown. This is the statement of the problem [TANDC](https:\/\/codechef.com\/problems\/TANDC) on CodeChef. The main statement starts with the next paragraph. Please make sure to remove this paragraph from your statement before publishing your problem. If your problem doesn't contain Subtasks, you should remove the section subtask too. We are using markdown the syntax of which can be seen [at](https:\/\/github.com\/showdownjs\/showdown\/wiki\/Showdown's-Markdown-syntax). We request you to not use any HTML tags in the statement, e.g. no p, ul, li, pre, br or b tags. If you face any issue, please contact admins or email us at help@codechef.com.\n\nTracy is teaching Charlie maths via a game called $N$-Cube, which involves three sections involving $N$.\n\nTracy gives Charlie a number $N$, and Charlie makes a list of $N$-th powers of integers in increasing order $1^N, 2^N, 3^N, \\dot, \\text{so on}$. This teaches him exponentiation.\n\nThen Charlie performs the following subtraction game $N$ times: Take all pairs of consecutive numbers in the list and take their difference. These differences then form the new list for the next iteration of the game. Eg, if $N$ was 6, the list proceeds as $[1, 64, 729, 4096 ... ]$ to $[63, 685, 3367 ...]$, and so on $5$ more times.\n\nAfter the subtraction game, Charlie has to correctly tell Tracy the $N$-th element of the list. This number is the *value of the game*.\n\nAfter practice Charlie became an expert in the game. To challenge him more, Tracy will give two numbers $M$ (where $M$ is a prime) and $R$ instead of just a single number $N$, and the game must start from $M_R - 1$ instead of $N$. Since the *value of the game* can now become large, Charlie just have to tell the largest integer $K$ such that $M_K$ divides this number. Since even $K$ can be large, output $K$ modulo 1000000007 ($10^9 + 7$).\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"- $1 \\leq T \\leq 3.5 \\cdot 10^4$\n- $3 \\leq |S| \\leq 10^5$\n- $S$ contains only characters $\\verb+N+$ and $\\verb+P+$\n- $|S|$ is a multiple of $3$\n- Sum of $|S|$ over all test cases does not exceed $10^6$\n","constraintsState":true,"subtasks":"","subtasksState":false,"statement":"You are given a string $S$, each character of which is either $\\verb+N+$ or $\\verb+P+$. In one move, you can perform the following operation:\n\n- Pick an index $1 \\leq i \\leq |S|$ and flip $S_i$, i.e, if $S_i = \\verb+N+$ set it to $\\verb+P+$ and vice versa.\n\nFind the minimum number of moves required to obtain a string such that there exists a way to split it into several continuous substrings, each of which is either $\\verb+P+$ or $\\verb+NP+$, and the number of $\\verb+P+$ substrings in this splitting equals the number of $\\verb+NP+$ substrings.\n\nFor example, $\\verb+NPP+$ and $\\verb+PNPPNP+$ can be split this way (into $\\verb+NP+$ + $\\verb+P+$ and $\\verb+P+$ + $\\verb+NP+$ + $\\verb+P+$ + $\\verb+NP+$ respectively) but $\\verb+NNPP+$ cannot.","inputFormat":"- The first line of input contains a single integer $T$, denoting the number of test cases. The description of $T$ test cases follows.\n- The first and only line of input of each test case contains the string $S$.\n","inputFormatState":true,"outputFormat":"For each test case, output a single line containing one integer \u2014 the minimum number of moves required to transform the string into the desired form.\n","outputFormatState":true,"sampleTestCases":[{"id":"1","input":"3\nNNN\nPNP\nNPNPNPNNP\n\n","output":"2\n0\n2","explanation":"**Test Case $1$:** Flip the second and third characters so that the string becomes $\\verb+NPP+$, which can be broken into substrings $\\verb+NP+$ + $\\verb+P+$. Here the count of substrings of both types is $1$.\n\n**Test Case $2$:** The original string can already be split into $\\verb+P+$ + $\\verb+NP+$, so no more moves are required.\n\n**Test Case $3$:** Flip the first and eighth characters so that the string becomes $\\verb+PPNPNPNPP+$, which can be broken into substrings $\\verb+P+$ + $\\verb+P+$ + $\\verb+NP+$ + $\\verb+NP+$ + $\\verb+NP+$ + $\\verb+P+$. Here the count of substrings of both types is $3$. ","isDeleted":false}]},"video_editorial_url":"https:\/\/youtu.be\/9yWgafun9uM","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"daanish_adm","problem_author_html_handle":"daanish_adm","problem_tester":"","problem_tester_html_handle":"","date_added":"8-12-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/daanish_adm'>daanish_adm<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy'>easy<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/start19'>start19<\/a>","problem_difficulty_level":"Easy","user_zen_mode":false,"best_tag":"","editorial_url":"https:\/\/discuss.codechef.com\/problems\/P_NP","time":{"view_start_date":1639243800,"submit_start_date":1639243800,"visible_start_date":1639243800,"end_date":1735669800,"current":1643797868},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=P_NP","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}