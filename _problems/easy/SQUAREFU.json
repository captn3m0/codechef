{"category_name":"easy","status":"success","problem_code":"SQUAREFU","problem_name":"Square Function","body":"### Read problem statements in [Russian](https:\/\/www.codechef.com\/download\/translated\/START8\/russian\/SQUAREFU.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/START8\/mandarin\/SQUAREFU.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/START8\/bengali\/SQUAREFU.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/START8\/vietnamese\/SQUAREFU.pdf) as well.\n\nLet's define a function $F(X)$ as follows: \n\n$$F(X) = \\frac{X}{Y}$$ \n\nwhere $Y$ is the largest perfect square that divides $X$. \n\n\nFor example,\n- The largest perfect square that divides $12$ is $4$. Hence $F(12) =  \\frac{12}{4} = 3$.\n- The largest perfect square that divides $36$ is $36$. Hence $F(36) =  \\frac{36}{36} = 1$.\n- The largest perfect square that divides $7$ is $1$. Hence $F(7) =  \\frac{7}{1} = 7$.\n\n\nYou are given an array $A$ consisting of $N$ integers. A pair of integer ($i$, $j$) is called *Good* if $1 \\leq i \\lt j \\leq N$ and  $F(A_i * A_j) \\gt 1$. Find the number of *Good* pairs.\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"- $1 \\leq T \\leq 10^4$\n- $1 \\leq N \\leq 10^5$\n- $1 \\leq A_i \\leq 10^6$\n- The sum of $N$ over all test cases does not exceed $10^6$.\n","constraintsState":true,"subtasks":"- 30 points : $1 \\leq R \\leq 10000$\n- 70 points : $1 \\leq R \\leq 10^9$\n","subtasksState":false,"statement":"### Read problem statements in [Russian](https:\/\/www.codechef.com\/download\/translated\/START8\/russian\/SQUAREFU.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/START8\/mandarin\/SQUAREFU.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/START8\/bengali\/SQUAREFU.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/START8\/vietnamese\/SQUAREFU.pdf) as well.\n\nLet's define a function $F(X)$ as follows: \n\n$$F(X) = \\frac{X}{Y}$$ \n\nwhere $Y$ is the largest perfect square that divides $X$. \n\n\nFor example,\n- The largest perfect square that divides $12$ is $4$. Hence $F(12) =  \\frac{12}{4} = 3$.\n- The largest perfect square that divides $36$ is $36$. Hence $F(36) =  \\frac{36}{36} = 1$.\n- The largest perfect square that divides $7$ is $1$. Hence $F(7) =  \\frac{7}{1} = 7$.\n\n\nYou are given an array $A$ consisting of $N$ integers. A pair of integer ($i$, $j$) is called *Good* if $1 \\leq i \\lt j \\leq N$ and  $F(A_i * A_j) \\gt 1$. Find the number of *Good* pairs.","inputFormat":"- The first line of input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\n- The first line of each test case contains an integer $N$.\n- The second line of each testcase contains $N$ space-separated integers $A_1, A_2, \\dots , A_N$. \n","inputFormatState":true,"outputFormat":"For each test case, print a single line containing one integer - the number of *Good* pairs.\n","outputFormatState":true,"sampleTestCases":[{"id":"1","input":"3\n3\n2 3 12\n4 \n1 2 3 4\n3\n2 3 7","output":"2\n5\n3","explanation":"**Test case $1$:** \n- $(i = 1, j = 2)$: $F(A_1 * A_2) = F(2 * 3) = F(6) = \\frac{6}{1} = 6 \\gt 1$. \n- $(i = 1, j = 3)$: $F(A_1 * A_3) = F(2 *12) = F(24) = \\frac{24}{4} = 6 \\gt 1$.\n- $(i = 2, j = 3)$: $F(A_2 * A_3) = F(3 *12) = F(36) = \\frac{36}{36} = 1 \\ngtr 1$.\n\n So there are 2 Good pairs.\n\n\n**Test case $2$:**  All pairs except ($1, 4$) are Good pairs as $F(A_1 * A_4) = F(1 * 4) = F(4) = \\frac{4}{4} = 1 \\ngtr 1$. \n\n**Test case $3$:**  All pairs are Good pairs.","isDeleted":false}]},"video_editorial_url":"https:\/\/youtu.be\/6exGAuyjIbg","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"soumyadeep_21","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;<\/span><span class='m-username--link'>soumyadeep_21<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"18-07-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/easy'>easy<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy'>easy<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/prime-factorization'>prime-factorization<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/prime-factorization'>prime-factorization<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/soumyadeep_21'>soumyadeep_21<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/start8'>start8<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/start8'>start8<\/a>","problem_difficulty_level":"Unavailable","user_zen_mode":false,"best_tag":"Prime Factorization","editorial_url":"https:\/\/discuss.codechef.com\/problems\/SQUAREFU","time":{"view_start_date":1629124200,"submit_start_date":1629124200,"visible_start_date":1629124200,"end_date":1735669800,"current":1643797885},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=SQUAREFU","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}