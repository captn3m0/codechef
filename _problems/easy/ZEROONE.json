{"category_name":"easy","status":"success","problem_code":"ZEROONE","problem_name":"01 Subsequence","body":"### Read problem statements in [Mandarin](https:\/\/www.codechef.com\/download\/translated\/COOK134\/mandarin\/ZEROONE.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/COOK134\/bengali\/ZEROONE.pdf), and [Russian](https:\/\/www.codechef.com\/download\/translated\/COOK134\/russian\/ZEROONE.pdf) as well.\n\nYou are handed a binary string $S$, but not in any ordinary form. Instead of being directly given the value of $S$, you are given an array $C$ of size $N$ representing the *01-compression representation* of $S$. This means $S$ first contains $C_1$ $\\texttt{0}$ characters, then $C_2$ $\\texttt{1}$ characters, then $C_3$ $\\texttt{0}$ characters, and so on. For example, the array $C = [2, 3, 4, 3]$ corresponds with the binary string $\\texttt{001110000111}$.\n\nYou are allowed to modify $S$ by swapping elements of $C$. More specifically, you are allowed to swap $C_i$ and $C_j$ *as long as* $C_i$ and $C_j$ both encodes blocks of the same character. For example, from $C = [2, 3, 4, 3]$, you can swap $C_1$ and $C_3$ because both of them encode blocks of $\\texttt{0}$'s, turning $C$ to $[4, 3, 2, 3]$ and $S$ to $\\texttt{000011100111}$. However, you cannot swap $C_1$ and $C_2$ because $C_1$ encodes a block of $\\texttt{0}$'s, while $C_2$ encodes a block of $\\texttt{1}$s.\n\nPerform the swapping operation in any way as many times as you want (including zero times) so that the final string $S$ has as many $\\texttt{01}$ subsequences as possible. As a reminder, a subsequence of a string is a sequence that can be derived by deleting zero or more characters without changing the order of the remaining characters.\n\nYou need to find any optimal final array $C$, for which the number of $\\texttt{01}$ subsequence will be the largest possible.\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"- $ 1 \\leq T \\leq 1000 $\n- $ 1 \\leq N \\leq 100 $\n- $ 1 \\leq  C_i \\leq 1000 $\n","constraintsState":true,"subtasks":"- 30 points : $1 \\leq R \\leq 10000$\n- 70 points : $1 \\leq R \\leq 10^9$\n","subtasksState":false,"statement":"### Read problem statements in [Mandarin](https:\/\/www.codechef.com\/download\/translated\/COOK134\/mandarin\/ZEROONE.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/COOK134\/bengali\/ZEROONE.pdf), and [Russian](https:\/\/www.codechef.com\/download\/translated\/COOK134\/russian\/ZEROONE.pdf) as well.\n\nYou are handed a binary string $S$, but not in any ordinary form. Instead of being directly given the value of $S$, you are given an array $C$ of size $N$ representing the *01-compression representation* of $S$. This means $S$ first contains $C_1$ $\\texttt{0}$ characters, then $C_2$ $\\texttt{1}$ characters, then $C_3$ $\\texttt{0}$ characters, and so on. For example, the array $C = [2, 3, 4, 3]$ corresponds with the binary string $\\texttt{001110000111}$.\n\nYou are allowed to modify $S$ by swapping elements of $C$. More specifically, you are allowed to swap $C_i$ and $C_j$ *as long as* $C_i$ and $C_j$ both encodes blocks of the same character. For example, from $C = [2, 3, 4, 3]$, you can swap $C_1$ and $C_3$ because both of them encode blocks of $\\texttt{0}$'s, turning $C$ to $[4, 3, 2, 3]$ and $S$ to $\\texttt{000011100111}$. However, you cannot swap $C_1$ and $C_2$ because $C_1$ encodes a block of $\\texttt{0}$'s, while $C_2$ encodes a block of $\\texttt{1}$s.\n\nPerform the swapping operation in any way as many times as you want (including zero times) so that the final string $S$ has as many $\\texttt{01}$ subsequences as possible. As a reminder, a subsequence of a string is a sequence that can be derived by deleting zero or more characters without changing the order of the remaining characters.\n\nYou need to find any optimal final array $C$, for which the number of $\\texttt{01}$ subsequence will be the largest possible.","inputFormat":"- The first line contains $T$ - the number of test cases. Then the test cases follow.\n- The first line of each test case contains a single integer $N$ - the size of the array $C$.\n- The second line of each test case contains $N$ integers $C_1, C_2, \\dots, C_N$ - the $\\texttt{01}$-compression representation of $S$.","inputFormatState":true,"outputFormat":"For each test case, output two lines: the first line contains $N$ integers representing the optimal array $C$, and the second line contains the maximum number of $\\texttt{01}$ subsequences.","outputFormatState":true,"sampleTestCases":[{"id":"1","input":"1\n4\n2 3 4 3","output":"4 3 2 3\n30","explanation":"- **Test case $1$:** $C = [2, 3, 4, 3]$, which means $S$ corresponds to $\\texttt{001110000111}$. The optimal list of operations is to only swap $C_1$ and $C_3$, resulting in $C = [4, 3, 2, 3]$ and $S = $ $\\texttt{000011100111}$, which has $30$ subsequences of $\\texttt{01}$.","isDeleted":false}]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"prasant21","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;<\/span><span class='m-username--link'>prasant21<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"21-10-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/cook134'>cook134<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/prasant21'>prasant21<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/simple'>simple<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/sorting'>sorting<\/a>","problem_difficulty_level":"Unavailable","user_zen_mode":false,"best_tag":"","editorial_url":"https:\/\/discuss.codechef.com\/problems\/ZEROONE","time":{"view_start_date":1635100202,"submit_start_date":1635100202,"visible_start_date":1635100202,"end_date":1735669800,"current":1643797913},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=ZEROONE","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}