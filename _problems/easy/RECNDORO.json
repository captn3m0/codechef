{"category_name":"easy","status":"success","problem_code":"RECNDORO","problem_name":"Chef and Or","body":"Chef has a circular sequence $A$ of $N$ non-negative integers $A_1, A_2, \\ldots, A_N$ where $A_i$ and $A_{i+1}$ are considered adjacent, and elements $A_1$ and $A_N$ are considered adjacent.\r\n\r\nAn operation on position $p$ in array $A$ is defined as replacing $A_p$ by the bitwise OR of elements adjacent to $A_p$. Formally, an operation is defined as:\r\n- If $p = 1$, replace $A_1$ with $A_N | A_{2}$\r\n- If $1 < p < N$, replace $A_p$ with $A_{p-1} | A_{p+1}$\r\n- If $p = N$, replace $A_N$ with $A_{N-1} | A_1$\r\n\r\nHere, '|' denotes the [bitwise OR operation](https:\/\/en.wikipedia.org\/wiki\/Bitwise_operation#OR).\r\n\r\nNow, Chef must apply operations at each position **exactly once**, but he may apply the operations in any order.\r\n\r\nBeing a friend of Chef, you are required to find a sequence of operations, such that after applying all the $N$ operations, the bitwise OR of the resulting array is $K$, or determine that no such sequence of operations exist.\r\n\r\n###Input:\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains two space-separated integers $N$ and $K$ denoting the number of elements, and the required bitwise OR after operations.\r\n- The second line contains $N$ space-separated integers $A_1, A_2, \\ldots, A_N$.\r\n\r\n###Output:\r\nFor each test case, if no valid sequence of operations exist, print -1.\r\nOtherwise, print $N$ space-separated integers in which $i$-th integer denote the position chosen in the $i$-th operation. If there are multiple valid sequences of operations, you may print any valid sequence.\r\n\r\n###Constraints \r\n- $1 \\le T \\le 10^5$\r\n- $3 \\le N \\le 2*10^5$\r\n- $0 \\le A_i, K \\le 10^9$\r\n- It's guaranteed that the total length of the arrays in one test file doesn't exceed $10^6$\r\n\r\n###Sample Input:\r\n```\r\n5\r\n3 6\r\n2 1 6\r\n3 6\r\n2 1 5\r\n3 7\r\n2 4 6\r\n3 7\r\n1 2 4\r\n3 7\r\n1 2 6\r\n```\r\n\r\n###Sample Output:\r\n```\r\n2 1 3\r\n-1\r\n-1\r\n-1\r\n2 3 1\r\n```\r\n\r\n### Explanation:\r\nIn the first test case, initially, the sequence is **{2, 1, 6}**. \r\n- Chef applies the operation on the $2^{nd}$ index, so the sequence converts to **{2, 6, 6}**.\r\n- Next, Chef applies the operation on the $1^{st}$ index, so the sequence converts to **{6, 6, 6}**.\r\n- Next, Chef applies the operation on the $3^{rd}$ index, and this time sequence does not change.\r\n\r\nThe final sequence is **{6, 6, 6}**, and bitwise **OR** of this sequence is $6$ that is equal to given $K$.\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"Chef has a circular sequence $A$ of $N$ non-negative integers $A_1, A_2, \\ldots, A_N$ where $A_i$ and $A_{i+1}$ are considered adjacent, and elements $A_1$ and $A_N$ are considered adjacent.\r\n\r\nAn operation on position $p$ in array $A$ is defined as replacing $A_p$ by the bitwise OR of elements adjacent to $A_p$. Formally, an operation is defined as:\r\n- If $p = 1$, replace $A_1$ with $A_N | A_{2}$\r\n- If $1 < p < N$, replace $A_p$ with $A_{p-1} | A_{p+1}$\r\n- If $p = N$, replace $A_N$ with $A_{N-1} | A_1$\r\n\r\nHere, '|' denotes the [bitwise OR operation](https:\/\/en.wikipedia.org\/wiki\/Bitwise_operation#OR).\r\n\r\nNow, Chef must apply operations at each position **exactly once**, but he may apply the operations in any order.\r\n\r\nBeing a friend of Chef, you are required to find a sequence of operations, such that after applying all the $N$ operations, the bitwise OR of the resulting array is $K$, or determine that no such sequence of operations exist.\r\n\r\n###Input:\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains two space-separated integers $N$ and $K$ denoting the number of elements, and the required bitwise OR after operations.\r\n- The second line contains $N$ space-separated integers $A_1, A_2, \\ldots, A_N$.\r\n\r\n###Output:\r\nFor each test case, if no valid sequence of operations exist, print -1.\r\nOtherwise, print $N$ space-separated integers in which $i$-th integer denote the position chosen in the $i$-th operation. If there are multiple valid sequences of operations, you may print any valid sequence.\r\n\r\n###Constraints \r\n- $1 \\le T \\le 10^5$\r\n- $3 \\le N \\le 2*10^5$\r\n- $0 \\le A_i, K \\le 10^9$\r\n- It's guaranteed that the total length of the arrays in one test file doesn't exceed $10^6$\r\n\r\n###Sample Input:\r\n```\r\n5\r\n3 6\r\n2 1 6\r\n3 6\r\n2 1 5\r\n3 7\r\n2 4 6\r\n3 7\r\n1 2 4\r\n3 7\r\n1 2 6\r\n```\r\n\r\n###Sample Output:\r\n```\r\n2 1 3\r\n-1\r\n-1\r\n-1\r\n2 3 1\r\n```\r\n\r\n### Explanation:\r\nIn the first test case, initially, the sequence is **{2, 1, 6}**. \r\n- Chef applies the operation on the $2^{nd}$ index, so the sequence converts to **{2, 6, 6}**.\r\n- Next, Chef applies the operation on the $1^{st}$ index, so the sequence converts to **{6, 6, 6}**.\r\n- Next, Chef applies the operation on the $3^{rd}$ index, and this time sequence does not change.\r\n\r\nThe final sequence is **{6, 6, 6}**, and bitwise **OR** of this sequence is $6$ that is equal to given $K$.","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"rishup_nitdgp","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;<\/span><span class='m-username--link'>rishup_nitdgp<\/span>","problem_tester":null,"problem_tester_html_handle":"","date_added":"31-12-2019","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/bit-manipulation'>bit-manipulation<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy-medium'>easy-medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/prefix-suffix'>prefix-suffix<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/rc122020'>rc122020<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/rishup_nitdgp'>rishup_nitdgp<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/rishup_nitdgp'>rishup_nitdgp<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/sachin_yadav'>sachin_yadav<\/a>","problem_difficulty_level":"Easy-Medium","user_zen_mode":false,"best_tag":"Prefix Suffix","editorial_url":"https:\/\/discuss.codechef.com\/problems\/RECNDORO","time":{"view_start_date":1588010400,"submit_start_date":1588010400,"visible_start_date":1588010400,"end_date":1735669800,"current":1643797869},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=RECNDORO","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}