{"category_name":"easy","status":"success","problem_code":"BNYHOP","problem_name":"Bunny Hops","body":"### Read problem statements in [Mandarin](https:\/\/www.codechef.com\/download\/translated\/LTIME99\/mandarin\/BNYHOP.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/LTIME99\/bengali\/BNYHOP.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/LTIME99\/russian\/BNYHOP.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/LTIME99\/vietnamese\/BNYHOP.pdf) as well.\n\nBugs Bunny is very smart, but he keeps constantly worrying about the future and is always anxious. Therefore, he keeps hopping between towns without standing still.\n\nThe place where Bugs Bunny lives has $N$ towns (numbered $1$ through $N$) with one-way roads connecting them in such a way that they form an arborescence (a tree with all paths directed from the root), rooted at town $1$. Therefore, each town except the root has exactly one incoming road; for each $i$ ($1 \\le i \\le N-1$), there is a road from town $P_i$ to town $i+1$. Each town has a distinct rating associated with it; for each valid $i$, the $i$-th town has rating $A_i$.\n\nFrom a town $i$, Bugs Bunny is allowed to hop to town $j$ (without visiting any other towns in between), if the following conditions are satisfied:\n- there is a path between towns $i$ and $j$, i.e. a path from town $i$ to town $j$ or from town $j$ to town $i$\n- town $j$ has a lower rating than town $i$, i.e. $A_j \\lt A_i$\n\nThis way, Bugs Bunny can visit a sequence of towns by hopping, starting anywhere and stopping whenever he chooses. Clearly, he cannot keep hopping forever, so the number of such sequences is finite.\n\nTell Bugs Bunny the number of sequences of two or more towns which can be formed by hopping, given that he can start at any town and stop at any town. Since this number can be very large, calculate it modulo $10^9+7$.\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"- $1 \\le T \\le 10$\n- $1 \\le N \\le 10^5$\n- $1 \\le A_i \\le 10^9$ for each valid $i$\n- $A_1, A_2, \\ldots, A_N$ are pairwise distinct\n- the graph described on the input is a directed tree\n- the sum of $N$ over all test cases does not exceed $3 \\cdot 10^5$\n","constraintsState":true,"subtasks":"**Subtask #1 (20 points):** the tree is a straight line --- there is a single path starting at town $1$ and passing through all towns\n\n**Subtask #2 (20 points):**\n- $N \\le 10^3$\n- the sum of $N$ over all test cases does not exceed $10^4$\n\n**Subtask #3 (60 points):** original constraints\n","subtasksState":true,"statement":"### Read problem statements in [Mandarin](https:\/\/www.codechef.com\/download\/translated\/LTIME99\/mandarin\/BNYHOP.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/LTIME99\/bengali\/BNYHOP.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/LTIME99\/russian\/BNYHOP.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/LTIME99\/vietnamese\/BNYHOP.pdf) as well.\n\nBugs Bunny is very smart, but he keeps constantly worrying about the future and is always anxious. Therefore, he keeps hopping between towns without standing still.\n\nThe place where Bugs Bunny lives has $N$ towns (numbered $1$ through $N$) with one-way roads connecting them in such a way that they form an arborescence (a tree with all paths directed from the root), rooted at town $1$. Therefore, each town except the root has exactly one incoming road; for each $i$ ($1 \\le i \\le N-1$), there is a road from town $P_i$ to town $i+1$. Each town has a distinct rating associated with it; for each valid $i$, the $i$-th town has rating $A_i$.\n\nFrom a town $i$, Bugs Bunny is allowed to hop to town $j$ (without visiting any other towns in between), if the following conditions are satisfied:\n- there is a path between towns $i$ and $j$, i.e. a path from town $i$ to town $j$ or from town $j$ to town $i$\n- town $j$ has a lower rating than town $i$, i.e. $A_j \\lt A_i$\n\nThis way, Bugs Bunny can visit a sequence of towns by hopping, starting anywhere and stopping whenever he chooses. Clearly, he cannot keep hopping forever, so the number of such sequences is finite.\n\nTell Bugs Bunny the number of sequences of two or more towns which can be formed by hopping, given that he can start at any town and stop at any town. Since this number can be very large, calculate it modulo $10^9+7$.\n","inputFormat":"- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\n- The first line of each test case contains a single integer $N$.\n- The second line contains $N-1$ space-separated integers $P_1, P_2, \\ldots, P_{N-1}$.\n- The third line contains $N$ space-separated integers $A_1, A_2, \\ldots, A_N$.\n","inputFormatState":true,"outputFormat":"For each test case, print a single line containing one integer --- the number of valid sequences of visited towns modulo $10^9 + 7$.\n","outputFormatState":true,"sampleTestCases":[{"id":"1","input":"3\n3\n1 1\n10 15 5\n5\n1 1 3 3\n50 10 20 40 30\n9\n1 1 2 2 2 2 7 7\n1 2 3 4 5 6 7 8 9","output":"3\n8\n28","explanation":"**Example case 1:** The possible hops for Bugs Bunny are from town $1$ to town $3$ and from town $2$ to town $1$. Therefore, the $3$ possible sequences of visited towns are $(2,1,3)$, $(2,1)$ and $(1,3)$. ","isDeleted":false}]},"video_editorial_url":"https:\/\/youtu.be\/COX88JMknSs","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"hemanthram","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #684273;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>4&#9733;<\/span><span class='m-username--link'>hemanthram<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"25-08-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/easy-medium'>easy-medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/eulerian-tour'>eulerian-tour<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/fenwick-tree'>fenwick-tree<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/hemanthram'>hemanthram<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/ltime99'>ltime99<\/a>","problem_difficulty_level":"Easy-Medium","user_zen_mode":false,"best_tag":"Fenwick Tree","editorial_url":"https:\/\/discuss.codechef.com\/problems\/BNYHOP","time":{"view_start_date":1630170002,"submit_start_date":1630170002,"visible_start_date":1630170002,"end_date":1735669800,"current":1643797774},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=BNYHOP","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}