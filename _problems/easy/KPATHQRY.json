{"category_name":"easy","status":"success","problem_code":"KPATHQRY","problem_name":"K Path Query","body":"### Read problem statements in [Bengali](https:\/\/www.codechef.com\/download\/translated\/JULY21\/bengali\/KPATHQRY.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/JULY21\/mandarin\/KPATHQRY.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/JULY21\/russian\/KPATHQRY.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/JULY21\/vietnamese\/KPATHQRY.pdf) as well.\n\nYou're given a tree with $N$ vertices numbered from $1$ to $N$. Your goal is to handle $Q$ queries. For each query you are given $K$ nodes $v_1, v_2, \\ldots, v_K$. Find if there exists a simple path in the tree covering all the given vertices.\n\n### Input\n- The first line contains a single integer $T$ - the number of test cases. The description of $T$ test cases follows.\n- The first line of each test case contains a single integer $N$.\n- Each of the following $N-1$ lines contains two integers $u$ and $v$ denoting an edge between nodes $u$ and $v$.\n- The next line contains a single integer $Q$ - the number of queries.\n- The next $Q$ lines describe queries. The $i$-th line describes the $i$-th query and starts with the integer $K_i$ \u2014 the number of vertices in the current query. Then $K_i$ integers follow: $v_1, v_2, \\ldots, v_{K_i}$.\n \n### Output\nFor each query print `\"YES\"` (without quotes) if there exists a simple path in the tree covering all the given nodes, otherwise print `\"NO\"` (without quotes).\n\nYou may print each character of the string in uppercase or lowercase (for example, the strings `\"yEs\"`, `\"yes\"`, `\"Yes\"` and `\"YES\"` will all be treated as identical).\n\n### Constraints\n- $1 \\leq T \\leq 10$\n- $1 \\leq N \\leq 10^5$\n- $1 \\leq u, v, v_j \\leq N$\n- $1 \\leq Q \\leq 10^5$\n- $1 \\leq K_i \\leq N$ for each valid $i$.\n- The edges form a valid tree.\n- All vertices in a single query are distinct.\n- the sum of $N$ over all test cases does not exceed $2\\cdot 10^5$.\n- For each test case, the sum of $K_i$ over all queries does not exceed $10^5$.\n\n### Subtasks\n**Subtask #1 (100 points):** Original constraints\n\n### Sample Input\n```\n1\n6\n1 2\n1 3\n2 4\n2 5\n3 6\n2\n3 6 2 4\n4 2 3 4 5\n```\n \n### Sample Output\n```\nYES\nNO\n```\n \n### Explanation\nThe structure of the given tree is shown below.\n<img src=\"https:\/\/s3.amazonaws.com\/discourseproduction\/original\/2X\/d\/d932b48ade701ee947490515af1060eacddd98ca.png\" class=\"center\" width=\"300\" height=\"250\">\n- For the first query the path will be $4 - 2 - 1 - 3 - 6$.\n- For the second query there is no simple path that covers all the given vertices.\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"### Read problem statements in [Bengali](https:\/\/www.codechef.com\/download\/translated\/JULY21\/bengali\/KPATHQRY.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/JULY21\/mandarin\/KPATHQRY.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/JULY21\/russian\/KPATHQRY.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/JULY21\/vietnamese\/KPATHQRY.pdf) as well.\n\nYou're given a tree with $N$ vertices numbered from $1$ to $N$. Your goal is to handle $Q$ queries. For each query you are given $K$ nodes $v_1, v_2, \\ldots, v_K$. Find if there exists a simple path in the tree covering all the given vertices.\n\n### Input\n- The first line contains a single integer $T$ - the number of test cases. The description of $T$ test cases follows.\n- The first line of each test case contains a single integer $N$.\n- Each of the following $N-1$ lines contains two integers $u$ and $v$ denoting an edge between nodes $u$ and $v$.\n- The next line contains a single integer $Q$ - the number of queries.\n- The next $Q$ lines describe queries. The $i$-th line describes the $i$-th query and starts with the integer $K_i$ \u2014 the number of vertices in the current query. Then $K_i$ integers follow: $v_1, v_2, \\ldots, v_{K_i}$.\n \n### Output\nFor each query print `\"YES\"` (without quotes) if there exists a simple path in the tree covering all the given nodes, otherwise print `\"NO\"` (without quotes).\n\nYou may print each character of the string in uppercase or lowercase (for example, the strings `\"yEs\"`, `\"yes\"`, `\"Yes\"` and `\"YES\"` will all be treated as identical).\n\n### Constraints\n- $1 \\leq T \\leq 10$\n- $1 \\leq N \\leq 10^5$\n- $1 \\leq u, v, v_j \\leq N$\n- $1 \\leq Q \\leq 10^5$\n- $1 \\leq K_i \\leq N$ for each valid $i$.\n- The edges form a valid tree.\n- All vertices in a single query are distinct.\n- the sum of $N$ over all test cases does not exceed $2\\cdot 10^5$.\n- For each test case, the sum of $K_i$ over all queries does not exceed $10^5$.\n\n### Subtasks\n**Subtask #1 (100 points):** Original constraints\n\n### Sample Input\n```\n1\n6\n1 2\n1 3\n2 4\n2 5\n3 6\n2\n3 6 2 4\n4 2 3 4 5\n```\n \n### Sample Output\n```\nYES\nNO\n```\n \n### Explanation\nThe structure of the given tree is shown below.\n<img src=\"https:\/\/s3.amazonaws.com\/discourseproduction\/original\/2X\/d\/d932b48ade701ee947490515af1060eacddd98ca.png\" class=\"center\" width=\"300\" height=\"250\">\n- For the first query the path will be $4 - 2 - 1 - 3 - 6$.\n- For the second query there is no simple path that covers all the given vertices.\n","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"https:\/\/youtu.be\/K14u39V0gtA","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"souradeep_adm","problem_author_html_handle":"souradeep_adm","problem_tester":"","problem_tester_html_handle":"","date_added":"1-07-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/easy'>easy<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/eulerian-tour'>eulerian-tour<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/july21'>july21<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/souradeep_adm'>souradeep_adm<\/a>","problem_difficulty_level":"Easy","user_zen_mode":false,"best_tag":"Eulerian Tour","editorial_url":"https:\/\/discuss.codechef.com\/problems\/KPATHQRY","time":{"view_start_date":1626082200,"submit_start_date":1626082200,"visible_start_date":1626082200,"end_date":1735669800,"current":1643797832},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=KPATHQRY","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}