{"category_name":"easy","status":"success","problem_code":"FUZZYCON","problem_name":"Fuzzy Conversions","body":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/LTIME73\/hindi\/FUZZYCON.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/LTIME73\/bengali\/FUZZYCON.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/LTIME73\/mandarin\/FUZZYCON.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/LTIME73\/russian\/FUZZYCON.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/LTIME73\/vietnamese\/FUZZYCON.pdf) as well.\n\nRaj is a math pro and number theory expert. One day, he met his age-old friend Chef. Chef claimed to be better at number theory than Raj, so Raj gave him some fuzzy problems to solve. In one of those problems, he gave Chef a $3$-tuple of non-negative integers $(a_0, b_0, c_0)$ and told Chef to convert it to another tuple $(x, y, z)$.\n\nChef may perform the following operations any number of times (including zero) on his current tuple $(a, b, c)$, in any order:\n- Choose one element of this tuple, i.e. $a$, $b$ or $c$. Either add $1$ to that element or subtract $1$ from it. The cost of this operation is $1$.\n- Merge: Change the tuple to $(a-1, b-1, c+1)$, $(a-1, b+1, c-1)$ or $(a+1, b-1, c-1)$, i.e. add $1$ to one element and subtract $1$ from the other two. The cost of this operation is $0$.\n- Split: Change the tuple to $(a-1, b+1, c+1)$, $(a+1, b-1, c+1)$ or $(a+1, b+1, c-1)$, i.e. subtract $1$ from one element and add $1$ to the other two. The cost of this operation is also $0$.\n\nAfter each operation, all elements of Chef's tuple must be non-negative. It is not allowed to perform an operation that would make one or more elements of this tuple negative.\n\nCan you help Chef find the minimum cost of converting the tuple $(a_0, b_0, c_0)$ to the tuple $(x, y, z)$? It can be easily proved that it is always possible to convert any tuple of non-negative integers to any other.\n\n### Input\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\n- The first and only line of each test case contains six space-separated integers $a_0$, $b_0$, $c_0$, $x$, $y$ and $z$.\n\n### Output\nFor each test case, print a single line containing one integer \u2015 the minimum cost.\n\n### Constraints\n- $1 \\le T \\le 10^5$\n- $0 \\le a_0, b_0, c_0, x, y, z \\le 10^{18}$\n\n### Subtasks\n**Subtask #1 (20 points):** $0 \\le a_0, b_0, c_0, x, y, z \\le 100$\n\n**Subtask #2 (80 points):** original constraints\n\n### Example Input\n```\n2\n1 1 1 2 2 2\n1 2 3 2 4 2\n```\n\n### Example Output\n```\n0\n1\n```\n\n### Explanation\n**Example case 1:** The tuple $(1, 1, 1)$ can be converted to $(2, 2, 2)$ using only three Split operations, with cost $0$: $(1, 1, 1) \\rightarrow (2, 0, 2) \\rightarrow (1, 1, 3) \\rightarrow (2, 2, 2)$.\n\n**Example case 2:** We can use one addition operation and one Split operation: $(1, 2, 3) \\rightarrow (1, 3, 3) \\rightarrow (2, 4, 2)$.\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/LTIME73\/hindi\/FUZZYCON.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/LTIME73\/bengali\/FUZZYCON.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/LTIME73\/mandarin\/FUZZYCON.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/LTIME73\/russian\/FUZZYCON.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/LTIME73\/vietnamese\/FUZZYCON.pdf) as well.\n\nRaj is a math pro and number theory expert. One day, he met his age-old friend Chef. Chef claimed to be better at number theory than Raj, so Raj gave him some fuzzy problems to solve. In one of those problems, he gave Chef a $3$-tuple of non-negative integers $(a_0, b_0, c_0)$ and told Chef to convert it to another tuple $(x, y, z)$.\n\nChef may perform the following operations any number of times (including zero) on his current tuple $(a, b, c)$, in any order:\n- Choose one element of this tuple, i.e. $a$, $b$ or $c$. Either add $1$ to that element or subtract $1$ from it. The cost of this operation is $1$.\n- Merge: Change the tuple to $(a-1, b-1, c+1)$, $(a-1, b+1, c-1)$ or $(a+1, b-1, c-1)$, i.e. add $1$ to one element and subtract $1$ from the other two. The cost of this operation is $0$.\n- Split: Change the tuple to $(a-1, b+1, c+1)$, $(a+1, b-1, c+1)$ or $(a+1, b+1, c-1)$, i.e. subtract $1$ from one element and add $1$ to the other two. The cost of this operation is also $0$.\n\nAfter each operation, all elements of Chef's tuple must be non-negative. It is not allowed to perform an operation that would make one or more elements of this tuple negative.\n\nCan you help Chef find the minimum cost of converting the tuple $(a_0, b_0, c_0)$ to the tuple $(x, y, z)$? It can be easily proved that it is always possible to convert any tuple of non-negative integers to any other.\n\n### Input\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\n- The first and only line of each test case contains six space-separated integers $a_0$, $b_0$, $c_0$, $x$, $y$ and $z$.\n\n### Output\nFor each test case, print a single line containing one integer \u2015 the minimum cost.\n\n### Constraints\n- $1 \\le T \\le 10^5$\n- $0 \\le a_0, b_0, c_0, x, y, z \\le 10^{18}$\n\n### Subtasks\n**Subtask #1 (20 points):** $0 \\le a_0, b_0, c_0, x, y, z \\le 100$\n\n**Subtask #2 (80 points):** original constraints","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[{"id":"1","input":"2\n1 1 1 2 2 2\n1 2 3 2 4 2","output":"0\n1","explanation":"**Example case 1:** The tuple $(1, 1, 1)$ can be converted to $(2, 2, 2)$ using only three Split operations, with cost $0$: $(1, 1, 1) \\rightarrow (2, 0, 2) \\rightarrow (1, 1, 3) \\rightarrow (2, 2, 2)$.\n\n**Example case 2:** We can use one addition operation and one Split operation: $(1, 2, 3) \\rightarrow (1, 3, 3) \\rightarrow (2, 4, 2)$.","isDeleted":false}]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"hackslash_123","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #684273;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>4&#9733;<\/span><span class='m-username--link'>hackslash_123<\/span>","problem_tester":null,"problem_tester_html_handle":"","date_added":"10-05-2019","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/bitwise-operation'>bitwise-operation<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/hackslash_123'>hackslash_123<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/ltime73'>ltime73<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/observation'>observation<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/taran_1407'>taran_1407<\/a>","problem_difficulty_level":"Easy","user_zen_mode":false,"best_tag":"Bitwise Operation","editorial_url":"","time":{"view_start_date":1561827602,"submit_start_date":1561827602,"visible_start_date":1561827602,"end_date":1735669800,"current":1643797815},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=FUZZYCON","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}