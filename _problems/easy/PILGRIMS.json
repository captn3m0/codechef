{"category_name":"easy","status":"success","problem_code":"PILGRIMS","problem_name":"D - Pilgrims Destination","body":"There is a planet named \u201cRuizland\u201d having $N$ cities, These cities are connected in the form of a tree by a bidirectional path of specified length(in miles). Cities are numbered from $1$ to $N$. City number $1$ is the capital city.\r\n\r\n$M$ pilgrims started their journey from the capital city having initial energy $E_1, E_2, \\ldots, E_M$ respectively which reduces on moving from one city to another by a certain amount$(A)$.\r\n$A$ is calculated as follows:-\r\n- Consider two cities $U$ and $V$ having an edge length of $K$ miles.\r\nThe total number of distinct cities from the capital city to the city $U$ is $D$ (city $U$ and capital city both are inclusive).\r\n- If a pilgrim moves from city $U$ to $V$, then $A=K*D$.\r\n\r\nOut of $N$ cities, There are some special cities (except the capital city) that are connected to only one city. All pilgrims want to reach any of the special cities. A pilgrim will stop his journey as soon as the energy of the pilgrims becomes $0$ or reaches any of the special cities.\r\n\r\nInitially, all cities have $0$ pilgrims except the capital city.\r\n\r\nFind the maximum count of special cities that is non-empty (at least one pilgrim is present) after the end of the journey of all the pilgrims given that pilgrims are allowed to take any path during their journey.\r\n\r\n###Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains two integers $N$ and $M$ separated by space, where $N$ is the number of cities and $M$ is the number of pilgrims.\r\n- The second line contains $M$ integers separated by spaces, denoting the initial energy of the pilgrims.\r\n- Next, $N-1$ lines consists of three integers $U$, $V$ and $K$ separated by space where city $U$ and $V$ are connected by a bidirectional path whose length is $K$ miles\r\n\r\n### Output\r\n- For each test case, Print the maximum count of special cities that is non-empty (at least one pilgrim is present) after the end of the journey of all the pilgrims.\r\n\r\n### Constraints\r\n- $1 \\leq T \\leq 50$\r\n- $2 \\leq N \\leq 10^5$\r\n- $1 \\leq M \\leq 10^5$\r\n- $1 \\leq E_i \\leq 10^{18}$\r\n- $1 \\leq U, V \\leq N$\r\n- $1 \\leq K \\leq 10^6$\r\n- It is guaranteed that the sum of $N$ over all test cases does not exceed $10^5$.\r\n- It is guaranteed that the sum of $M$ over all test cases does not exceed $10^5$.\r\n\r\n### Example Input\r\n```\r\n1\r\n6 4\r\n100 20 10 50\r\n1 2 10\r\n2 3 20\r\n2 4 30\r\n4 5 40\r\n1 6 50\r\n```\r\n\r\n### Example Output\r\n```\r\n2\r\n```\r\n\r\n### Explanation\r\nThere are $3$ special cities namely $3, 5$ and $6$. The energy expected to reach these special cities are $50, 190$ and $50$ respectively. Special city $5$ cannot be reached by any pilgrim. If Pilgrim $1$ goes to the special city $3$ and pilgrim $4$ goes to the special city $6$, then the maximum number of non-empty special cities is $2$.\r\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"There is a planet named \u201cRuizland\u201d having $N$ cities, These cities are connected in the form of a tree by a bidirectional path of specified length(in miles). Cities are numbered from $1$ to $N$. City number $1$ is the capital city.\r\n\r\n$M$ pilgrims started their journey from the capital city having initial energy $E_1, E_2, \\ldots, E_M$ respectively which reduces on moving from one city to another by a certain amount$(A)$.\r\n$A$ is calculated as follows:-\r\n- Consider two cities $U$ and $V$ having an edge length of $K$ miles.\r\nThe total number of distinct cities from the capital city to the city $U$ is $D$ (city $U$ and capital city both are inclusive).\r\n- If a pilgrim moves from city $U$ to $V$, then $A=K*D$.\r\n\r\nOut of $N$ cities, There are some special cities (except the capital city) that are connected to only one city. All pilgrims want to reach any of the special cities. A pilgrim will stop his journey as soon as the energy of the pilgrims becomes $0$ or reaches any of the special cities.\r\n\r\nInitially, all cities have $0$ pilgrims except the capital city.\r\n\r\nFind the maximum count of special cities that is non-empty (at least one pilgrim is present) after the end of the journey of all the pilgrims given that pilgrims are allowed to take any path during their journey.\r\n\r\n###Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains two integers $N$ and $M$ separated by space, where $N$ is the number of cities and $M$ is the number of pilgrims.\r\n- The second line contains $M$ integers separated by spaces, denoting the initial energy of the pilgrims.\r\n- Next, $N-1$ lines consists of three integers $U$, $V$ and $K$ separated by space where city $U$ and $V$ are connected by a bidirectional path whose length is $K$ miles\r\n\r\n### Output\r\n- For each test case, Print the maximum count of special cities that is non-empty (at least one pilgrim is present) after the end of the journey of all the pilgrims.\r\n\r\n### Constraints\r\n- $1 \\leq T \\leq 50$\r\n- $2 \\leq N \\leq 10^5$\r\n- $1 \\leq M \\leq 10^5$\r\n- $1 \\leq E_i \\leq 10^{18}$\r\n- $1 \\leq U, V \\leq N$\r\n- $1 \\leq K \\leq 10^6$\r\n- It is guaranteed that the sum of $N$ over all test cases does not exceed $10^5$.\r\n- It is guaranteed that the sum of $M$ over all test cases does not exceed $10^5$.\r\n\r\n### Example Input\r\n```\r\n1\r\n6 4\r\n100 20 10 50\r\n1 2 10\r\n2 3 20\r\n2 4 30\r\n4 5 40\r\n1 6 50\r\n```\r\n\r\n### Example Output\r\n```\r\n2\r\n```\r\n\r\n### Explanation\r\nThere are $3$ special cities namely $3, 5$ and $6$. The energy expected to reach these special cities are $50, 190$ and $50$ respectively. Special city $5$ cannot be reached by any pilgrim. If Pilgrim $1$ goes to the special city $3$ and pilgrim $4$ goes to the special city $6$, then the maximum number of non-empty special cities is $2$.\r\n","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"adikr_singh","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;<\/span><span class='m-username--link'>adikr_singh<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"6-04-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/adikr_singh'>adikr_singh<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/breadth-first-search'>breadth-first-search<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/depth-first-search'>depth-first-search<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy'>easy<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/greedy'>greedy<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/sorting'>sorting<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/spyb2021'>spyb2021<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/trees'>trees<\/a>","problem_difficulty_level":"Easy","user_zen_mode":false,"best_tag":"Breadth First Search","editorial_url":"https:\/\/discuss.codechef.com\/problems\/PILGRIMS","time":{"view_start_date":1618509602,"submit_start_date":1618509602,"visible_start_date":1618509602,"end_date":1735669800,"current":1643797860},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=PILGRIMS","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}