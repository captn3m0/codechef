{"category_name":"easy","status":"success","problem_code":"CHEF7UP","problem_name":"Chef Up","body":"### Read problem statements in [Mandarin](https:\/\/www.codechef.com\/download\/translated\/COOK134\/mandarin\/CHEF7UP.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/COOK134\/bengali\/CHEF7UP.pdf), and [Russian](https:\/\/www.codechef.com\/download\/translated\/COOK134\/russian\/CHEF7UP.pdf) as well.\n\nChef is a wanted criminal, and $N$ police officers are up for catching him. The officers want to catch Chef no matter the cost, and Chef also wants to eliminate as many officers as possible (preferably everyone) before getting caught (or before running away after eliminating everyone). Neither the officers nor Chef will run away before accomplishing their goals.\n\nChef and the officers are on a one-dimensional grid with coordinates ranging from $-10^{10}$ to $10^{10}$. Chef is initially standing at coordinate $C$, and the $i$-th officer is initially at coordinate $P_i$. The officers and Chef then take turns to move, with the officer team moving first. \n\nDuring their turn, officers will have to move to an adjacent unoccupied cell one by one, in any order they want. Every officer will have to move. At every moment of time, no two officers can be in the same cell, and also no officer can be in the same cell as Chef. If the officer is unable to move to an adjacent unoccupied cell, he is eliminated (and the cell he was in becomes unoccupied). **Note that the officer team will try to move to eliminate as few officers as possible.** For example, with $P = [2, 3, 4]$ and $C = 6$, then the next positions of the officers can be $[1, 2, 3]$, $[1, 2, 5]$, $[1, 4, 5]$, or $[3, 4, 5]$. However, with $P = [2, 3, 4]$ and $C = 5$, the only possible set of the next positions of the officers is $[1, 2, 3]$.\n\nAfter the officer team's turn, Chef also moves to an adjacent unoccupied cell, or gets caught if he cannot find any adjacent unoccupied cell. The process then repeats until either Chef is caught, or all officers are eliminated and Chef runs away.\n\nYou need to find out the maximum number of officers that can be eliminated by Chef, and if Chef can run away or not.\n\nAs a reminder, two cells with coordinates $X$ and $Y$ are *adjacent* if and only if $|X - Y| = 1$.\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"- $1 \\leq T \\leq 10$\n- $1 \\leq N \\leq 10^5$\n- $1 \\leq C \\leq 10^9$\n- $1 \\leq P_i \\leq 10^9$\n- All the coordinates are unique. That means $P_i \\ne C$ for all $1 \\le i \\le N$, and $P_i \\ne P_j$ for all $1 \\le i \\lt j \\le N$","constraintsState":true,"subtasks":"- 30 points : $1 \\leq R \\leq 10000$\n- 70 points : $1 \\leq R \\leq 10^9$\n","subtasksState":false,"statement":"### Read problem statements in [Mandarin](https:\/\/www.codechef.com\/download\/translated\/COOK134\/mandarin\/CHEF7UP.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/COOK134\/bengali\/CHEF7UP.pdf), and [Russian](https:\/\/www.codechef.com\/download\/translated\/COOK134\/russian\/CHEF7UP.pdf) as well.\n\nChef is a wanted criminal, and $N$ police officers are up for catching him. The officers want to catch Chef no matter the cost, and Chef also wants to eliminate as many officers as possible (preferably everyone) before getting caught (or before running away after eliminating everyone). Neither the officers nor Chef will run away before accomplishing their goals.\n\nChef and the officers are on a one-dimensional grid with coordinates ranging from $-10^{10}$ to $10^{10}$. Chef is initially standing at coordinate $C$, and the $i$-th officer is initially at coordinate $P_i$. The officers and Chef then take turns to move, with the officer team moving first. \n\nDuring their turn, officers will have to move to an adjacent unoccupied cell one by one, in any order they want. Every officer will have to move. At every moment of time, no two officers can be in the same cell, and also no officer can be in the same cell as Chef. If the officer is unable to move to an adjacent unoccupied cell, he is eliminated (and the cell he was in becomes unoccupied). **Note that the officer team will try to move to eliminate as few officers as possible.** For example, with $P = [2, 3, 4]$ and $C = 6$, then the next positions of the officers can be $[1, 2, 3]$, $[1, 2, 5]$, $[1, 4, 5]$, or $[3, 4, 5]$. However, with $P = [2, 3, 4]$ and $C = 5$, the only possible set of the next positions of the officers is $[1, 2, 3]$.\n\nAfter the officer team's turn, Chef also moves to an adjacent unoccupied cell, or gets caught if he cannot find any adjacent unoccupied cell. The process then repeats until either Chef is caught, or all officers are eliminated and Chef runs away.\n\nYou need to find out the maximum number of officers that can be eliminated by Chef, and if Chef can run away or not.\n\nAs a reminder, two cells with coordinates $X$ and $Y$ are *adjacent* if and only if $|X - Y| = 1$.","inputFormat":"- The first line contains $T$ - the number of test cases. Then the test cases follow.\n- The first line of each test case contains a single integer $N$ - the number of officers.\n- The second line of each test case contains a single integer $C$ - the initial coordinate of Chef.\n- The third line of each test case contains $N$ integers $P_1, P_2, \\dots, P_N$ - the initial coordinates of the officers.\n\n","inputFormatState":true,"outputFormat":"For each test case, output on a single line two space-separated integers: the first integer is the maximum number of officers that can be eliminated by Chef, and the second integer is $1$ if Chef runs away or $-1$ if Chef will be caught.","outputFormatState":true,"sampleTestCases":[{"id":"1","input":"2\n2\n2\n1 4\n1\n2\n1\n","output":"1 -1\n1 1\n","explanation":"- **Test case $1$**: Chef chooses to always move to the left (i.e. to the smaller coordinate); this forces the officer at coordinate $1$ to always move to the left, and eventually being cornered and eliminated. However, the officer at coordinate $4$ cannot be eliminated, and hence Chef will be caught at the end.\n- **Test case $2$**: Similarly, Chef chooses to always move to the left, and eventually eliminating the only officer, thus running away at the end.","isDeleted":false}]},"video_editorial_url":"https:\/\/youtu.be\/g_aSGMtkM1k","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"ashish99hanny","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;<\/span><span class='m-username--link'>ashish99hanny<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"22-10-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/ad-hoc'>ad-hoc<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/ashish99hanny'>ashish99hanny<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/cook134'>cook134<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy-medium'>easy-medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/sorting'>sorting<\/a>","problem_difficulty_level":"Unavailable","user_zen_mode":false,"best_tag":"Ad Hoc","editorial_url":"https:\/\/discuss.codechef.com\/problems\/CHEF7UP","time":{"view_start_date":1635100202,"submit_start_date":1635100202,"visible_start_date":1635100202,"end_date":1735669800,"current":1643797780},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=CHEF7UP","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}