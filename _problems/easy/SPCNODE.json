{"category_name":"easy","status":"success","problem_code":"SPCNODE","problem_name":"Find the Special Node","body":"This is an example statement in markdown. This is the statement of the problem [TANDC](https:\/\/codechef.com\/problems\/TANDC) on CodeChef. The main statement starts with the next paragraph. Please make sure to remove this paragraph from your statement before publishing your problem. If your problem doesn't contain Subtasks, you should remove the section subtask too. We are using markdown the syntax of which can be seen [at](https:\/\/github.com\/showdownjs\/showdown\/wiki\/Showdown's-Markdown-syntax). We request you to not use any HTML tags in the statement, e.g. no p, ul, li, pre, br or b tags. If you face any issue, please contact admins or email us at help@codechef.com.\n\nTracy is teaching Charlie maths via a game called $N$-Cube, which involves three sections involving $N$.\n\nTracy gives Charlie a number $N$, and Charlie makes a list of $N$-th powers of integers in increasing order $1^N, 2^N, 3^N, \\dot, \\text{so on}$. This teaches him exponentiation.\n\nThen Charlie performs the following subtraction game $N$ times: Take all pairs of consecutive numbers in the list and take their difference. These differences then form the new list for the next iteration of the game. Eg, if $N$ was 6, the list proceeds as $[1, 64, 729, 4096 ... ]$ to $[63, 685, 3367 ...]$, and so on $5$ more times.\n\nAfter the subtraction game, Charlie has to correctly tell Tracy the $N$-th element of the list. This number is the *value of the game*.\n\nAfter practice Charlie became an expert in the game. To challenge him more, Tracy will give two numbers $M$ (where $M$ is a prime) and $R$ instead of just a single number $N$, and the game must start from $M_R - 1$ instead of $N$. Since the *value of the game* can now become large, Charlie just have to tell the largest integer $K$ such that $M_K$ divides this number. Since even $K$ can be large, output $K$ modulo 1000000007 ($10^9 + 7$).\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"\n","constraintsState":false,"subtasks":"- 30 points : $1 \\leq R \\leq 10000$\n- 70 points : $1 \\leq R \\leq 10^9$\n","subtasksState":false,"statement":"**This is an interactive task**\n\nThere is a tree consisting of $N$ nodes. A certain node $X$ is marked as special, but you don't know $X$ - your task is to find it. To achieve this, you can ask queries to obtain information about $X$.\n \nTo be specific, you can ask queries in the form: \n\n`? Y`\n\nwhere $1 \\le Y \\le N$, and you will be provided with a random node on the path from node $Y$ to node $X$, excluding $Y$. If $Y = X$ you will receive $-1$ instead.\n\nYou can ask at most $12$ queries. Find the special node $X$.\n\nNote: The judge is not adaptive, i.e, node $X$ is chosen at the start before any interaction happens and does not change based on the queries you ask.\n\n### Interaction\n- Begin the interaction by reading a single integer $T$ denoting the number of test cases. The test cases follow.\n- For each test case, first read a single integer $N$ denoting the number of nodes in the tree. \n- $N - 1$ lines follow. The $i^{th}$ of these lines contains two space-separated integers $u_i$ and $v_i$, denoting an edge between the nodes $u_i$ and $v_i$.\n- After this, you can start making queries.\n- To ask a query, output `? Y` ($1 \\le Y \\le N$). The judge will return some node (other than $Y$) which lies on the path between node $Y$ and node $X$, or $-1$ if $Y = X$. \n- To output the answer, output `! X`, where $X$ is the special node that is hidden. This is not considered a query. \n- If at any time you make an invalid query or exceed the query limit, the interaction is terminated and you will receive a Wrong Answer verdict.\n- Don't forget to flush the output after printing each line!\n\n### Constraints\n- $1 \\le T \\le 10$\n- $3 \\le N \\le 1000$\n- $1 \\le u_i, v_i \\leq N$\n- It is guaranteed that the given nodes and edges construct a tree.\n- $1 \\le X \\le N$ \n\n### Sample Interaction\n```\nGrader                You\n2\n4\n1 2\n1 3\n1 4\n                      ? 1\n-1\n                      ! 1\n4\n1 2\n2 3\n3 4 \n                      ? 1 \n2          \n                      ? 2\n3\n                      ? 3\n-1\n                      ! 3\n```\n\n### Explanation\n- **Test case $1$:** $X = 1$.\n    - The query `? 1`  gives $-1$.\n    - A query returns $-1$ only if $Y = X$, hence we can answer $X = 1$.\n\n- **Test case $2$:** $X = 3$.\n    - The query `? 1`  gives node $2$ which is in the path from node $1$ to node $3$ excluding node $1$. That is the path between node $2$ to node $3$.\n    - The query `? 2`  gives node $3$ which is in the path from node $2$ to node $4$ excluding node $2$. That is the path between node $3$ to node $3$.\n    - The query `? 3`  gives $-1$ as $Y = X$ in this case, hence we can answer node $3$.\n \n\n\n**NOTE**: The above queries are just to demonstrate the interaction. They may or may not be sufficient to deduce the final answer. ","inputFormat":"- First line of the input contains $T$, the number of test cases. Then the test cases follow.\n- First line of each test case contains $N$, the number of nodes in the tree.\n- Next $N - 1$ lines follow where each line contains two space-separated integers $u, v$ which denotes that there is an edge between the nodes $u$ and $v$.\n","inputFormatState":false,"outputFormat":"[TODO]\n","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"https:\/\/youtu.be\/YuIws60s9tc","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"suryaprak_adm","problem_author_html_handle":"suryaprak_adm","problem_tester":"","problem_tester_html_handle":"","date_added":"15-11-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/centroid-decomposition'>centroid-decomposition<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/centroid-decomposition'>centroid-decomposition<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy-medium'>easy-medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy-medium'>easy-medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/start17'>start17<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/start17'>start17<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/suryaprak_adm'>suryaprak_adm<\/a>","problem_difficulty_level":"Unavailable","user_zen_mode":false,"best_tag":"Centroid Decomposition","editorial_url":"https:\/\/discuss.codechef.com\/problems\/SPCNODE","time":{"view_start_date":1637170200,"submit_start_date":1637170200,"visible_start_date":1637170200,"end_date":1735669800,"current":1643797883},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=SPCNODE","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}