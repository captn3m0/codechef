{"category_name":"easy","status":"success","problem_code":"STONED","problem_name":"F - Stone Land","body":"In a country **Stone Land**, there are $N$ stones arranged in a row from left to right. Each stone has some height represented by a positive number. The stones are numbered from $1$ to $N$ from left to right.\r\n\r\nYou are given an array **H** of size $N$ consisting of the height of the $N$ stones from left to\r\nright.\r\n\r\nStone at $j^{th}$ position is visible from the stone at $i^{th}$ position if:-\r\n1. $j>i$\r\n2. $max(H[i],H[i+1],H[i+2],....,H[j-1])$ $<$ $H[j]$\r\n\r\nYou are asked $M$ queries.\r\n- Each query consists of two different positions of stones $A$ and $B$.\r\n- You have to Print the total number of stones that are visible from both the stones at the position $A$ and $B$.\r\n\r\n### Input\r\n\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains two space-separated integers $N$ and $M$, where $N$ is the number of stones and $M$ is the number of queries.\r\n- The Second line consists of $N$ space-separated integers **(array H)** denoting the height of stones from left to the right separated by a space.\r\n- Next, $M$ lines consist of two space-separated integers $A$ and $B$ separated by space where $A$ and $B$ are positions of stones.\r\n\r\n### Constraints\r\n- $1 \\leq T \\leq 5$\r\n- $2 \\leq N \\leq 10^5$\r\n- $1 \\leq M \\leq 10^5$\r\n- $1 \\leq H[i] \\leq 10^9$, where **H[i]** denotes the height of $i^{th}$ stone, and $1 \\leq i \\leq N$\r\n- $1 \\leq A, B \\leq N$\r\n- It is guaranteed that the sum of $N$ over all test cases does not exceed $10^5$.\r\n- It is guaranteed that the sum of $M$ over all test cases does not exceed $10^5$.\r\n\r\n### Output\r\n- For each query, print the total number of stones that are visible from both the stones at the position $A$ and $B$ in a new line.\r\n\r\n### Example Input\r\n```\r\n1\r\n6 6\r\n3 10 20 20 5 50\r\n1 2\r\n2 4\r\n4 3\r\n4 5\r\n1 3\r\n4 4\r\n```\r\n\r\n### Example Output\r\n```\r\n2\r\n1\r\n1\r\n1\r\n1\r\n1\r\n```\r\n\r\n### Explanation\r\n\r\n**Query $1$**: Stone at position $1$ can see the stones at position $(2, 3, 6)$ whereas stone at position $2$ can see the stones at position $(3, 6)$. Thus, the total number of stones that are visible from both stones is $2$.\r\n\r\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"In a country **Stone Land**, there are $N$ stones arranged in a row from left to right. Each stone has some height represented by a positive number. The stones are numbered from $1$ to $N$ from left to right.\r\n\r\nYou are given an array **H** of size $N$ consisting of the height of the $N$ stones from left to\r\nright.\r\n\r\nStone at $j^{th}$ position is visible from the stone at $i^{th}$ position if:-\r\n1. $j>i$\r\n2. $max(H[i],H[i+1],H[i+2],....,H[j-1])$ $<$ $H[j]$\r\n\r\nYou are asked $M$ queries.\r\n- Each query consists of two different positions of stones $A$ and $B$.\r\n- You have to Print the total number of stones that are visible from both the stones at the position $A$ and $B$.\r\n\r\n### Input\r\n\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains two space-separated integers $N$ and $M$, where $N$ is the number of stones and $M$ is the number of queries.\r\n- The Second line consists of $N$ space-separated integers **(array H)** denoting the height of stones from left to the right separated by a space.\r\n- Next, $M$ lines consist of two space-separated integers $A$ and $B$ separated by space where $A$ and $B$ are positions of stones.\r\n\r\n### Constraints\r\n- $1 \\leq T \\leq 5$\r\n- $2 \\leq N \\leq 10^5$\r\n- $1 \\leq M \\leq 10^5$\r\n- $1 \\leq H[i] \\leq 10^9$, where **H[i]** denotes the height of $i^{th}$ stone, and $1 \\leq i \\leq N$\r\n- $1 \\leq A, B \\leq N$\r\n- It is guaranteed that the sum of $N$ over all test cases does not exceed $10^5$.\r\n- It is guaranteed that the sum of $M$ over all test cases does not exceed $10^5$.\r\n\r\n### Output\r\n- For each query, print the total number of stones that are visible from both the stones at the position $A$ and $B$ in a new line.\r\n\r\n### Example Input\r\n```\r\n1\r\n6 6\r\n3 10 20 20 5 50\r\n1 2\r\n2 4\r\n4 3\r\n4 5\r\n1 3\r\n4 4\r\n```\r\n\r\n### Example Output\r\n```\r\n2\r\n1\r\n1\r\n1\r\n1\r\n1\r\n```\r\n\r\n### Explanation\r\n\r\n**Query $1$**: Stone at position $1$ can see the stones at position $(2, 3, 6)$ whereas stone at position $2$ can see the stones at position $(3, 6)$. Thus, the total number of stones that are visible from both stones is $2$.\r\n\r\n","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"2","source_sizelimit":"50000","problem_author":"adikr_singh","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;<\/span><span class='m-username--link'>adikr_singh<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"6-04-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/adikr_singh'>adikr_singh<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/data-structure'>data-structure<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy-medium'>easy-medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/segment-tree'>segment-tree<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/spyb2021'>spyb2021<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/stack'>stack<\/a>","problem_difficulty_level":"Easy-Medium","user_zen_mode":false,"best_tag":"Segment Tree","editorial_url":"https:\/\/discuss.codechef.com\/problems\/STONED","time":{"view_start_date":1618509602,"submit_start_date":1618509602,"visible_start_date":1618509602,"end_date":1735669800,"current":1643797887},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=STONED","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}