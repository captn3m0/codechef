{"category_name":"easy","status":"success","problem_code":"RLEVEL","problem_name":"2 - Reach a level","body":"You are playing a computer game. This game has $n$ levels numbered with the integers from $1$ to $n$. At any point in time, you are located at one of the levels with some **penalty**, represented by a non-negative real number. Initially, you start at level $1$ with penalty $0$.\r\n\r\nThere are $m$ options to change levels. Each option is described by pair of levels $s$, $f$ (possibly equal) and penalty $p$ (non-negative integer). You can use this option if your current level is $s$. If your penalty is currently $c$, then after using this option your level will become $f$ and your penalty will become $\\frac{c}{2}+p$. Options can be used more than once.\r\n\r\nFor each level $i$ ($1 \\leq i \\leq n$), check whether it is possible for you to get to level $i$ using some **finite** sequence of operations. If it is possible, find the **infimum** of the set of all possible penalties you could have at level $i$. More formally, find the minimum real number $x$ such that for all $\\epsilon > 0$, there exists some finite sequence of operations after which you will be located at level $i$ with penalty $c < x + \\epsilon$.\r\n\r\n###Input:\r\n\r\nThe first line contains one integer number $t$ - the number of test cases. The next lines describe test cases.\r\n\r\nThe first line of each test case contains two positive integers $n$, $m$ - the number of levels and the number of options.\r\n\r\nEach of next $m$ lines contains three integers $s$, $f$, $p$, describing an option.\r\n\r\n###Output:\r\n\r\nFor each test case print $n$ lines.\r\n\r\nIn the $i$-th line print $-1$ if it is impossible to get to level $i$ using a finite sequence of operations. Otherwise, print the value of the infimum of the set of all possible penalties that you could have at level $i$.\r\n\r\nThe answer will be considered correct if its absolute or relative error does not exceed $10^{-6}$.\r\n\r\nFormally, if your answer is $a$ and jury's answer is $b$ then your answer will be considered correct if $\\frac{|a-b|}{\\max{(1, |b|)}} \\leq 10^{-6}$.\r\n\r\n###Constraints \r\n\r\n- $1 \\leq t \\leq 10^5$\r\n- $1 \\leq n, m \\leq 200\\,000$\r\n- $1 \\leq s, f \\leq n$, $0 \\leq p \\leq 10^9$\r\n- the sum of $n$ for all test cases does not exceed $200\\,000$\r\n- the sum of $m$ for all test cases does not exceed $200\\,000$\r\n\r\n###Subtasks\r\n\r\n**Subtask #1 (25 points):** \r\n- $t \\leq 1000$\r\n- the sum of $n$ for all test cases does not exceed $1000$\r\n- the sum of $m$ for all test cases does not exceed $1000$\r\n\r\n**Subtask #2 (25 points):** $s \\leq f$ for all options\r\n\r\n**Subtask #3 (50 points):** original constraints\r\n\r\n###Sample Input:\r\n\r\n```\r\n3\r\n4 5\r\n1 2 1\r\n2 3 2\r\n3 3 1\r\n3 4 0\r\n2 4 1\r\n7 10\r\n1 3 3\r\n1 2 4\r\n1 6 5\r\n2 3 2\r\n3 4 3\r\n4 5 5\r\n5 2 1\r\n5 3 1\r\n4 6 2\r\n7 1 239\r\n3 2\r\n2 3 0\r\n3 2 0\r\n```\r\n\r\n###Sample Output:\r\n\r\n```\r\n0.000000000000\r\n1.000000000000\r\n2.000000000000\r\n1.000000000000\r\n0.000000000000\r\n4.000000000000\r\n3.000000000000\r\n4.500000000000\r\n7.250000000000\r\n4.250000000000\r\n-1\r\n0.000000000000\r\n-1\r\n-1\r\n```\r\n\r\n###EXPLANATION:\r\n\r\nIn the first test case let's consider level $3$. You can reach this level using the first option and the second option after that. Your penalty will be $\\frac{1}{2} + 2 = 2.5$. Then we can use the third option $k$ times after it for any $k \\geq 0$. It's easy to see that the penalty converges to $2$ as $k \\to \\infty$. It can be proven that $2$ is the infimum of the penalty for level $3$.\r\n\r\nThis picture describes the options for the second test case:\r\n\r\n<img src=\"https:\/\/s3.amazonaws.com\/codechef_shared\/download\/Images\/BENDSP02\/RLEVEL\/RLEVEL.png\" alt=\"sample 2 picture\" height=\"100%\" width=\"100%\">\r\n\r\nIn the third test case, neither levels $2$ nor $3$ are reachable.\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"You are playing a computer game. This game has $n$ levels numbered with the integers from $1$ to $n$. At any point in time, you are located at one of the levels with some **penalty**, represented by a non-negative real number. Initially, you start at level $1$ with penalty $0$.\r\n\r\nThere are $m$ options to change levels. Each option is described by pair of levels $s$, $f$ (possibly equal) and penalty $p$ (non-negative integer). You can use this option if your current level is $s$. If your penalty is currently $c$, then after using this option your level will become $f$ and your penalty will become $\\frac{c}{2}+p$. Options can be used more than once.\r\n\r\nFor each level $i$ ($1 \\leq i \\leq n$), check whether it is possible for you to get to level $i$ using some **finite** sequence of operations. If it is possible, find the **infimum** of the set of all possible penalties you could have at level $i$. More formally, find the minimum real number $x$ such that for all $\\epsilon > 0$, there exists some finite sequence of operations after which you will be located at level $i$ with penalty $c < x + \\epsilon$.\r\n\r\n###Input:\r\n\r\nThe first line contains one integer number $t$ - the number of test cases. The next lines describe test cases.\r\n\r\nThe first line of each test case contains two positive integers $n$, $m$ - the number of levels and the number of options.\r\n\r\nEach of next $m$ lines contains three integers $s$, $f$, $p$, describing an option.\r\n\r\n###Output:\r\n\r\nFor each test case print $n$ lines.\r\n\r\nIn the $i$-th line print $-1$ if it is impossible to get to level $i$ using a finite sequence of operations. Otherwise, print the value of the infimum of the set of all possible penalties that you could have at level $i$.\r\n\r\nThe answer will be considered correct if its absolute or relative error does not exceed $10^{-6}$.\r\n\r\nFormally, if your answer is $a$ and jury's answer is $b$ then your answer will be considered correct if $\\frac{|a-b|}{\\max{(1, |b|)}} \\leq 10^{-6}$.\r\n\r\n###Constraints \r\n\r\n- $1 \\leq t \\leq 10^5$\r\n- $1 \\leq n, m \\leq 200\\,000$\r\n- $1 \\leq s, f \\leq n$, $0 \\leq p \\leq 10^9$\r\n- the sum of $n$ for all test cases does not exceed $200\\,000$\r\n- the sum of $m$ for all test cases does not exceed $200\\,000$\r\n\r\n###Subtasks\r\n\r\n**Subtask #1 (25 points):** \r\n- $t \\leq 1000$\r\n- the sum of $n$ for all test cases does not exceed $1000$\r\n- the sum of $m$ for all test cases does not exceed $1000$\r\n\r\n**Subtask #2 (25 points):** $s \\leq f$ for all options\r\n\r\n**Subtask #3 (50 points):** original constraints\r\n\r\n###Sample Input:\r\n\r\n```\r\n3\r\n4 5\r\n1 2 1\r\n2 3 2\r\n3 3 1\r\n3 4 0\r\n2 4 1\r\n7 10\r\n1 3 3\r\n1 2 4\r\n1 6 5\r\n2 3 2\r\n3 4 3\r\n4 5 5\r\n5 2 1\r\n5 3 1\r\n4 6 2\r\n7 1 239\r\n3 2\r\n2 3 0\r\n3 2 0\r\n```\r\n\r\n###Sample Output:\r\n\r\n```\r\n0.000000000000\r\n1.000000000000\r\n2.000000000000\r\n1.000000000000\r\n0.000000000000\r\n4.000000000000\r\n3.000000000000\r\n4.500000000000\r\n7.250000000000\r\n4.250000000000\r\n-1\r\n0.000000000000\r\n-1\r\n-1\r\n```\r\n\r\n###EXPLANATION:\r\n\r\nIn the first test case let's consider level $3$. You can reach this level using the first option and the second option after that. Your penalty will be $\\frac{1}{2} + 2 = 2.5$. Then we can use the third option $k$ times after it for any $k \\geq 0$. It's easy to see that the penalty converges to $2$ as $k \\to \\infty$. It can be proven that $2$ is the infimum of the penalty for level $3$.\r\n\r\nThis picture describes the options for the second test case:\r\n\r\n<img src=\"https:\/\/s3.amazonaws.com\/codechef_shared\/download\/Images\/BENDSP02\/RLEVEL\/RLEVEL.png\" alt=\"sample 2 picture\" height=\"100%\" width=\"100%\">\r\n\r\nIn the third test case, neither levels $2$ nor $3$ are reachable.","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"3","source_sizelimit":"50000","problem_author":"isaf27","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;<\/span><span class='m-username--link'>isaf27<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"7-08-2020","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/isaf27'>isaf27<\/a>","problem_difficulty_level":"Unavailable","user_zen_mode":false,"best_tag":"","editorial_url":"","time":{"view_start_date":1607770800,"submit_start_date":1607770800,"visible_start_date":1607770800,"end_date":1735669800,"current":1643797873},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=RLEVEL","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}