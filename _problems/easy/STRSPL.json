{"category_name":"easy","status":"success","problem_code":"STRSPL","problem_name":"4 - Palindrome and antipalindrome","body":"Say that a string is ***binary*** if it consists solely of the symbols $0$ and $1$ (the empty string is binary too). For a binary string $s$ let's define two functions:\r\n\r\n- The function $rev(s)$ reverses the string $s$. For example, $rev(010111)=111010$ and $rev(01)=10$.\r\n- The string $flip(s)$ changes each character in $s$ from $0$ to $1$ or from $1$ to $0$. For example, $flip(010111)=101000$ and $flip(11)=00$.\r\n\r\nIf $s = rev(s)$ then we say that $s$ is a ***palindrome***. If $s=rev(flip(s))$ then we say that $s$ is an ***antipalindrome***.\r\n\r\nGiven a binary string $s=s_1s_2\\ldots s_{|s|}$, divide it into a palindrome and an antipalindrome. Formally, you should find two sequences $i_1, i_2, \\ldots, i_k$ and $j_1, j_2, \\ldots, j_m$, such that:\r\n\r\n- $k,m\\ge 0$\r\n- $|s| = k + m$\r\n- All indices $i_1, i_2, \\ldots, i_k, j_1, j_2, \\ldots, j_m$ are distinct integers satisfying $1 \\leq i_x,j_x\\leq |s|$.\r\n- $i_1 < i_2 < \\ldots < i_k$ and $j_1 < j_2 < \\ldots < j_m$\r\n- The string $s_{i_1} s_{i_2} \\ldots s_{i_k}$ is a palindrome.\r\n- The string $s_{j_1} s_{j_2} \\ldots s_{j_m}$ is an antipalindrome.\r\n\r\n###Input:\r\n\r\nThe first line contains a single integer, $t$ - the number of test cases. The next $t$ lines describe test cases.\r\n\r\nThe only line for each test case contains a binary string $s$.\r\n\r\n###Output:\r\n\r\nIn the first line for each test case, print two integers $k$ and $m$.\r\n\r\nIn the second line for each test case, print $k$ integers $i_1, i_2, \\ldots, i_k$.\r\n\r\nIn the third line for each test case, print $m$ integers $j_1, j_2, \\ldots, j_m$.\r\n\r\nAll required conditions should be satisfied.\r\n\r\nIt can be shown that an answer always exists. If there exist multiple answers you can print any.\r\n\r\n###Constraints\r\n\r\n- $1 \\leq t \\leq 10^5$\r\n- $1 \\leq |s| \\leq 100\\,000$\r\n- the sum of lengths of all strings does not exceed $300\\,000$\r\n\r\n###Subtasks\r\n\r\n**Subtask #1 (30 points):**\r\n- $t \\leq 1000$\r\n- $|s| \\leq 10$\r\n\r\n**Subtask #2 (70 points):** original constraints\r\n\r\n###Sample Input:\r\n\r\n```\r\n4\r\n0\r\n10111001011\r\n1100100001\r\n11000111\r\n```\r\n\r\n###Sample Output:\r\n```\r\n1 0\r\n1\r\n\r\n5 6\r\n1 4 6 8 11\r\n2 3 5 7 9 10\r\n6 4\r\n1 3 4 7 8 10\r\n2 5 6 9\r\n6 2\r\n1 2 4 5 7 8\r\n3 6\r\n```\r\n\r\n###Explanation:\r\n\r\nIn the first test case, the string $0$ is a palindrome and the empty string is an antipalindrome.\r\n\r\nIn the second test case, we can use indices $[1, 4, 6, 8, 11]$ to create the palindrome $s_1s_4s_6s_8s_{11}=11011$ and indices $[2, 3, 5, 7, 9, 10]$ to create the antipalindrome $s_2s_3s_5s_7s_9s_{10}=011001$.\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"Say that a string is ***binary*** if it consists solely of the symbols $0$ and $1$ (the empty string is binary too). For a binary string $s$ let's define two functions:\r\n\r\n- The function $rev(s)$ reverses the string $s$. For example, $rev(010111)=111010$ and $rev(01)=10$.\r\n- The string $flip(s)$ changes each character in $s$ from $0$ to $1$ or from $1$ to $0$. For example, $flip(010111)=101000$ and $flip(11)=00$.\r\n\r\nIf $s = rev(s)$ then we say that $s$ is a ***palindrome***. If $s=rev(flip(s))$ then we say that $s$ is an ***antipalindrome***.\r\n\r\nGiven a binary string $s=s_1s_2\\ldots s_{|s|}$, divide it into a palindrome and an antipalindrome. Formally, you should find two sequences $i_1, i_2, \\ldots, i_k$ and $j_1, j_2, \\ldots, j_m$, such that:\r\n\r\n- $k,m\\ge 0$\r\n- $|s| = k + m$\r\n- All indices $i_1, i_2, \\ldots, i_k, j_1, j_2, \\ldots, j_m$ are distinct integers satisfying $1 \\leq i_x,j_x\\leq |s|$.\r\n- $i_1 < i_2 < \\ldots < i_k$ and $j_1 < j_2 < \\ldots < j_m$\r\n- The string $s_{i_1} s_{i_2} \\ldots s_{i_k}$ is a palindrome.\r\n- The string $s_{j_1} s_{j_2} \\ldots s_{j_m}$ is an antipalindrome.\r\n\r\n###Input:\r\n\r\nThe first line contains a single integer, $t$ - the number of test cases. The next $t$ lines describe test cases.\r\n\r\nThe only line for each test case contains a binary string $s$.\r\n\r\n###Output:\r\n\r\nIn the first line for each test case, print two integers $k$ and $m$.\r\n\r\nIn the second line for each test case, print $k$ integers $i_1, i_2, \\ldots, i_k$.\r\n\r\nIn the third line for each test case, print $m$ integers $j_1, j_2, \\ldots, j_m$.\r\n\r\nAll required conditions should be satisfied.\r\n\r\nIt can be shown that an answer always exists. If there exist multiple answers you can print any.\r\n\r\n###Constraints\r\n\r\n- $1 \\leq t \\leq 10^5$\r\n- $1 \\leq |s| \\leq 100\\,000$\r\n- the sum of lengths of all strings does not exceed $300\\,000$\r\n\r\n###Subtasks\r\n\r\n**Subtask #1 (30 points):**\r\n- $t \\leq 1000$\r\n- $|s| \\leq 10$\r\n\r\n**Subtask #2 (70 points):** original constraints\r\n\r\n###Sample Input:\r\n\r\n```\r\n4\r\n0\r\n10111001011\r\n1100100001\r\n11000111\r\n```\r\n\r\n###Sample Output:\r\n```\r\n1 0\r\n1\r\n\r\n5 6\r\n1 4 6 8 11\r\n2 3 5 7 9 10\r\n6 4\r\n1 3 4 7 8 10\r\n2 5 6 9\r\n6 2\r\n1 2 4 5 7 8\r\n3 6\r\n```\r\n\r\n###Explanation:\r\n\r\nIn the first test case, the string $0$ is a palindrome and the empty string is an antipalindrome.\r\n\r\nIn the second test case, we can use indices $[1, 4, 6, 8, 11]$ to create the palindrome $s_1s_4s_6s_8s_{11}=11011$ and indices $[2, 3, 5, 7, 9, 10]$ to create the antipalindrome $s_2s_3s_5s_7s_9s_{10}=011001$.","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"isaf27","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;<\/span><span class='m-username--link'>isaf27<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"6-08-2020","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/isaf27'>isaf27<\/a>","problem_difficulty_level":"Unavailable","user_zen_mode":false,"best_tag":"","editorial_url":"","time":{"view_start_date":1605438000,"submit_start_date":1605438000,"visible_start_date":1605438000,"end_date":1735669800,"current":1643797887},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=STRSPL","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}