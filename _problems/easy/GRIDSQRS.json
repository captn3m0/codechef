{"category_name":"easy","status":"success","problem_code":"GRIDSQRS","problem_name":"Squares Counting","body":"This is an example statement in markdown. This is the statement of the problem [TANDC](https:\/\/codechef.com\/problems\/TANDC) on CodeChef. The main statement starts with the next paragraph. Please make sure to remove this paragraph from your statement before publishing your problem. If your problem doesn't contain Subtasks, you should remove the section subtask too. We are using markdown the syntax of which can be seen [at](https:\/\/github.com\/showdownjs\/showdown\/wiki\/Showdown's-Markdown-syntax). We request you to not use any HTML tags in the statement, e.g. no p, ul, li, pre, br or b tags. If you face any issue, please contact admins or email us at help@codechef.com.\n\nTracy is teaching Charlie maths via a game called $N$-Cube, which involves three sections involving $N$.\n\nTracy gives Charlie a number $N$, and Charlie makes a list of $N$-th powers of integers in increasing order $1^N, 2^N, 3^N, \\dot, \\text{so on}$. This teaches him exponentiation.\n\nThen Charlie performs the following subtraction game $N$ times: Take all pairs of consecutive numbers in the list and take their difference. These differences then form the new list for the next iteration of the game. Eg, if $N$ was 6, the list proceeds as $[1, 64, 729, 4096 ... ]$ to $[63, 685, 3367 ...]$, and so on $5$ more times.\n\nAfter the subtraction game, Charlie has to correctly tell Tracy the $N$-th element of the list. This number is the *value of the game*.\n\nAfter practice Charlie became an expert in the game. To challenge him more, Tracy will give two numbers $M$ (where $M$ is a prime) and $R$ instead of just a single number $N$, and the game must start from $M_R - 1$ instead of $N$. Since the *value of the game* can now become large, Charlie just have to tell the largest integer $K$ such that $M_K$ divides this number. Since even $K$ can be large, output $K$ modulo 1000000007 ($10^9 + 7$).\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"- $1 \\leq T \\leq 10^5$\n- $1 \\leq N \\leq 500$\n- The grid is binary, i.e, $A(i, j) = $ `0` or `1` for every $1\\leq i, j\\leq N$.\n- Sum of $N^2$ over all test cases does not exceed $10^6$.\n","constraintsState":true,"subtasks":"**Subtask 1(100 points):** Original constraints","subtasksState":true,"statement":"You are given a binary square matrix $A$ of size $N \\times N$. Let the value at cell $(i, j)$ be denoted by $A(i, j)$.\n\nYour task is to count the number of *square frames* present in the grid. A *square frame* is defined to be a square submatrix of $A$ whose border elements are all '1'. \n\nFormally,\n- A square submatrix of $A$ of size $k$ with top-left corner $(i, j)$ is defined to be the set of cells $\\{(i+x, j+y) \\mid 0 \\leq x, y \\lt k\\}$. Note that this requires $i+k-1 \\leq N$ and $j+k-1 \\leq N$.\n- A *square frame* of size $k$ with top-left corner $(i, j)$ is defined to be a square submatrix of size $k$ such that $A(i+x, j+y) = $ `1` whenever $x = 0$ or $y = 0$ or $x = k-1$ or $y = k-1$. There is no constraint on the values of elements strictly inside the frame.\n\nRefer to the sample explanation for more details.","inputFormat":"The first line of input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\n\nThe first line of each test case contains a single integer $N$ denoting the size of the grid.\n\nEach of the next $N$ lines contains a string consisting of $N$ characters. The $i$-th such string represents the $i$-th row of $A$. Each character of each string is either `0` or `1`.\n","inputFormatState":true,"outputFormat":"For each test case, output a single integer denoting the count of *square frames* in the grid.","outputFormatState":true,"sampleTestCases":[{"id":"1","input":"2\n2\n10\n00\n4\n1111\n1101\n1011\n1111","output":"1\n17","explanation":"**Test Case $1$:** There is $1$ square frame, the submatrix containing index $(1,1)$. \n\n**Test Case $2$:** There are $14$ square frames of size $1$, $2$ of size $2$, and $1$ of size $4$.\n\nSome of the square frames are : \n- The frame of size $1$ containing point $(3,3)$.\n- The frame of size $2$ with corner points $(1,1),(1,2),(2,2),(2,1)$.\n- The frame of size $2$ with corner points $(3,3),(4,3),(4,4),(3,4)$.\n- The frame of size $4$ with corner points $(1,1),(1,4),(4,4),(4,1)$. ","isDeleted":false}]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"nishant_adm","problem_author_html_handle":"nishant_adm","problem_tester":"","problem_tester_html_handle":"","date_added":"3-12-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/dec21'>dec21<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy'>easy<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/nishant_adm'>nishant_adm<\/a>","problem_difficulty_level":"Unavailable","user_zen_mode":false,"best_tag":"","editorial_url":"https:\/\/discuss.codechef.com\/problems\/GRIDSQRS","time":{"view_start_date":1639387800,"submit_start_date":1639387800,"visible_start_date":1639387800,"end_date":1735669800,"current":1643797818},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=GRIDSQRS","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}