{"category_name":"easy","status":"success","problem_code":"CLLEXO","problem_name":"Jeremy gets a gift","body":"Meanwhile, Candace and Stacy are busy planning to attend the concert of the famous Love H\u00e4ndel. Jeremy will also be attending the event. Therefore, Candace plans to offer the best possible gift to Jeremy.\r\n\r\nCandace has $N$ strings, each of length $M$. Each character of each string can either be a lowercase English letter or the character **'#'**. She denotes the substring of $i$-$th$ string starting from the $l$-$th$ character and ending with the $r$-$th$ character as $S_{i}[l, r]$. She has to choose a list $a$ of $N - 1$ numbers such that  \r\n- $1 \\leq a_1 \\leq a_2 \\leq a_3 \\leq ... \\leq a_{N-1} \\leq  M$.\r\n- The final gift string is obtained by appending the substrings $S_{1}[1, a_{1}]$, $S_{2}[a_{1}, a_{2}]$, $S_{3}[a_{2}, a_{3}]$, .., $S_{N-1}[a_{N-2}, a_{N-1}]$, $S_{N}[a_{N-1}, M]$.\r\n- Candace considers the gift to be the most beautiful one if the final gift string is the lexicographically smallest possible string and it doesn't contain the **'#'** character.\r\n\r\nLet $P$ = $S_{1}[1, a_{1}]$ + $S_{2}[a_{1}, a_{2}]$ + $S_{3}[a_{2}, a_{3}]$ + .., + $S_{N-1}[a_{N-2}, a_{N-1}]$ + $S_{N}[a_{N-1}, M]$, then $P$ should be the lexicographically smallest string  possible and **it should not contain '#' character**, where **'+'** denotes concatenation of two substrings.\r\n\r\nHelp Candace find the best possible gift string quickly as she does not want Jeremy to wait for her. Also, it is guaranteed that at least one such valid string exists.\r\n\r\n###Input\r\n\r\n- The first line contains a single integer $T$ denoting the number of testcases.\r\n- The first line of each test case contains $2$ space separated integers denoting the values of $N$ and $M$ respectively.\r\n- $N$ lines follow. Each line contains a string $S_i$ of length $M$ as described above.\r\n\r\n###Output\r\n\r\nFor every test case, print a line containing lexicographically lowest possible gift string.\r\n\r\n###Constraints \r\n- $1 \\leq T \\leq 10^4$\r\n- $1 \\leq N, M \\leq 10^6$\r\n- $|S_i| = M$\r\n- All $S_i$ will contain either a lower English letter (**'a'** to **'z'** ) or the character **'#'** (ASCII $35$).\r\n- Sum of $N * M$ over all test cases for a particular test file does not exceed $10^7$.\r\n- It is guaranteed that a valid solution will always exist.\r\n\r\n###Sample Input\r\n\t2\r\n\t3 3\r\n\txab\r\n\ta#z\r\n\tcaa\r\n\t5 4\r\n\tpyqs\r\n\tvcot\r\n\tqbiu\r\n\tlihj\r\n\tuvmz\r\n\r\n###Sample Output\r\n\txabza\r\n\tpvcbihjz\r\n\r\n###Explanation\r\nFor test $1$:\r\n\r\nThe array $a$ chosen is: $[3, 3]$\r\n\r\nThe resulting string $P$ is formed by = $S_{1}[1, 3]$ + $S_{2}[3, 3]$ + $S_{3}[3, 3]$ = **xabza**\r\n\r\nFor test $2$:\r\n\r\nThe array $a$ chosen is: $[1, 2, 3, 4]$\r\n\r\nThe resulting string $P$ is formed by = $S_{1}[1, 1]$ + $S_{2}[1, 2]$ + $S_{3}[2, 3]$ + $S_{4}[3, 4]$ + $S_{5}[4, 4]$ = **pvcbihjz**\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"Meanwhile, Candace and Stacy are busy planning to attend the concert of the famous Love H\u00e4ndel. Jeremy will also be attending the event. Therefore, Candace plans to offer the best possible gift to Jeremy.\r\n\r\nCandace has $N$ strings, each of length $M$. Each character of each string can either be a lowercase English letter or the character **'#'**. She denotes the substring of $i$-$th$ string starting from the $l$-$th$ character and ending with the $r$-$th$ character as $S_{i}[l, r]$. She has to choose a list $a$ of $N - 1$ numbers such that  \r\n- $1 \\leq a_1 \\leq a_2 \\leq a_3 \\leq ... \\leq a_{N-1} \\leq  M$.\r\n- The final gift string is obtained by appending the substrings $S_{1}[1, a_{1}]$, $S_{2}[a_{1}, a_{2}]$, $S_{3}[a_{2}, a_{3}]$, .., $S_{N-1}[a_{N-2}, a_{N-1}]$, $S_{N}[a_{N-1}, M]$.\r\n- Candace considers the gift to be the most beautiful one if the final gift string is the lexicographically smallest possible string and it doesn't contain the **'#'** character.\r\n\r\nLet $P$ = $S_{1}[1, a_{1}]$ + $S_{2}[a_{1}, a_{2}]$ + $S_{3}[a_{2}, a_{3}]$ + .., + $S_{N-1}[a_{N-2}, a_{N-1}]$ + $S_{N}[a_{N-1}, M]$, then $P$ should be the lexicographically smallest string  possible and **it should not contain '#' character**, where **'+'** denotes concatenation of two substrings.\r\n\r\nHelp Candace find the best possible gift string quickly as she does not want Jeremy to wait for her. Also, it is guaranteed that at least one such valid string exists.\r\n\r\n###Input\r\n\r\n- The first line contains a single integer $T$ denoting the number of testcases.\r\n- The first line of each test case contains $2$ space separated integers denoting the values of $N$ and $M$ respectively.\r\n- $N$ lines follow. Each line contains a string $S_i$ of length $M$ as described above.\r\n\r\n###Output\r\n\r\nFor every test case, print a line containing lexicographically lowest possible gift string.\r\n\r\n###Constraints \r\n- $1 \\leq T \\leq 10^4$\r\n- $1 \\leq N, M \\leq 10^6$\r\n- $|S_i| = M$\r\n- All $S_i$ will contain either a lower English letter (**'a'** to **'z'** ) or the character **'#'** (ASCII $35$).\r\n- Sum of $N * M$ over all test cases for a particular test file does not exceed $10^7$.\r\n- It is guaranteed that a valid solution will always exist.\r\n\r\n###Sample Input\r\n\t2\r\n\t3 3\r\n\txab\r\n\ta#z\r\n\tcaa\r\n\t5 4\r\n\tpyqs\r\n\tvcot\r\n\tqbiu\r\n\tlihj\r\n\tuvmz\r\n\r\n###Sample Output\r\n\txabza\r\n\tpvcbihjz\r\n\r\n###Explanation\r\nFor test $1$:\r\n\r\nThe array $a$ chosen is: $[3, 3]$\r\n\r\nThe resulting string $P$ is formed by = $S_{1}[1, 3]$ + $S_{2}[3, 3]$ + $S_{3}[3, 3]$ = **xabza**\r\n\r\nFor test $2$:\r\n\r\nThe array $a$ chosen is: $[1, 2, 3, 4]$\r\n\r\nThe resulting string $P$ is formed by = $S_{1}[1, 1]$ + $S_{2}[1, 2]$ + $S_{3}[2, 3]$ + $S_{4}[3, 4]$ + $S_{5}[4, 4]$ = **pvcbihjz**","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"2","source_sizelimit":"50000","problem_author":"sarthakmanna","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;<\/span><span class='m-username--link'>sarthakmanna<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"20-06-2020","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/avijit_agarwal'>avijit_agarwal<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/breadth-first-search'>breadth-first-search<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/cole2020'>cole2020<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/dynamic-programming'>dynamic-programming<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy-medium'>easy-medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/sarthakmanna'>sarthakmanna<\/a>","problem_difficulty_level":"Easy-Medium","user_zen_mode":false,"best_tag":"Dynamic Programming","editorial_url":"https:\/\/discuss.codechef.com\/problems\/CLLEXO","time":{"view_start_date":1594838700,"submit_start_date":1594838700,"visible_start_date":1594838700,"end_date":1735669800,"current":1643797790},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=CLLEXO","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}