{"category_name":"easy","status":"success","problem_code":"ADTCHP","problem_name":"A DT Chip","body":"Cyberverse is in the form of a rectangular grid of $N$ rows and $M$ columns. There is one cyborg living in each cell of the grid. The rows of the grid are numbered from $1$ to $N$, top to bottom. The columns of the grid numbered from $1$ to $M$, left to right.\r\n       \r\nEach cell contains a DT chip designed by doctor Aditi and each DT chip is connected with 4 side adjacent DT chips ( if it exists) in the grid.           \r\n\r\nInitially all DT chips are working. Hence every cyborg in cyberverse can communicate with each other. DT chip at $(x, y)$ is directly connected to its 4 neighboring DT chips and Cyborg at $(x1, y1)$ can communicate with cyborg at $(x2, y2)$ if and only if there exists a path of connected working DT chips between them. Cyborg Vaishakh wants to destroy the cyberverse so he starts with taking down communication. Doctor Aditi will have to keep a check on the connectivity of the cyborgs in order to build a better DT chip from time to time. \r\n\r\nIn total $Q$ events take place and there are only two types of events.\r\n\r\nIn the first type, Vaishakh can cut connections of every cyborg present in some sub-rectangle, with every other cyborg outside the sub-rectangle. The top-leftmost cell of sub-rectangle will be $(x1, y1)$ and down-rightmost cell will be $(x2, y2)$.    \r\n**All the sub-rectangles in first type of event are non overlapping. But they can be nested. Consider sub-rectangles as hollow rectangular frames**\r\n\r\nIn second type, given two cells $(x1,y1)$ and $(x2,y2)$, Doctor Aditi checks if cyborgs living in those cells can communicate with each other or not.\r\n\r\nSince Doctor Aditi is busy upgrading DT chips. Help her to save the cyberverse.\r\n\r\n### Input:\r\n\r\n- The first line of input contains three space-separated integers $N$, $M$, and $Q$ respectively.  \r\n- Each of the next $Q$ lines will contain 5 space-separated integers in one of the two forms:   \r\n$1\\:x1\\:y1\\:x2\\:y2$    \r\n$2\\:x1\\:y1\\:x2\\:y2$    \r\n- If the first integer is $1$, it represents event of first type with $(x1, y1)$ as top-leftmost cell of subrectangle and $(x2,y2)$ as down-rightmost cell of the subrectangle.\r\n- If the first integer is $2$, it represents event of second type with $(x1, y1)$ as first cell and $(x2, y2)$ as second cell.\r\n\r\n### Output:\r\nFor each event of second type, print $YES$ if two cyborgs can communicate with each other and  $NO$ if they cannot.    \r\n**Please note that output is case sensitive**. \r\n\r\n### Constraints:\r\n\r\n- $1 \\leq Q \\leq 300000$\r\n- $1 \\leq N*M \\leq 200000$\r\n- $1 \\leq x1,x2 \\leq N$\r\n- $1 \\leq y1,y2 \\leq M$\r\n- All the sub-rectangles in first type of event are non overlapping. But they can be nested.\r\n\r\n### Sample Input 1:\r\n\r\n```\r\n4 5 3\r\n1 1 2 4 4\r\n2 2 3 3 3\r\n2 1 1 4 5\r\n```\r\n\r\n### Sample output 1:\r\n\r\n```\r\nYES\r\nNO\r\n```\r\n### Sample Input 2:\r\n\r\n```\r\n5 6 3\r\n1 2 2 5 5\r\n2 1 1 5 6\r\n2 1 1 3 4\r\n```\r\n\r\n### Sample output 2:\r\n\r\n```\r\nYES\r\nNO\r\n```\r\n\r\n### Explanation:\r\n\r\n- Here ``B`` represents disconnected DT chips and ``D`` represents working DT chips   \r\n- In Sample $1$:  $N=4,M=5$    \r\n\r\n```\r\nDDDDD\r\nDDDDD\r\nDDDDD\r\nDDDDD\r\n```\r\nIf Cyborg Vaishakh Disconnected rectangle $((1,2),(4,4))$\r\n```\r\nDBBBD\r\nDBDBD\r\nDBDBD\r\nDBBBD\r\n```\r\nThen the grid will become like this \r\n\r\nso cyborg at $(2,3)$ can communicate with cyborg at $(3,3)$ but Cyborg at $(1,1)$ can not communicate with cyborg at $(4,5)$\r\n\r\n- In Sample $2$:  $N=5,M=6$\r\n```\r\nDDDDDD\r\nDDDDDD\r\nDDDDDD\r\nDDDDDD\r\nDDDDDD\r\n```\r\nIf Cyborg Vaishakh Disconnected rectangle $((2,2),(5,5))$\r\n```\r\nDDDDDD\r\nDBBBBD\r\nDBDDBD\r\nDBDDBD\r\nDBBBBD\r\n```\r\nThen the grid will become like this \r\n\r\nso cyborg at $(1,1)$ can communicate with cyborg at $(5,6)$ but not with cyborg at $(3,4)$\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"Cyberverse is in the form of a rectangular grid of $N$ rows and $M$ columns. There is one cyborg living in each cell of the grid. The rows of the grid are numbered from $1$ to $N$, top to bottom. The columns of the grid numbered from $1$ to $M$, left to right.\r\n       \r\nEach cell contains a DT chip designed by doctor Aditi and each DT chip is connected with 4 side adjacent DT chips ( if it exists) in the grid.           \r\n\r\nInitially all DT chips are working. Hence every cyborg in cyberverse can communicate with each other. DT chip at $(x, y)$ is directly connected to its 4 neighboring DT chips and Cyborg at $(x1, y1)$ can communicate with cyborg at $(x2, y2)$ if and only if there exists a path of connected working DT chips between them. Cyborg Vaishakh wants to destroy the cyberverse so he starts with taking down communication. Doctor Aditi will have to keep a check on the connectivity of the cyborgs in order to build a better DT chip from time to time. \r\n\r\nIn total $Q$ events take place and there are only two types of events.\r\n\r\nIn the first type, Vaishakh can cut connections of every cyborg present in some sub-rectangle, with every other cyborg outside the sub-rectangle. The top-leftmost cell of sub-rectangle will be $(x1, y1)$ and down-rightmost cell will be $(x2, y2)$.    \r\n**All the sub-rectangles in first type of event are non overlapping. But they can be nested. Consider sub-rectangles as hollow rectangular frames**\r\n\r\nIn second type, given two cells $(x1,y1)$ and $(x2,y2)$, Doctor Aditi checks if cyborgs living in those cells can communicate with each other or not.\r\n\r\nSince Doctor Aditi is busy upgrading DT chips. Help her to save the cyberverse.\r\n\r\n### Input:\r\n\r\n- The first line of input contains three space-separated integers $N$, $M$, and $Q$ respectively.  \r\n- Each of the next $Q$ lines will contain 5 space-separated integers in one of the two forms:   \r\n$1\\:x1\\:y1\\:x2\\:y2$    \r\n$2\\:x1\\:y1\\:x2\\:y2$    \r\n- If the first integer is $1$, it represents event of first type with $(x1, y1)$ as top-leftmost cell of subrectangle and $(x2,y2)$ as down-rightmost cell of the subrectangle.\r\n- If the first integer is $2$, it represents event of second type with $(x1, y1)$ as first cell and $(x2, y2)$ as second cell.\r\n\r\n### Output:\r\nFor each event of second type, print $YES$ if two cyborgs can communicate with each other and  $NO$ if they cannot.    \r\n**Please note that output is case sensitive**. \r\n\r\n### Constraints:\r\n\r\n- $1 \\leq Q \\leq 300000$\r\n- $1 \\leq N*M \\leq 200000$\r\n- $1 \\leq x1,x2 \\leq N$\r\n- $1 \\leq y1,y2 \\leq M$\r\n- All the sub-rectangles in first type of event are non overlapping. But they can be nested.\r\n\r\n### Sample Input 1:\r\n\r\n```\r\n4 5 3\r\n1 1 2 4 4\r\n2 2 3 3 3\r\n2 1 1 4 5\r\n```\r\n\r\n### Sample output 1:\r\n\r\n```\r\nYES\r\nNO\r\n```\r\n### Sample Input 2:\r\n\r\n```\r\n5 6 3\r\n1 2 2 5 5\r\n2 1 1 5 6\r\n2 1 1 3 4\r\n```\r\n\r\n### Sample output 2:\r\n\r\n```\r\nYES\r\nNO\r\n```\r\n\r\n### Explanation:\r\n\r\n- Here ``B`` represents disconnected DT chips and ``D`` represents working DT chips   \r\n- In Sample $1$:  $N=4,M=5$    \r\n\r\n```\r\nDDDDD\r\nDDDDD\r\nDDDDD\r\nDDDDD\r\n```\r\nIf Cyborg Vaishakh Disconnected rectangle $((1,2),(4,4))$\r\n```\r\nDBBBD\r\nDBDBD\r\nDBDBD\r\nDBBBD\r\n```\r\nThen the grid will become like this \r\n\r\nso cyborg at $(2,3)$ can communicate with cyborg at $(3,3)$ but Cyborg at $(1,1)$ can not communicate with cyborg at $(4,5)$\r\n\r\n- In Sample $2$:  $N=5,M=6$\r\n```\r\nDDDDDD\r\nDDDDDD\r\nDDDDDD\r\nDDDDDD\r\nDDDDDD\r\n```\r\nIf Cyborg Vaishakh Disconnected rectangle $((2,2),(5,5))$\r\n```\r\nDDDDDD\r\nDBBBBD\r\nDBDDBD\r\nDBDDBD\r\nDBBBBD\r\n```\r\nThen the grid will become like this \r\n\r\nso cyborg at $(1,1)$ can communicate with cyborg at $(5,6)$ but not with cyborg at $(3,4)$","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"hackcyborg","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;<\/span><span class='m-username--link'>hackcyborg<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"16-12-2020","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/bytr2020'>bytr2020<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy-medium'>easy-medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/hackcyborg'>hackcyborg<\/a>","problem_difficulty_level":"Easy-Medium","user_zen_mode":false,"best_tag":"","editorial_url":"https:\/\/discuss.codechef.com\/problems\/ADTCHP","time":{"view_start_date":1104528600,"submit_start_date":1104528600,"visible_start_date":1104528600,"end_date":1735669800,"current":1643797761},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=ADTCHP","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}