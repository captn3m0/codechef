{"category_name":"easy","status":"success","problem_code":"LISTLIST","problem_name":"List of Lists","body":"This is an example statement in markdown. This is the statement of the problem [TANDC](https:\/\/codechef.com\/problems\/TANDC) on CodeChef. The main statement starts with the next paragraph. Please make sure to remove this paragraph from your statement before publishing your problem. If your problem doesn't contain Subtasks, you should remove the section subtask too. We are using markdown the syntax of which can be seen [at](https:\/\/github.com\/showdownjs\/showdown\/wiki\/Showdown's-Markdown-syntax). We request you to not use any HTML tags in the statement, e.g. no p, ul, li, pre, br or b tags. If you face any issue, please contact admins or email us at help@codechef.com.\n\nTracy is teaching Charlie maths via a game called $N$-Cube, which involves three sections involving $N$.\n\nTracy gives Charlie a number $N$, and Charlie makes a list of $N$-th powers of integers in increasing order $1^N, 2^N, 3^N, \\dot, \\text{so on}$. This teaches him exponentiation.\n\nThen Charlie performs the following subtraction game $N$ times: Take all pairs of consecutive numbers in the list and take their difference. These differences then form the new list for the next iteration of the game. Eg, if $N$ was 6, the list proceeds as $[1, 64, 729, 4096 ... ]$ to $[63, 685, 3367 ...]$, and so on $5$ more times.\n\nAfter the subtraction game, Charlie has to correctly tell Tracy the $N$-th element of the list. This number is the *value of the game*.\n\nAfter practice Charlie became an expert in the game. To challenge him more, Tracy will give two numbers $M$ (where $M$ is a prime) and $R$ instead of just a single number $N$, and the game must start from $M_R - 1$ instead of $N$. Since the *value of the game* can now become large, Charlie just have to tell the largest integer $K$ such that $M_K$ divides this number. Since even $K$ can be large, output $K$ modulo 1000000007 ($10^9 + 7$).\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"- $1 \\leq T \\leq 10^5$\n- $1 \\leq N \\leq 2 \\cdot 10^5$\n- $1 \\leq A_i \\leq N$\n- Sum of $N$ over all test cases doesn't exceed $2 \\cdot 10^5$\n","constraintsState":true,"subtasks":"**Subtask 1(100 points):** Original constraints","subtasksState":true,"statement":"You are given a positive integer $N$ and an array $A$ of size $N$. There are $N$ lists $L_1, L_2 \\ldots L_N$. Initially, $L_i = [A_i]$.\n\nYou can perform the following operation any number of times as long as there are at least $2$ lists:\n\n- Select $2$ (non-empty) lists $L_i$ and $L_j$ ($i \\neq j$)\n- Append $L_j$ to $L_i$ and remove the list $L_j$. Note that this means $L_j$ cannot be chosen in any future operation.\n\nFind the minimum number of operations required to obtain a set of lists that satisfies the following conditions:\n\n- The first element and last element of each list are equal.\n- The first element of all the lists is the same.\n\nPrint $-1$ if it is not possible to achieve this via any sequence of operations.","inputFormat":"- The first line of input contains a single integer $T$, denoting the number of test cases. The description of $T$ test cases follows.\n- The first line of each test case contains an integer $N$.\n- The second line of each test case contains $N$ space-separated integers $A_1, A_2, \\ldots, A_N$.\n","inputFormatState":true,"outputFormat":"For each test case, print a single line containing one integer: the minimum number of operations required to obtain an array of lists that satisfies the given conditions.\n\nPrint $-1$ if it is impossible to achieve such an array of lists.","outputFormatState":true,"sampleTestCases":[{"id":"1","input":"3\n1\n1\n2\n1 2\n3\n1 1 2\n","output":"0\n-1\n2\n","explanation":"**Test case $1$:** There is only one list $[1]$, and it trivially satisfies the condition so no operations are required.\n\n**Test case $2$:** There are only $2$ ways to do an operation - either take list $[1]$ and append it to list $[2]$ or take list $[2]$ and append it to list $[1]$. In both cases, it is not possible to satisfy both given conditions at the same time. Hence, the answer is $-1$.\n\n**Test case $3$:** Here is one possible order of operations:\n- Select the $3$rd list $[2]$ and append it to the $1$st list $[1]$.\n- Then, select the $2$nd list $[1]$ and append it to the $1$st list $[1, 2]$.\n\nFinally, we are left with the single list $[1, 2, 1]$ which satisfies the given conditions. It can be verified that it is impossible to do this using less than $2$ operations.","isDeleted":false}]},"video_editorial_url":"https:\/\/youtu.be\/9jl_l48Qz1M","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"suryaprak_adm","problem_author_html_handle":"suryaprak_adm","problem_tester":"","problem_tester_html_handle":"","date_added":"1-12-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/dec21'>dec21<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/simple'>simple<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/suryaprak_adm'>suryaprak_adm<\/a>","problem_difficulty_level":"Unavailable","user_zen_mode":false,"best_tag":"","editorial_url":"https:\/\/discuss.codechef.com\/problems\/LISTLIST","time":{"view_start_date":1639387800,"submit_start_date":1639387800,"visible_start_date":1639387800,"end_date":1735669800,"current":1643797834},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=LISTLIST","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}