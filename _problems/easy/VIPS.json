{"category_name":"easy","status":"success","problem_code":"VIPS","problem_name":"Escape Plan","body":"This is an example statement in markdown. This is the statement of the problem [TANDC](https:\/\/codechef.com\/problems\/TANDC) on CodeChef. The main statement starts with the next paragraph. Please make sure to remove this paragraph from your statement before publishing your problem. If your problem doesn't contain Subtasks, you should remove the section subtask too. We are using markdown the syntax of which can be seen [at](https:\/\/github.com\/showdownjs\/showdown\/wiki\/Showdown's-Markdown-syntax). We request you to not use any HTML tags in the statement, e.g. no p, ul, li, pre, br or b tags. If you face any issue, please contact admins or email us at help@codechef.com.\n\nTracy is teaching Charlie maths via a game called $N$-Cube, which involves three sections involving $N$.\n\nTracy gives Charlie a number $N$, and Charlie makes a list of $N$-th powers of integers in increasing order $1^N, 2^N, 3^N, \\dot, \\text{so on}$. This teaches him exponentiation.\n\nThen Charlie performs the following subtraction game $N$ times: Take all pairs of consecutive numbers in the list and take their difference. These differences then form the new list for the next iteration of the game. Eg, if $N$ was 6, the list proceeds as $[1, 64, 729, 4096 ... ]$ to $[63, 685, 3367 ...]$, and so on $5$ more times.\n\nAfter the subtraction game, Charlie has to correctly tell Tracy the $N$-th element of the list. This number is the *value of the game*.\n\nAfter practice Charlie became an expert in the game. To challenge him more, Tracy will give two numbers $M$ (where $M$ is a prime) and $R$ instead of just a single number $N$, and the game must start from $M_R - 1$ instead of $N$. Since the *value of the game* can now become large, Charlie just have to tell the largest integer $K$ such that $M_K$ divides this number. Since even $K$ can be large, output $K$ modulo 1000000007 ($10^9 + 7$).\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"- $1 \\leq T \\leq 10^3$\n- $1 \\leq N \\leq 10^6$\n- $0 \\leq A_i \\leq 10^9$\n- $1 \\leq u,v \\leq N$\n- The graph given in the input will always be a secured tree\n- Sum of $N$ over all test cases does not exceed $10^6$.","constraintsState":true,"subtasks":"- 30 points : $1 \\leq R \\leq 10000$\n- 70 points : $1 \\leq R \\leq 10^9$\n","subtasksState":false,"statement":"*\u201cAnimal instinct. When faced with danger, seek refuge in the herd.\u201d*\n\nJun-Ho has come to know about the escape passage route that VIPs use in case of emergency. Jun-Ho is in the leader's office and he is planning his escape from the building.\n\nThe building has a tree-like structure, with the leader's office as the root. Jun-Ho has obtained information on this structure, in the form of a tree on $N$ nodes rooted at $1$. The building has some security, which can be calculated as follows:\n\n- Each node of the tree has a value assigned to it \u2014 say, $A_i$ for node $i$.\n- Let $u$ be a leaf node of the tree. The **security of $u$** is defined to be the bitwise OR of all values on the (unique) path from the root to $u$. Let this value be denoted $L_u$.\n- The **security of the tree** is then defined to be the sum of the security of all its leaf nodes, i.e, the sum of $L_u$ across all leaf nodes $u$ of the tree.\n\nThe tree is considered to be *secure* when $L_u \\gt 0$ for every leaf node $u$ of the tree; otherwise it is said to be *insecure*.\n\nJun-Ho would like the security of the tree to be as low as possible when making his escape. To this end, he can perform the following operation zero or more times:\n- Pick a node $1 \\leq u \\leq N$ of the tree, and set $A_u = 0$.\n\nHowever, if the tree ever becomes insecure as a result of an operation, the leader is immediately alerted and will foil Jun-Ho's plan. Thus, Jun-Ho **cannot perform an operation that would make the tree insecure**.\n\nHelp Jun-Ho find the minimum possible security the tree can have, such that the tree remains secure after every operation.\n\n**Note**: \n- A leaf is a node of the tree without any child nodes.\n- For $N = 1$, the root is also considered to be a leaf.\n- Given input tree will be secured tree.","inputFormat":"- The first line of input contains a single integer $T$, denoting the number of test cases. The description of $T$ test cases follows.\n- The first line of each test case contains a single integer $N$, denoting the number of nodes of the tree.\n- The next $N-1$ lines each contain two space-separated integers $u$ and $v$, denoting an edge between nodes $u$ and $v$ in the tree.\n- The next line contains $N$ space-separated integers $A_1, A_2, \\ldots, A_N$ \u2014 the values of the nodes.\n","inputFormatState":true,"outputFormat":"For each test case, output a single integer denoting the minimum security of the tree.","outputFormatState":true,"sampleTestCases":[{"id":"1","input":"3\n1\n5\n5\n1 2\n1 3\n3 4\n3 5\n5 2 3 1 4\n4\n1 2\n1 3\n1 4\n2 2 2 2","output":"5\n7\n6","explanation":"**Test Case 1:** No operation can be done, and the minimum security of the tree is thus $5$.\n\n**Test Case 2:** Set $A_1$ and $A_3$ to $0$. It can be seen that $L_2 = 2$, $L_4 = 1$ and $L_5 = 4$; so every leaf  has positive security. The security of the tree is $2 + 1 + 4 = 7$, and this is the minimum attainable.\n![](https:\/\/i.ibb.co\/Ypp9MkQ\/TC2.png)\n\n**Test Case 3:** The given tree already has minimum security, that being $6$.\n","isDeleted":false}]},"video_editorial_url":"https:\/\/youtu.be\/mdIhHfNn4vk","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"2","source_sizelimit":"50000","problem_author":"aman1108","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;<\/span><span class='m-username--link'>aman1108<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"11-12-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/aman1108'>aman1108<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy-medium'>easy-medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/infi2021'>infi2021<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/trees'>trees<\/a>","problem_difficulty_level":"Unavailable","user_zen_mode":false,"best_tag":"","editorial_url":"https:\/\/discuss.codechef.com\/problems\/VIPS","time":{"view_start_date":1640194200,"submit_start_date":1640194200,"visible_start_date":1640194200,"end_date":1735669800,"current":1643797904},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=VIPS","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}