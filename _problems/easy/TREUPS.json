{"category_name":"easy","status":"success","problem_code":"TREUPS","problem_name":"Tree Upshot","body":"You are given a tree with $N$ nodes rooted at node $1$, and your task is to color each node of the tree either white or black. For each $i$ ($1 \\leq i \\leq N$), let $w_i$ be the number of white nodes that come in a simple path from the root node to $i^{th}$ node and $b_i$ be the number of black nodes that come in a simple path from the root node to $i^{th}$ node. The cost of a node $i$ is defined as the absolute difference between $w_i$ and $b_i$. \n\nThe cost of the tree is defined as the summation of the cost of all the nodes in the tree. The value of the tree is defined as the absolute difference between the total number of white nodes and the total number of black nodes in the tree. You have to color the tree in such a way that the cost of the tree is minimized.\n\nYour task is to answer a single query $Q$, such that:\n\n- If $Q$ = $1$, Determine the maximum value the tree can have after minimizing the cost of the tree.\n- If $Q$ = $2$, Determine the minimum value the tree can have after minimizing the cost of the tree.\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"- $1 \\leq T \\leq 1000$\n- $1 \\leq N \\leq 10^5$\n- $1 \\leq Q \\leq 2$\n- $1 \\leq u,v \\leq n, u \\neq v$\n- $\\sum{N}$ over all test cases does not exceed $10^5$.\n- It is guaranteed that the given nodes and edges form a tree.\n","constraintsState":true,"subtasks":"**Subtask #1 (20 points):**\n- $Q = 1$\n\n**Subtask #2 (80 points):**\n- Original constraints\n\n","subtasksState":true,"statement":"### Read problem statements in [Mandarin](https:\/\/www.codechef.com\/download\/translated\/LTIME101\/mandarin\/TREUPS.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/LTIME101\/russian\/TREUPS.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/LTIME101\/vietnamese\/TREUPS.pdf) as well.\n\nYou are given a tree with $N$ nodes rooted at node $1$, and your task is to color each node of the tree either white or black. For each $i$ ($1 \\leq i \\leq N$), let $w_i$ be the number of white nodes that occurs in a simple path from the root node to $i^{th}$ node and $b_i$ be the number of black nodes that occurs in a simple path from the root node to $i^{th}$ node. The cost of a node $i$ is defined as the absolute difference between $w_i$ and $b_i$. \n\nThe cost of the tree is defined as the summation of the cost of all the nodes in the tree. The value of the tree is defined as the absolute difference between the total number of white nodes and the total number of black nodes in the tree. You have to color the tree in such a way that the cost of the tree is minimized.\n\nYour task is to answer a single query $Q$, such that:\n\n- If $Q = 1$, Determine the maximum value the tree can have after minimizing the cost of the tree.\n- If $Q = 2$, Determine the minimum value the tree can have after minimizing the cost of the tree.","inputFormat":"- The first line contains an integer $T$, denoting the number of test cases. The $T$ test cases then follow:\n- The first line of each test case contains two integers $N$ and $Q$, denoting the number of nodes in the tree and the query to answer respectively.\n- The next $N - 1$ lines contain two space-separated integers $u$ and $v$, denoting that there is an edge between the node $u$ and the node $v$.","inputFormatState":true,"outputFormat":"For each test case, print a single line containing one integer - the answer to the query. \n","outputFormatState":true,"sampleTestCases":[{"id":"1","input":"2\n5 1\n1 2\n1 3\n2 4\n2 5\n5 2\n1 2\n1 3\n2 4\n2 5\n","output":"3\n1\n","explanation":"**Test case 1:** Color the node $1$ with black color and color the nodes $2, 3, 4, 5$ with white color to get the minimum cost of the tree, that is $3$, and the maximum value of the tree, that is $3$.\n\n**Test case 2:** Color the nodes $1, 4$ with black color and color the nodes $2, 3, 5$ with white color to get the minimum cost of the tree, that is $3$, and the minimum value of the tree, that is $1$.","isDeleted":false}]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"2","source_sizelimit":"50000","problem_author":"mexomerf","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;<\/span><span class='m-username--link'>mexomerf<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"19-10-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/dynamic-programming'>dynamic-programming<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy-medium'>easy-medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/ltime101'>ltime101<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/mexomerf'>mexomerf<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/trees'>trees<\/a>","problem_difficulty_level":"Unavailable","user_zen_mode":false,"best_tag":"Dynamic Programming","editorial_url":"https:\/\/discuss.codechef.com\/problems\/TREUPS","time":{"view_start_date":1635354000,"submit_start_date":1635354000,"visible_start_date":1635354000,"end_date":1735669800,"current":1643797899},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=TREUPS","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}