{"category_name":"easy","status":"success","problem_code":"MEDMAX","problem_name":"Median Rearrangement","body":"You have an $n \\times n$ matrix $a$. You can rearrange the elements of the matrix in any way. Let $m_1, m_2, \\dots, m_n$ be the medians of each row in $a$ after the rearrangement. The goodness of the matrix $a$ is defined as $\\min(m_1, m_2, \\dots, m_n)$. Naturally, rearranging values also comes with a cost. The cost of rearrangement is defined as $m_1 + m_2 + \\dots + m_n$. \n<br><br>\nFind the $\\textbf{max goodness}$ you can achieve after rearranging a matrix $a$ such that the cost of rearrangement doesn't exceed $k$ or $-1$ if the answer doesn't exist.\n<br><br>\nThe median of an array $a$ consisting of $n$ elements is the $\\lceil{\\frac{n+1}{2}}\\rceil^{th}$ largest element of $a$. The median of $[4, 8, 6, 1]$ is $6$ and the median of $[1, 6, 2, 4, 5]$ is $4$.\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"- $1 \\leq t \\leq 100$\n- $1 \\leq n \\leq 1000$\n- $1 \\leq k \\leq 10^{14}$\n- $1 \\leq a_{i, j} \\leq 10^9$\n- $1 \\leq \\sum n \\leq 1000$","constraintsState":true,"subtasks":"- **Subtask 1 (20 points):** $k = 10^{14}$\n\n- **Subtask 2 (40 points):** $1 \\leq \\sum n \\leq 70$\n\n- **Subtask 3 (40 points):** Original constraints\n\n","subtasksState":true,"statement":"### Read problem statements in [Mandarin](https:\/\/www.codechef.com\/download\/translated\/LTIME101\/mandarin\/MEDMAX.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/LTIME101\/russian\/MEDMAX.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/LTIME101\/vietnamese\/MEDMAX.pdf) as well.\n\nYou have an $n \\times n$ matrix $a$. You can rearrange the elements of the matrix in any way. Let $m_1, m_2, \\dots, m_n$ be the medians of each row in $a$ after the rearrangement. The goodness of the matrix $a$ is defined as the minimum median among the medians of all rows i.e $\\min(m_1, m_2, \\dots, m_n)$. Naturally, rearranging values also comes with a cost. The cost of rearrangement is defined as $m_1 + m_2 + \\dots + m_n$. \n\n\nFind the **maximum goodness** you can achieve after rearranging a matrix $a$ such that the cost of rearrangement doesn't exceed $k$ or $-1$ if the answer doesn't exist.\n\n\nThe median of an array $a$ consisting of $n$ elements is the $\\lceil{\\frac{n+1}{2}}\\rceil^{th}$ smallest element of $a$. The median of $[4, 8, 6, 1]$ is $6$ and the median of $[1, 6, 2, 4, 5]$ is $4$.","inputFormat":"- The first line of the input contains a single integer $t$ denoting the number of test cases. The description of $t$ test cases follows.\n- The first line of each test case consists of two space-separated integers $n$ and $k$.\n- $n$ lines follow, each consisting of $n$ space-separated integers denoting the matrix $a$\n","inputFormatState":true,"outputFormat":"For each test case, print a single line containing one integer - the maximum goodness you can achieve such that the rearrangement cost does not exceed $k$ or `-1` if the answer doesn't exist.","outputFormatState":true,"sampleTestCases":[{"id":"1","input":"3\n4 100\n13 2 1 16\n15 24 3 3\n5 17 9 8\n9 6 11 32\n4 40\n13 2 1 16\n15 24 3 3\n5 17 9 8\n9 6 11 32\n3 1\n3 4 2\n5 7 9\n2 1 1\n","output":"9\n6\n-1","explanation":"**Test case $1$:**  We rearrange the matrix as follows:\n$\\begin{bmatrix}\n11 & 2 & 1 & 16\\\\\n17 & 3 & 13 & 3\\\\\n5 & 15 & 6 & 24\\\\\n32& 9 & 8 & 9\n\\end{bmatrix}$\n. The medians of each row are $11, 13, 15, 9$ respectively. The goodness is $9$ and the cost is $48$. There are other rearrangements that may yield the same goodness but $9$ is the maximum goodness we can get. \n\n**Test case $2$:**  The rearranged matrix is:\n$\\begin{bmatrix}\n17 & 3 & 8 & 3\\\\\n2 & 1 & 6 & 16\\\\\n11& 32 & 15 & 13\\\\\n5 & 24 & 9 & 9\n\\end{bmatrix}$\n. The medians of each row are $8, 6, 15, 9$ respectively. The goodness is $6$ and the cost is $38$. There are other rearrangements that may yield the same goodness but $6$ is the maximum goodness we can get. \n\n**Test case $3$:**  No matter how we rearrange the elements, the cost is always greater than $k$.","isDeleted":false}]},"video_editorial_url":"https:\/\/youtu.be\/GCvvu_O4YUc","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"saarang123","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #684273;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>4&#9733;<\/span><span class='m-username--link'>saarang123<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"17-10-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/binary-search'>binary-search<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy'>easy<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/greedy'>greedy<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/ltime101'>ltime101<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/saarang123'>saarang123<\/a>","problem_difficulty_level":"Easy","user_zen_mode":false,"best_tag":"Binary Search","editorial_url":"https:\/\/discuss.codechef.com\/problems\/MEDMAX","time":{"view_start_date":1635354000,"submit_start_date":1635354000,"visible_start_date":1635354000,"end_date":1735669800,"current":1643797843},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=MEDMAX","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}