{"category_name":"easy","status":"success","problem_code":"RECNDROT","problem_name":"Chef and Rotation","body":"Chef has a sequence $A_1, A_2, \\ldots, A_N$. For a positive integer $M$, sequence $B$ is defined as $B = A*M$ that is, appending $A$ exactly $M$ times. For example, If $A = [1, 2]$ and $M = 3$, then $B = A*M = [1, 2, 1, 2, 1, 2]$\r\n\r\nYou have to help him to find out the minimum value of $M$ such that the length of the **longest strictly increasing subsequence** is maximum possible.\r\n\r\n###Input:\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains a single integer $N$.\r\n- The second line contains $N$ space-separated integers $A_1, A_2, \\ldots, A_N$.\r\n\r\n###Output:\r\nFor each test case, print a single line containing one integer \u2015 the **minimum** value of $M$.\r\n\r\n###Constraints \r\n- $1 \\le T \\le 500$\r\n- $1 \\le N \\le 2*10^5$\r\n- $1 \\le A_i \\le 10^9$\r\n- It's guaranteed that the total length of the sequence $A$ in one test file doesn't exceed $2*10^6$\r\n\r\n###Sample Input:\r\n```\r\n3\r\n2\r\n2 1\r\n2\r\n1 2\r\n5\r\n1 3 2 1 2\r\n```\r\n\r\n###Sample Output:\r\n```\r\n2\r\n1\r\n2\r\n```\r\n\r\n### Explanation:\r\nIn the first test case, Choosing $M = 2$ gives $B = [2, 1, 2, 1]$ which has a longest strictly increasing sequence of length $2$ which is the maximum possible.\r\n\r\nIn the second test case, Choosing $M = 1$ gives $B  = [1, 2]$ which has a longest strictly increasing sequence of length $2$ which is the maximum possible.\r\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"Chef has a sequence $A_1, A_2, \\ldots, A_N$. For a positive integer $M$, sequence $B$ is defined as $B = A*M$ that is, appending $A$ exactly $M$ times. For example, If $A = [1, 2]$ and $M = 3$, then $B = A*M = [1, 2, 1, 2, 1, 2]$\r\n\r\nYou have to help him to find out the minimum value of $M$ such that the length of the **longest strictly increasing subsequence** is maximum possible.\r\n\r\n###Input:\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains a single integer $N$.\r\n- The second line contains $N$ space-separated integers $A_1, A_2, \\ldots, A_N$.\r\n\r\n###Output:\r\nFor each test case, print a single line containing one integer \u2015 the **minimum** value of $M$.\r\n\r\n###Constraints \r\n- $1 \\le T \\le 500$\r\n- $1 \\le N \\le 2*10^5$\r\n- $1 \\le A_i \\le 10^9$\r\n- It's guaranteed that the total length of the sequence $A$ in one test file doesn't exceed $2*10^6$\r\n\r\n###Sample Input:\r\n```\r\n3\r\n2\r\n2 1\r\n2\r\n1 2\r\n5\r\n1 3 2 1 2\r\n```\r\n\r\n###Sample Output:\r\n```\r\n2\r\n1\r\n2\r\n```\r\n\r\n### Explanation:\r\nIn the first test case, Choosing $M = 2$ gives $B = [2, 1, 2, 1]$ which has a longest strictly increasing sequence of length $2$ which is the maximum possible.\r\n\r\nIn the second test case, Choosing $M = 1$ gives $B  = [1, 2]$ which has a longest strictly increasing sequence of length $2$ which is the maximum possible.\r\n","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM","max_timelimit":"2","source_sizelimit":"50000","problem_author":"rishup_nitdgp","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;<\/span><span class='m-username--link'>rishup_nitdgp<\/span>","problem_tester":null,"problem_tester_html_handle":"","date_added":"31-12-2019","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/easy'>easy<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/greedy'>greedy<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/hashing'>hashing<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/rc122020'>rc122020<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/rishup_nitdgp'>rishup_nitdgp<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/rishup_nitdgp'>rishup_nitdgp<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/sachin_yadav'>sachin_yadav<\/a>","problem_difficulty_level":"Easy","user_zen_mode":false,"best_tag":"","editorial_url":"https:\/\/discuss.codechef.com\/problems\/RECNDROT","time":{"view_start_date":1588010400,"submit_start_date":1588010400,"visible_start_date":1588010400,"end_date":1735669800,"current":1643797869},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=RECNDROT","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}