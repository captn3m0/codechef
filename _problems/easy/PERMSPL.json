{"category_name":"easy","status":"success","problem_code":"PERMSPL","problem_name":"Permutation Split","body":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/LTIME88\/hindi\/PERMSPL.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/LTIME88\/bengali\/PERMSPL.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/LTIME88\/mandarin\/PERMSPL.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/LTIME88\/russian\/PERMSPL.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/LTIME88\/vietnamese\/PERMSPL.pdf) as well.\r\n\r\nFor a sequence of positive integers $A_1, A_2, \\ldots, A_K$, let's define the number of inversions in it as the number of pairs of integers $(i, j)$ such that $1 \\le i \\lt j \\le K$ and $A_i \\gt A_j$.\r\n\r\nYou are given a permutation $P_1, P_2, \\ldots, P_N$ of the integers $1$ through $N$. Determine if it is possible to partition this permutation into two subsequences (possibly empty or non-contiguous) such that:\r\n- Each element of $P$ appears in exactly one of these subsequences.\r\n- The numbers of inversions in one subsequence is equal to the number of inversions in the other subsequence.\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains a single integer $N$.\r\n- The second line contains $N$ space-separated integers $P_1, P_2, \\ldots, P_N$.\r\n\r\n### Output\r\nFor each test case, print a single line containing the string `\"YES\"` if it is possible to partition the permutation in a given way or `\"NO\"` if it is impossible.\r\n\r\n### Constraints\r\n- $1 \\le N \\le 100$\r\n- $1 \\le P_i \\le N$ for each valid $i$\r\n- $P_1, P_2, \\ldots, P_N$ are pairwise distinct\r\n- the sum of $N$ over all test cases does not exceed $200$\r\n\r\n### Subtasks\r\n**Subtask #1 (20 points):** $N \\le 16$\r\n\r\n**Subtask #2 (80 points):** original constraints\r\n\r\n### Example Input\r\n```\r\n4\r\n1\r\n1\r\n3\r\n3 2 1\r\n4\r\n4 3 2 1\r\n5 \r\n1 4 3 2 5\r\n```\r\n\r\n### Example Output\r\n```\r\nYES\r\nNO\r\nYES\r\nNO\r\n```\r\n\r\n### Explanation\r\n**Example case 1:** We can split $(1)$ into $(1)$ and $()$. There are $0$ inversions in each of these sequences.\r\n\r\n**Example case 3:** We can split $(4, 3, 2, 1)$ into $(4, 3)$ and $(2, 1)$. There is $1$ inversion in each of them. Note that this is not the only solution \u2015 we could also split the permutation into sequences $(4, 1)$ and $(3, 2)$.\r\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/LTIME88\/hindi\/PERMSPL.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/LTIME88\/bengali\/PERMSPL.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/LTIME88\/mandarin\/PERMSPL.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/LTIME88\/russian\/PERMSPL.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/LTIME88\/vietnamese\/PERMSPL.pdf) as well.\r\n\r\nFor a sequence of positive integers $A_1, A_2, \\ldots, A_K$, let's define the number of inversions in it as the number of pairs of integers $(i, j)$ such that $1 \\le i \\lt j \\le K$ and $A_i \\gt A_j$.\r\n\r\nYou are given a permutation $P_1, P_2, \\ldots, P_N$ of the integers $1$ through $N$. Determine if it is possible to partition this permutation into two subsequences (possibly empty or non-contiguous) such that:\r\n- Each element of $P$ appears in exactly one of these subsequences.\r\n- The numbers of inversions in one subsequence is equal to the number of inversions in the other subsequence.\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains a single integer $N$.\r\n- The second line contains $N$ space-separated integers $P_1, P_2, \\ldots, P_N$.\r\n\r\n### Output\r\nFor each test case, print a single line containing the string `\"YES\"` if it is possible to partition the permutation in a given way or `\"NO\"` if it is impossible.\r\n\r\n### Constraints\r\n- $1 \\le N \\le 100$\r\n- $1 \\le P_i \\le N$ for each valid $i$\r\n- $P_1, P_2, \\ldots, P_N$ are pairwise distinct\r\n- the sum of $N$ over all test cases does not exceed $200$\r\n\r\n### Subtasks\r\n**Subtask #1 (20 points):** $N \\le 16$\r\n\r\n**Subtask #2 (80 points):** original constraints","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[{"id":"1","input":"4\r\n1\r\n1\r\n3\r\n3 2 1\r\n4\r\n4 3 2 1\r\n5 \r\n1 4 3 2 5","output":"YES\r\nNO\r\nYES\r\nNO","explanation":"**Example case 1:** We can split $(1)$ into $(1)$ and $()$. There are $0$ inversions in each of these sequences.\r\n\r\n**Example case 3:** We can split $(4, 3, 2, 1)$ into $(4, 3)$ and $(2, 1)$. There is $1$ inversion in each of them. Note that this is not the only solution ? we could also split the permutation into sequences $(4, 1)$ and $(3, 2)$.","isDeleted":false}]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"anton_trygub","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;<\/span><span class='m-username--link'>anton_trygub<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"12-09-2020","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/anton_trygub'>anton_trygub<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/dynamic-programming'>dynamic-programming<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy-medium'>easy-medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/knapsack'>knapsack<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/ltime88'>ltime88<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/math'>math<\/a>","problem_difficulty_level":"Easy-Medium","user_zen_mode":false,"best_tag":"Dynamic Programming","editorial_url":"https:\/\/discuss.codechef.com\/problems\/PERMSPL","time":{"view_start_date":1104528600,"submit_start_date":1104528600,"visible_start_date":1104528600,"end_date":1735669800,"current":1643797859},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=PERMSPL","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}