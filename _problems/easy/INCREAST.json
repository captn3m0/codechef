{"category_name":"easy","status":"success","problem_code":"INCREAST","problem_name":"Increasing String ","body":"This is an example statement in markdown. This is the statement of the problem [TANDC](https:\/\/codechef.com\/problems\/TANDC) on CodeChef. The main statement starts with the next paragraph. Please make sure to remove this paragraph from your statement before publishing your problem. If your problem doesn't contain Subtasks, you should remove the section subtask too. We are using markdown the syntax of which can be seen [at](https:\/\/github.com\/showdownjs\/showdown\/wiki\/Showdown's-Markdown-syntax). We request you to not use any HTML tags in the statement, e.g. no p, ul, li, pre, br or b tags. If you face any issue, please contact admins or email us at help@codechef.com.\n\nTracy is teaching Charlie maths via a game called $N$-Cube, which involves three sections involving $N$.\n\nTracy gives Charlie a number $N$, and Charlie makes a list of $N$-th powers of integers in increasing order $1^N, 2^N, 3^N, \\dot, \\text{so on}$. This teaches him exponentiation.\n\nThen Charlie performs the following subtraction game $N$ times: Take all pairs of consecutive numbers in the list and take their difference. These differences then form the new list for the next iteration of the game. Eg, if $N$ was 6, the list proceeds as $[1, 64, 729, 4096 ... ]$ to $[63, 685, 3367 ...]$, and so on $5$ more times.\n\nAfter the subtraction game, Charlie has to correctly tell Tracy the $N$-th element of the list. This number is the *value of the game*.\n\nAfter practice Charlie became an expert in the game. To challenge him more, Tracy will give two numbers $M$ (where $M$ is a prime) and $R$ instead of just a single number $N$, and the game must start from $M_R - 1$ instead of $N$. Since the *value of the game* can now become large, Charlie just have to tell the largest integer $K$ such that $M_K$ divides this number. Since even $K$ can be large, output $K$ modulo 1000000007 ($10^9 + 7$).\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"- $1 \\leq T \\leq 2 \\cdot 10^5$\n- $1 \\le \\lvert S \\rvert \\le 10^5$\n- $S$ contains only lowercase English letters.\n- Sum of $ \\lvert S \\rvert $ over all test cases does not exceed $10^6$.\n","constraintsState":true,"subtasks":"- **Subtask 1 (100 points):** Original constraints","subtasksState":true,"statement":"You are given a string $S$, consisting of lowercase English letters. You can do the following operation **at most once** :\n\n- Choose a subsequence of the string $S$, then remove it from $S$ and concatenate the subsequence at the end of the remaining string. \n\n\nFind the **lexicographically minimum string** that can be obtained by performing this operation **at most once** on $S$.\n\nNote that:\n\n- A string $A$ is a subsequence of a string $B$ if $A$ can be obtained by deleting several (possibly, zero or all) characters from $B$.\n- Given two strings of the same length $A$ and $B$, we say that $A$ is lexicographically smaller than $B$ if there exists an index $i$ such that $A_1=B_1,A_2=B_2,\\ldots,A_{i-1}=B_{i-1}$ and  $A_i\\lt B_i$.","inputFormat":"- The first line of input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\n- The first and only line of each test case contains a string $S$.","inputFormatState":true,"outputFormat":"For each test case, print a single line containing the lexicographically minimum string which can be obtained from $S$ by performing the given operation at most once.\n","outputFormatState":true,"sampleTestCases":[{"id":"1","input":"4\naba\nabcd\ncbcdbef\nfabcdac","output":"aab\nabcd\nbbccdef\naacfbcd\n\n","explanation":"**Test case $1$:** It is optimal to choose the subsequence $b$, then remove and concatenate the subsequence at the end of the remaining string $aa$. Hence the final string is $aa + b = aab$.\n\n**Test case $2$:** The given string is already lexicographically minimum.\n\n**Test case $3$:** It is optimal to choose the subsequence $ccdef$, then remove and concatenate the subsequence at the end of the remaining string $bb$. Hence the final string is $bb + ccdef = bbccdef$. \n","isDeleted":false}]},"video_editorial_url":"https:\/\/youtu.be\/Wimzws_ru0I","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"soumyadeep_21","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;<\/span><span class='m-username--link'>soumyadeep_21<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"20-07-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/dec21'>dec21<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy-medium'>easy-medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/soumyadeep_21'>soumyadeep_21<\/a>","problem_difficulty_level":"Unavailable","user_zen_mode":false,"best_tag":"","editorial_url":"https:\/\/discuss.codechef.com\/problems\/INCREAST","time":{"view_start_date":1639387800,"submit_start_date":1639387800,"visible_start_date":1639387800,"end_date":1735669800,"current":1643797827},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=INCREAST","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}