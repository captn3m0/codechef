{"category_name":"easy","status":"success","problem_code":"DUALDIST","problem_name":"Dual Distance","body":"### Read problem statements in [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/JUNE21\/vietnamese\/DUALDIST.pdf),\r\n[Bengali](https:\/\/www.codechef.com\/download\/translated\/JUNE21\/bengali\/DUALDIST.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/JUNE21\/mandarin\/DUALDIST.pdf), and [Russian](https:\/\/www.codechef.com\/download\/translated\/JUNE21\/russian\/DUALDIST.pdf) as well. \r\n\r\nGiven a tree with $N$ nodes, answer $Q$ queries of the following type:\r\n\r\n- $a, b$ (where $a \\ne b$) which asks you to calculate $\\sum_{i=1}^{N} \\min(\\mathrm{dist}(i, a), \\mathrm{dist}(i, b))$ where $\\mathrm{dist}(x, y)$ is the number of edges on the shortest path between the nodes $x$ and $y$ in the tree.\r\n\r\n**Note:** The input and output of this problem are large, so prefer using fast input\/output methods.\r\n\r\n###Input\r\n\r\n- The first line contains an integer $T$, the number of test cases. Then the test cases follow. \r\n- Each test case contains $N + Q$ lines of input.\r\n- The first line contains two integers $N$ and $Q$.\r\n- The next $N - 1$ lines each contains two integers $u$, $v$ representing an edge between nodes $u$ and $v$ in the tree.\r\n- The next $Q$ lines each contains two integers $a$, $b$, the nodes considered for the respective query.\r\n\r\n###Output\r\nFor each query of each test case, output the answer in a new line.\r\n\r\n###Constraints \r\n- $1 \\leq T \\leq 8$\r\n- $2 \\leq N \\leq 10^5$\r\n- $1 \\leq Q \\leq 10^5$\r\n- $a \\ne b$\r\n- The sum of $N$ over all test cases is at most $5\\cdot 10^5$.\r\n- The sum of $Q$ over all test cases is at most $5\\cdot 10^5$.\r\n- Its guaranteed that the given input is a valid tree.\r\n\r\n###Subtasks\r\n**Subtask #1 (20 points):** \r\n- $2 \\leq N \\leq 10^3$\r\n- $1 \\leq Q \\leq 10^3$\r\n- The sum of $N$ over all test cases is at most $5\\cdot 10^3$.\r\n- The sum of $Q$ over all test cases is at most $5\\cdot 10^3$.\r\n- Time limit: $0.5$ sec.\r\n\r\n**Subtask #2 (80 points):** \r\n- original constraints\r\n- Time limit: $2$ sec.\r\n\r\n###Sample Input\r\n```\r\n2\r\n4 2\r\n1 2\r\n2 3\r\n3 4\r\n1 2\r\n3 1\r\n7 1\r\n1 2\r\n1 3\r\n2 4\r\n2 5\r\n3 6\r\n3 7\r\n2 6\r\n```\r\n\r\n###Sample Output\r\n```\r\n3\r\n2\r\n6\r\n```\r\n\t\r\n###Explanation:\r\n**Test Case $1$:** \r\n- **Query $1$:** Answer = $\\min(\\mathrm{dist}(1, 1), \\mathrm{dist}(1, 2))$ + $\\min(\\mathrm{dist}(2, 1), \\mathrm{dist}(2, 2))$ + $\\min(\\mathrm{dist}(3, 1), \\mathrm{dist}(3, 2))$ + $\\min(\\mathrm{dist}(4, 1), \\mathrm{dist}(4, 2))$  = $\\min(0, 1)$ + $\\min(1, 0)$ + $\\min(2, 1)$ + $\\min(3, 2)$ = $0 + 0 + 1 + 2$ = $3$.\r\n\r\n- **Query $2$:** Answer = $\\min(\\mathrm{dist}(1, 1), \\mathrm{dist}(1, 3))$ + $\\min(\\mathrm{dist}(2, 1), \\mathrm{dist}(2, 3))$ + $\\min(\\mathrm{dist}(3, 1), \\mathrm{dist}(3, 3))$ + $\\min(\\mathrm{dist}(4, 1), \\mathrm{dist}(4, 3))$  = $\\min(0, 2)$ + $\\min(1, 1)$ + $\\min(2, 0)$ + $\\min(3, 1)$ = $0 + 1 + 0 + 1$ = $2$.\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"### Read problem statements in [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/JUNE21\/vietnamese\/DUALDIST.pdf),\r\n[Bengali](https:\/\/www.codechef.com\/download\/translated\/JUNE21\/bengali\/DUALDIST.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/JUNE21\/mandarin\/DUALDIST.pdf), and [Russian](https:\/\/www.codechef.com\/download\/translated\/JUNE21\/russian\/DUALDIST.pdf) as well. \r\n\r\nGiven a tree with $N$ nodes, answer $Q$ queries of the following type:\r\n\r\n- $a, b$ (where $a \\ne b$) which asks you to calculate $\\sum_{i=1}^{N} \\min(\\mathrm{dist}(i, a), \\mathrm{dist}(i, b))$ where $\\mathrm{dist}(x, y)$ is the number of edges on the shortest path between the nodes $x$ and $y$ in the tree.\r\n\r\n**Note:** The input and output of this problem are large, so prefer using fast input\/output methods.\r\n\r\n###Input\r\n\r\n- The first line contains an integer $T$, the number of test cases. Then the test cases follow. \r\n- Each test case contains $N + Q$ lines of input.\r\n- The first line contains two integers $N$ and $Q$.\r\n- The next $N - 1$ lines each contains two integers $u$, $v$ representing an edge between nodes $u$ and $v$ in the tree.\r\n- The next $Q$ lines each contains two integers $a$, $b$, the nodes considered for the respective query.\r\n\r\n###Output\r\nFor each query of each test case, output the answer in a new line.\r\n\r\n###Constraints \r\n- $1 \\leq T \\leq 8$\r\n- $2 \\leq N \\leq 10^5$\r\n- $1 \\leq Q \\leq 10^5$\r\n- $a \\ne b$\r\n- The sum of $N$ over all test cases is at most $5\\cdot 10^5$.\r\n- The sum of $Q$ over all test cases is at most $5\\cdot 10^5$.\r\n- Its guaranteed that the given input is a valid tree.\r\n\r\n###Subtasks\r\n**Subtask #1 (20 points):** \r\n- $2 \\leq N \\leq 10^3$\r\n- $1 \\leq Q \\leq 10^3$\r\n- The sum of $N$ over all test cases is at most $5\\cdot 10^3$.\r\n- The sum of $Q$ over all test cases is at most $5\\cdot 10^3$.\r\n- Time limit: $0.5$ sec.\r\n\r\n**Subtask #2 (80 points):** \r\n- original constraints\r\n- Time limit: $2$ sec.","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[{"id":"1","input":"2\r\n4 2\r\n1 2\r\n2 3\r\n3 4\r\n1 2\r\n3 1\r\n7 1\r\n1 2\r\n1 3\r\n2 4\r\n2 5\r\n3 6\r\n3 7\r\n2 6","output":"3\r\n2\r\n6","explanation":"**Test Case $1$:** \r\n- **Query $1$:** Answer = $\\min(\\mathrm{dist}(1, 1), \\mathrm{dist}(1, 2))$ + $\\min(\\mathrm{dist}(2, 1), \\mathrm{dist}(2, 2))$ + $\\min(\\mathrm{dist}(3, 1), \\mathrm{dist}(3, 2))$ + $\\min(\\mathrm{dist}(4, 1), \\mathrm{dist}(4, 2))$  = $\\min(0, 1)$ + $\\min(1, 0)$ + $\\min(2, 1)$ + $\\min(3, 2)$ = $0 + 0 + 1 + 2$ = $3$.\r\n\r\n- **Query $2$:** Answer = $\\min(\\mathrm{dist}(1, 1), \\mathrm{dist}(1, 3))$ + $\\min(\\mathrm{dist}(2, 1), \\mathrm{dist}(2, 3))$ + $\\min(\\mathrm{dist}(3, 1), \\mathrm{dist}(3, 3))$ + $\\min(\\mathrm{dist}(4, 1), \\mathrm{dist}(4, 3))$  = $\\min(0, 2)$ + $\\min(1, 1)$ + $\\min(2, 0)$ + $\\min(3, 1)$ = $0 + 1 + 0 + 1$ = $2$.","isDeleted":false}]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"0.5 - 2","source_sizelimit":"50000","problem_author":"daanish_adm","problem_author_html_handle":"daanish_adm","problem_tester":"iscsi","problem_tester_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;<\/span><span class='m-username--link'>iscsi<\/span>","date_added":"30-05-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/binary-lifting'>binary-lifting<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/daanish_adm'>daanish_adm<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/dp-on-trees'>dp-on-trees<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy-medium'>easy-medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/june21'>june21<\/a>","problem_difficulty_level":"Easy-Medium","user_zen_mode":false,"best_tag":"Binary Lifting","editorial_url":"https:\/\/discuss.codechef.com\/problems\/DUALDIST","time":{"view_start_date":1623663000,"submit_start_date":1623663000,"visible_start_date":1623663000,"end_date":1735669800,"current":1643797804},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=DUALDIST","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}