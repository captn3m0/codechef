{"category_name":"easy","status":"success","problem_code":"TREEPERM","problem_name":"Tree Permutations","body":"### Read problem statements in [Bengali](https:\/\/www.codechef.com\/download\/translated\/APRIL21\/bengali\/TREEPERM.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/APRIL21\/mandarin\/TREEPERM.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/APRIL21\/russian\/TREEPERM.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/APRIL21\/vietnamese\/TREEPERM.pdf) as well.\r\n\r\nYou are given a tree with $N$ nodes (numbered $1$ through $N$), rooted at node $1$. For each valid $i$, node $i$ has a value $a_i$ written on it.\r\n\r\nAn undirected simple path between any two nodes $u$ and $v$ is said to be vertical if $u=v$ or $u$ is an ancestor of $v$ or $v$ is an ancestor of $u$. Let's define a *vertical partition* of the tree as a set of vertical paths such that each node belongs to exactly one of these paths.\r\n\r\nYou are also given a sequence of $N$ integers $b_1, b_2, \\ldots, b_N$. A vertical partition is *good* if, for each of its paths, we can permute the values written on the nodes in this path, and this can be done in such a way that we reach a state where for each valid $i$, the value written on node $i$ is $b_i$.\r\n\r\nThe difficulty of your task is described by a parameter $S$. If $S=1$, your task is only to determine whether at least one good vertical partition exists. If $S=2$, you are required to find the number of good vertical partitions modulo $1,000,000,007$ ($10^9+7$).\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains two space-separated integers $N$ and $S$.\r\n- Each of the next $N-1$ lines contains two space-separated integers $u$ and $v$ denoting that nodes $u$ and $v$ are connected by an edge.\r\n- The next line contains $N$ space-separated integers $a_1, a_2, \\ldots, a_N$.\r\n- The line after that contains $N$ space-separated integers $b_1, b_2, \\ldots, b_N$.\r\n\r\n### Output\r\nFor each test case, print a single line containing one integer:\r\n- If $S=1$, this integer should be $1$ if a good vertical partition exists or $0$ if it does not exist.\r\n- If $S=2$, this integer should be the number of good vertical partitions modulo $1,000,000,007$ ($10^9+7$).\r\n\r\n### Constraints\r\n- $1 \\le T \\le 10^6$\r\n- $1 \\leq N \\leq 10^5$\r\n- $S \\in \\{1, 2\\}$\r\n- $1 \\leq u, v \\leq N$\r\n- the graph described on the input is a tree\r\n- $1 \\leq a_i, b_i \\leq 10^6$ for each valid $i$\r\n- the sum of $N$ over all test cases does not exceed $10^6$\r\n\r\n### Subtasks\r\n**Subtask #1 (40 points, time limit 1 seconds):** the sum of $N$ over all test cases does not exceed $1,000$\r\n\r\n**Subtask #2 (30 points, time limit 2 seconds):** $S = 1$\r\n\r\n**Subtask #3 (30 points, time limit 2 seconds):** original constraints\r\n\r\n### Example Input\r\n```\r\n4\r\n3 2\r\n1 2\r\n2 3\r\n4 5 6\r\n4 6 5\r\n6 2\r\n1 2\r\n1 3\r\n2 4\r\n3 5\r\n3 6\r\n10 20 30 40 50 60\r\n10 40 50 20 30 60\r\n6 1\r\n1 2\r\n1 3\r\n2 4\r\n3 5\r\n3 6\r\n10 20 30 40 50 60\r\n10 40 50 20 30 60\r\n1 2\r\n1\r\n2\r\n```\r\n\r\n### Example Output\r\n```\r\n2\r\n3\r\n1\r\n0\r\n```\r\n\r\n### Explanation\r\n**Example case 1:** The good vertical partitions are $\\{[1], [2, 3]\\}$ and $\\{[1, 2, 3]\\}$.\r\n\r\n**Example case 2:** The good vertical partitions are:\r\n- $\\{[1, 2, 4], [3, 5], [6]\\}$\r\n- $\\{[1], [2, 4], [3, 5], [6]\\}$\r\n- $\\{[1, 3, 5], [2, 4], [6]\\}$\r\n\r\n**Example case 3:** The same as example case 2, but with $S=1$.\r\n\r\n**Example case 4:** There is no good vertical partition.\r\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"### Read problem statements in [Bengali](https:\/\/www.codechef.com\/download\/translated\/APRIL21\/bengali\/TREEPERM.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/APRIL21\/mandarin\/TREEPERM.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/APRIL21\/russian\/TREEPERM.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/APRIL21\/vietnamese\/TREEPERM.pdf) as well.\r\n\r\nYou are given a tree with $N$ nodes (numbered $1$ through $N$), rooted at node $1$. For each valid $i$, node $i$ has a value $a_i$ written on it.\r\n\r\nAn undirected simple path between any two nodes $u$ and $v$ is said to be vertical if $u=v$ or $u$ is an ancestor of $v$ or $v$ is an ancestor of $u$. Let's define a *vertical partition* of the tree as a set of vertical paths such that each node belongs to exactly one of these paths.\r\n\r\nYou are also given a sequence of $N$ integers $b_1, b_2, \\ldots, b_N$. A vertical partition is *good* if, for each of its paths, we can permute the values written on the nodes in this path, and this can be done in such a way that we reach a state where for each valid $i$, the value written on node $i$ is $b_i$.\r\n\r\nThe difficulty of your task is described by a parameter $S$. If $S=1$, your task is only to determine whether at least one good vertical partition exists. If $S=2$, you are required to find the number of good vertical partitions modulo $1,000,000,007$ ($10^9+7$).\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains two space-separated integers $N$ and $S$.\r\n- Each of the next $N-1$ lines contains two space-separated integers $u$ and $v$ denoting that nodes $u$ and $v$ are connected by an edge.\r\n- The next line contains $N$ space-separated integers $a_1, a_2, \\ldots, a_N$.\r\n- The line after that contains $N$ space-separated integers $b_1, b_2, \\ldots, b_N$.\r\n\r\n### Output\r\nFor each test case, print a single line containing one integer:\r\n- If $S=1$, this integer should be $1$ if a good vertical partition exists or $0$ if it does not exist.\r\n- If $S=2$, this integer should be the number of good vertical partitions modulo $1,000,000,007$ ($10^9+7$).\r\n\r\n### Constraints\r\n- $1 \\le T \\le 10^6$\r\n- $1 \\leq N \\leq 10^5$\r\n- $S \\in \\{1, 2\\}$\r\n- $1 \\leq u, v \\leq N$\r\n- the graph described on the input is a tree\r\n- $1 \\leq a_i, b_i \\leq 10^6$ for each valid $i$\r\n- the sum of $N$ over all test cases does not exceed $10^6$\r\n\r\n### Subtasks\r\n**Subtask #1 (40 points, time limit 1 seconds):** the sum of $N$ over all test cases does not exceed $1,000$\r\n\r\n**Subtask #2 (30 points, time limit 2 seconds):** $S = 1$\r\n\r\n**Subtask #3 (30 points, time limit 2 seconds):** original constraints","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[{"id":"1","input":"4\r\n3 2\r\n1 2\r\n2 3\r\n4 5 6\r\n4 6 5\r\n6 2\r\n1 2\r\n1 3\r\n2 4\r\n3 5\r\n3 6\r\n10 20 30 40 50 60\r\n10 40 50 20 30 60\r\n6 1\r\n1 2\r\n1 3\r\n2 4\r\n3 5\r\n3 6\r\n10 20 30 40 50 60\r\n10 40 50 20 30 60\r\n1 2\r\n1\r\n2","output":"2\r\n3\r\n1\r\n0","explanation":"**Example case 1:** The good vertical partitions are $\\{[1], [2, 3]\\}$ and $\\{[1, 2, 3]\\}$.\r\n\r\n**Example case 2:** The good vertical partitions are:\r\n- $\\{[1, 2, 4], [3, 5], [6]\\}$\r\n- $\\{[1], [2, 4], [3, 5], [6]\\}$\r\n- $\\{[1, 3, 5], [2, 4], [6]\\}$\r\n\r\n**Example case 3:** The same as example case 2, but with $S=1$.\r\n\r\n**Example case 4:** There is no good vertical partition.","isDeleted":false}]},"video_editorial_url":"https:\/\/youtu.be\/0iTcn-Bf4m4","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1 - 2","source_sizelimit":"50000","problem_author":"a7med1080","problem_author_html_handle":"a7med1080","problem_tester":"","problem_tester_html_handle":"","date_added":"26-01-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/a7med1080'>a7med1080<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/april21'>april21<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/dynamic-programming'>dynamic-programming<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy-medium'>easy-medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/greedy'>greedy<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/trees'>trees<\/a>","problem_difficulty_level":"Easy-Medium","user_zen_mode":false,"best_tag":"Dynamic Programming","editorial_url":"https:\/\/discuss.codechef.com\/problems\/TREEPERM","time":{"view_start_date":1618219800,"submit_start_date":1618219800,"visible_start_date":1618219800,"end_date":1735669800,"current":1643797899},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=TREEPERM","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}