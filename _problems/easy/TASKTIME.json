{"category_name":"easy","status":"success","problem_code":"TASKTIME","problem_name":"Task Times","body":"Chef's exam is near. There is a total of $M$ subjects in his syllabus. Each subject consists of several topics. However, the questions will be set only from $N$ topics. These topics are numbered $1$ through $N$. The $i^{th}$ topic belongs to $C_i^{th}$ subject and takes $T_i$ hours to cover.\n\n\nChef has only $K$ hours left before the exam and wants to score the maximum marks. If Chef covers $x_1$ number of topics of the $1^{st}$ subject, $x_2$ number of topics of the $2^{nd}$ subject, and so on upto  $x_M$ number of topics of the $M^{th}$ subject in the remaining $K$ hours, he will get a total of $\\lceil \\frac{x_1}{2} \\ \\rceil + \\lceil \\frac{x_2}{2} \\ \\rceil + \\cdots + \\lceil \\frac{x_M}{2} \\ \\rceil$ marks in the exam. So Chef chooses the topics optimally.\n\nDetermine the maximum possible marks Chef can score in the exam.\n\n**Note:** $\\lceil x \\rceil$ : Returns the smallest integer that is greater than or equal to $x$ (i.e  rounds up to the nearest integer). For example, $\\lceil 1.5 \\rceil = 2$, $\\lceil 5 \\rceil = 5$.\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"- $1 \\leq T \\leq 10^4$\n- $1 \\leq N \\leq 10^5$\n- $1 \\leq M \\leq N$\n- $1 \\leq K \\leq 10^9$\n- $1 \\leq C_i \\leq M$\n- $1 \\leq T_i \\leq 10^9$\n- Sum of $N$ over all test cases does not exceed $5\\cdot10^5$.","constraintsState":true,"subtasks":"","subtasksState":false,"statement":"Chef's exam is near. There is a total of $M$ subjects in his syllabus. Each subject consists of several topics. However, the questions will be set only from $N$ topics. These topics are numbered $1$ through $N$. The $i^{th}$ topic belongs to $C_i^{th}$ subject and takes $T_i$ hours to cover.\n\n\nChef has only $K$ hours left before the exam and wants to score the maximum marks. If Chef covers $x_1$ number of topics of the $1^{st}$ subject, $x_2$ number of topics of the $2^{nd}$ subject, and so on upto  $x_M$ number of topics of the $M^{th}$ subject in the remaining $K$ hours, he will get a total of $\\lceil \\frac{x_1}{2} \\ \\rceil + \\lceil \\frac{x_2}{2} \\ \\rceil + \\cdots + \\lceil \\frac{x_M}{2} \\ \\rceil$ marks in the exam. So Chef chooses the topics optimally.\n\nDetermine the maximum possible marks Chef can score in the exam.\n\n**Note:** $\\lceil x \\rceil$ : Returns the smallest integer that is greater than or equal to $x$ (i.e  rounds up to the nearest integer). For example, $\\lceil 1.5 \\rceil = 2$, $\\lceil 5 \\rceil = 5$.","inputFormat":"- The first line of input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\n- Each test case contains three lines of input.\n- The first line of each test case contains three space-separated integers $N, M, K$.\n- The second line contains $N$ space-separated integers $C_1, C_2, \\dots, C_N$.\n- The third line contains $N$ space-separated integers $T_1, T_2, \\dots, T_N$.\n","inputFormatState":true,"outputFormat":"For each test case, print a single line containing one integer - the maximum marks Chef can score.\n","outputFormatState":true,"sampleTestCases":[{"id":"1","input":"3\n3 2 2\n1 1 2\n1 1 2\n4 3 2\n1 1 2 2\n1 1 2 1\n5 3 10\n1 1 1 2 3\n1 5 2 5 1","output":"1\n2\n3\n","explanation":"**Test case $1$**: Chef covers the $1^{st}$ and $2^{nd}$ topic in $1 + 1 = 2$ hours. Both topics belongs to $1^{st}$ subject. He does not cover any topic of the second subject. By doing so, Chef gets $\\lceil \\frac{2}{2} \\ \\rceil + \\lceil \\frac{0}{2} \\ \\rceil$ = $\\lceil \\ 1 \\ \\rceil + \\lceil \\ 0 \\ \\rceil = 1$ marks.\n\n**Test case $2$**: Chef covers the $1^{st}$ topic which belongs to the first subject and $4^{th}$ topic which belongs to the second subject in $1 + 1 = 2$ hours. There is no topic from the third subject. So Chef gets $\\lceil \\frac{1}{2} \\ \\rceil + \\lceil \\frac{1}{2} \\ \\rceil$ = $\\lceil \\ 0.5 \\ \\rceil + \\lceil \\ 0.5 \\ \\rceil = 1 + 1 = 2$ marks.","isDeleted":false}]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"soumyadeep_21","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;<\/span><span class='m-username--link'>soumyadeep_21<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"6-09-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/ceil'>ceil<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy'>easy<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/heap'>heap<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/soumyadeep_21'>soumyadeep_21<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/start14'>start14<\/a>","problem_difficulty_level":"Unavailable","user_zen_mode":false,"best_tag":"","editorial_url":"https:\/\/discuss.codechef.com\/problems\/TASKTIME","time":{"view_start_date":1632936600,"submit_start_date":1632936600,"visible_start_date":1632936600,"end_date":1735669800,"current":1643797893},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=TASKTIME","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}