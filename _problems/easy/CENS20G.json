{"category_name":"easy","status":"success","problem_code":"CENS20G","problem_name":"Help Martha","body":"Jonas asked Martha to stand at point $(x_1,y_1)$ on an infinite cartesian plane. He gave her a string $S$ which consists of operations in the form of characters **'R'**, **'L'**, **'U'**, and \r\n**'D'**.\r\n\r\nEach character of the string corresponds to the following movements: \r\n\r\n- **'R'** means moving right by $1$ unit i.e, $(x,y)$ to $(x+1,y)$.\r\n- **'L'** means moving left by $1$ unit i.e, $(x,y)$ to $(x-1,y)$.\r\n- **'U'** means moving up by $1$ unit i.e, $(x,y)$ to $(x,y+1)$.\r\n- **'D'** means moving down by $1$ unit i.e, $(x,y)$ to $(x,y-1)$.\r\n\r\nNow, Jonas asks Martha $Q$ queries. In each query, coordinates are given of form $(x_2,y_2)$. Martha needs to tell if it is possible to move from $(x_1,y_1)$ to $(x_2,y_2)$ by choosing a **subsequence** of given string $S$ and performing the operations in sequential order.Starting point $(x_1,y_1)$ remains same for all queries.\r\n\r\nIf it is possible, print **\"YES\"** and the length of the smallest possible subsequence of string, else print **\"NO\"**.\r\n\r\nRecall that string $a$ is a **subsequence** of a string $b$ if $a$ can be obtained from $b$ by deletion of several (possibly zero or all) characters. For example, for the string $a$=\"codechef\", the following strings are subsequences: \"code\", \"ee\", \"odchef\", \"df\", \"\", and others, but the following are not subsequences: \"ced\", \"eehc\", \"cofe\".\r\n\r\n**Note**: Use of Fast IO is recommended.\r\n\r\n###Input:\r\n\r\n- First line will contain $T$, number of test cases. Then test cases follow.\r\n- For each test case, first line will contain string $S$, string of operations.\r\n- Second line will contain coordinates $x_1$ and $y_1$.\r\n- Third line will contain $Q$, number of queries.\r\n- $Q$ lines follow. Each line will contain coordinates $x_2$ and $y_2$.\r\n\r\n###Output:\r\nFor each query if subsequence exists then print \"YES\" (without quotes) and length of smallest possible subsequence separated by a space in new line, else print \"NO\" (without quotes) in new line.\r\n\r\n###Constraints \r\n- $1 \\leq T \\leq 10$\r\n- $1 \\leq |S| \\leq 10^6$\r\n- $-10^8 \\leq x_1,x_2,y_1,y_2 \\leq 10^8$\r\n- $1 \\leq Q \\leq 10^5$\r\n\r\n###Sample Input:\r\n\t1\r\n\tRLUDRLUD\r\n\t1 2\r\n\t2\r\n\t2 3\r\n\t1 -2\r\n\r\n###Sample Output:\r\n\tYES 2\r\n\tNO\r\n\t\r\n###EXPLANATION:\r\nGiven String is \"RLUDRLUD\", $(x_1,y_1)$ is $(1,2)$. We can move from $(1,2)$ to $(2,3)$ in just two operations if we choose subsequence as \"RU\" or \"UR\".\r\n\r\nSuppose we choose \"RU\" as a subsequence. 'R' means moving from $(1,2)$ to $(2,2)$. 'U' means moving from $(2,2)$ to $(2,3)$.\r\n\r\nIn the second query, we can't move from (1,2) to (1,-2) using operations of the given string.\r\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"Jonas asked Martha to stand at point $(x_1,y_1)$ on an infinite cartesian plane. He gave her a string $S$ which consists of operations in the form of characters **'R'**, **'L'**, **'U'**, and \r\n**'D'**.\r\n\r\nEach character of the string corresponds to the following movements: \r\n\r\n- **'R'** means moving right by $1$ unit i.e, $(x,y)$ to $(x+1,y)$.\r\n- **'L'** means moving left by $1$ unit i.e, $(x,y)$ to $(x-1,y)$.\r\n- **'U'** means moving up by $1$ unit i.e, $(x,y)$ to $(x,y+1)$.\r\n- **'D'** means moving down by $1$ unit i.e, $(x,y)$ to $(x,y-1)$.\r\n\r\nNow, Jonas asks Martha $Q$ queries. In each query, coordinates are given of form $(x_2,y_2)$. Martha needs to tell if it is possible to move from $(x_1,y_1)$ to $(x_2,y_2)$ by choosing a **subsequence** of given string $S$ and performing the operations in sequential order.Starting point $(x_1,y_1)$ remains same for all queries.\r\n\r\nIf it is possible, print **\"YES\"** and the length of the smallest possible subsequence of string, else print **\"NO\"**.\r\n\r\nRecall that string $a$ is a **subsequence** of a string $b$ if $a$ can be obtained from $b$ by deletion of several (possibly zero or all) characters. For example, for the string $a$=\"codechef\", the following strings are subsequences: \"code\", \"ee\", \"odchef\", \"df\", \"\", and others, but the following are not subsequences: \"ced\", \"eehc\", \"cofe\".\r\n\r\n**Note**: Use of Fast IO is recommended.\r\n\r\n###Input:\r\n\r\n- First line will contain $T$, number of test cases. Then test cases follow.\r\n- For each test case, first line will contain string $S$, string of operations.\r\n- Second line will contain coordinates $x_1$ and $y_1$.\r\n- Third line will contain $Q$, number of queries.\r\n- $Q$ lines follow. Each line will contain coordinates $x_2$ and $y_2$.\r\n\r\n###Output:\r\nFor each query if subsequence exists then print \"YES\" (without quotes) and length of smallest possible subsequence separated by a space in new line, else print \"NO\" (without quotes) in new line.\r\n\r\n###Constraints \r\n- $1 \\leq T \\leq 10$\r\n- $1 \\leq |S| \\leq 10^6$\r\n- $-10^8 \\leq x_1,x_2,y_1,y_2 \\leq 10^8$\r\n- $1 \\leq Q \\leq 10^5$\r\n\r\n###Sample Input:\r\n\t1\r\n\tRLUDRLUD\r\n\t1 2\r\n\t2\r\n\t2 3\r\n\t1 -2\r\n\r\n###Sample Output:\r\n\tYES 2\r\n\tNO\r\n\t\r\n###EXPLANATION:\r\nGiven String is \"RLUDRLUD\", $(x_1,y_1)$ is $(1,2)$. We can move from $(1,2)$ to $(2,3)$ in just two operations if we choose subsequence as \"RU\" or \"UR\".\r\n\r\nSuppose we choose \"RU\" as a subsequence. 'R' means moving from $(1,2)$ to $(2,2)$. 'U' means moving from $(2,2)$ to $(2,3)$.\r\n\r\nIn the second query, we can't move from (1,2) to (1,-2) using operations of the given string.\r\n","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"sarthak_eddy","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #684273;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>4&#9733;<\/span><span class='m-username--link'>sarthak_eddy<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"13-07-2020","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/cens2020'>cens2020<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/sarthak_eddy'>sarthak_eddy<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/saurabhshadow'>saurabhshadow<\/a>","problem_difficulty_level":"Easy","user_zen_mode":false,"best_tag":"","editorial_url":"https:\/\/discuss.codechef.com\/problems\/CENS20G","time":{"view_start_date":1597860000,"submit_start_date":1597860000,"visible_start_date":1597860000,"end_date":1735669800,"current":1643797779},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=CENS20G","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}