{"category_name":"easy","status":"success","problem_code":"EVSTR","problem_name":"Even Sequence","body":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/LTIME91\/hindi\/EVSTR.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/LTIME91\/bengali\/EVSTR.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/LTIME91\/mandarin\/EVSTR.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/LTIME91\/russian\/EVSTR.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/LTIME91\/vietnamese\/EVSTR.pdf) as well.\r\n\r\nAn *even sequence* has the following property: each maximal contiguous subsequence which contains only equal integers (i.e. the same integer repeated a number of times) has an even length. In particular, the empty sequence is even. A subsequence is *maximal* if it is not contained in a larger contiguous subsequence which contains only equal integers.\r\n\r\nChef was given an integer sequence $A_1, A_2, \\ldots, A_N$ by his friend Mr. Z. He may perform the following operation any number of times: either delete an element of the current sequence (if it is non-empty) or insert an integer anywhere in the current sequence (possibly at the beginning or at the end).\r\n\r\nFind the minimum number of operations needed to make the sequence even.\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains a single integer $N$.\r\n- The second line contains $N$ space-separated integers $A_1, A_2, \\ldots, A_N$.\r\n\r\n### Output\r\nFor each test case, print a single line containing one integer \u2014 the minimum number of operations.\r\n\r\n### Constraints\r\n- $1 \\leq T \\leq 10$\r\n- $1 \\leq N \\leq 2 \\cdot 10^5$\r\n- $1 \\leq A_i \\leq N$ for each valid $i$\r\n- the sum of $N$ over all test cases does not exceed $2 \\cdot 10^6$\r\n\r\n### Subtasks\r\n**Subtask #1 (10 points):** $N \\leq 18$\r\n\r\n**Subtask #2 (10 points):** $A_i \\leq A_{i+1}$ for each valid $i$\r\n\r\n**Subtask #3 (20 points):** $N \\leq 3,000$\r\n\r\n**Subtask #4 (20 points):** $A_i \\leq 26$ for each valid $i$\r\n\r\n**Subtask #5 (40 points):** original constraints\r\n\r\n### Example Input\r\n```\r\n2\r\n4\r\n1 1 2 1\r\n11\r\n2 2 2 10 2 10 1 1 5 3 5\r\n```\r\n\r\n### Example Output\r\n```\r\n2\r\n3\r\n```\r\n\r\n### Explanation\r\n**Example case 1:** Here are two ways to make the sequence even using $2$ operations:\r\n- Delete the first element $1$ and the only element $2$, resulting in a sequence $(1, 1)$, which is even.\r\n- Delete the last element $1$ and insert $2$ at the end, resulting in a sequence $(1,1,2,2)$, which is even.\r\n\r\nIt can be proved that one operation is not enough to make the initial sequence even.\r\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/LTIME91\/hindi\/EVSTR.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/LTIME91\/bengali\/EVSTR.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/LTIME91\/mandarin\/EVSTR.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/LTIME91\/russian\/EVSTR.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/LTIME91\/vietnamese\/EVSTR.pdf) as well.\r\n\r\nAn *even sequence* has the following property: each maximal contiguous subsequence which contains only equal integers (i.e. the same integer repeated a number of times) has an even length. In particular, the empty sequence is even. A subsequence is *maximal* if it is not contained in a larger contiguous subsequence which contains only equal integers.\r\n\r\nChef was given an integer sequence $A_1, A_2, \\ldots, A_N$ by his friend Mr. Z. He may perform the following operation any number of times: either delete an element of the current sequence (if it is non-empty) or insert an integer anywhere in the current sequence (possibly at the beginning or at the end).\r\n\r\nFind the minimum number of operations needed to make the sequence even.\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains a single integer $N$.\r\n- The second line contains $N$ space-separated integers $A_1, A_2, \\ldots, A_N$.\r\n\r\n### Output\r\nFor each test case, print a single line containing one integer \u2014 the minimum number of operations.\r\n\r\n### Constraints\r\n- $1 \\leq T \\leq 10$\r\n- $1 \\leq N \\leq 2 \\cdot 10^5$\r\n- $1 \\leq A_i \\leq N$ for each valid $i$\r\n- the sum of $N$ over all test cases does not exceed $2 \\cdot 10^6$\r\n\r\n### Subtasks\r\n**Subtask #1 (10 points):** $N \\leq 18$\r\n\r\n**Subtask #2 (10 points):** $A_i \\leq A_{i+1}$ for each valid $i$\r\n\r\n**Subtask #3 (20 points):** $N \\leq 3,000$\r\n\r\n**Subtask #4 (20 points):** $A_i \\leq 26$ for each valid $i$\r\n\r\n**Subtask #5 (40 points):** original constraints","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[{"id":"1","input":"2\r\n4\r\n1 1 2 1\r\n11\r\n2 2 2 10 2 10 1 1 5 3 5","output":"2\r\n3","explanation":"**Example case 1:** Here are two ways to make the sequence even using $2$ operations:\r\n- Delete the first element $1$ and the only element $2$, resulting in a sequence $(1, 1)$, which is even.\r\n- Delete the last element $1$ and insert $2$ at the end, resulting in a sequence $(1,1,2,2)$, which is even.\r\n\r\nIt can be proved that one operation is not enough to make the initial sequence even.","isDeleted":false}]},"video_editorial_url":"https:\/\/youtu.be\/6amG0ySHvoM","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"sanroylozan","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;<\/span><span class='m-username--link'>sanroylozan<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"20-12-2020","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/dynamic-programming'>dynamic-programming<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy-medium'>easy-medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/ltime91'>ltime91<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/sanroylozan'>sanroylozan<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/taran_1407'>taran_1407<\/a>","problem_difficulty_level":"Easy-Medium","user_zen_mode":false,"best_tag":"Dynamic Programming","editorial_url":"https:\/\/discuss.codechef.com\/problems\/EVSTR","time":{"view_start_date":1104528600,"submit_start_date":1104528600,"visible_start_date":1104528600,"end_date":1735669800,"current":1643797810},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=EVSTR","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}