{"category_name":"school","status":"success","problem_code":"DECODEIT","problem_name":"Encoded String","body":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/JAN21\/hindi\/DECODEIT.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/JAN21\/bengali\/DECODEIT.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/JAN21\/mandarin\/DECODEIT.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/JAN21\/russian\/DECODEIT.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/JAN21\/vietnamese\/DECODEIT.pdf) as well.\r\n\r\nAn encoder encodes the **first $16$ lowercase English letters** using $4$ bits each. The first bit (from the left) of the code is $0$ if the letter lies among the first $8$ letters, else it is $1$, signifying that it lies among the last $8$ letters. The second bit of the code is $0$ if the letter lies among the first $4$ letters of those $8$ letters found in the previous step, else it's $1$, signifying that it lies among the last $4$ letters of those $8$ letters. Similarly, the third and the fourth bit each **signify the half in which the letter lies**. \r\n\r\nFor example, the letter $j$ would be encoded as :\r\n- Among $(a,b,c,d,e,f,g,h$ $|$ $i,j,k,l,m,n,o,p)$, $j$ appears in the second half. So the first bit of its encoding is $1$.\r\n- Now, among $(i,j,k,l$ $|$ $m,n,o,p)$, $j$ appears in the first half. So the second bit of its encoding is $0$.\r\n- Now, among $(i,j$ $|$ $k,l)$, $j$ appears in the first half. So the third bit of its encoding is $0$.\r\n- Now, among $(i$ $|$ $j)$, $j$ appears in the second half. So the fourth and last bit of its encoding is $1$.\r\n\r\nSo $j$'s encoding is $1001$,\r\n\r\nGiven a binary encoded string $S$, of length at most $10^5$, decode the string. That is, the first 4 bits are the encoding of the first letter of the secret message, the next 4 bits encode the second letter, and so on. It is guaranteed that the string's length is a multiple of 4.\r\n\r\n###Input:\r\n- The first line of the input contains an integer $T$, denoting the number of test cases.\r\n- The first line of each test case contains an integer $N$, the length of the encoded string.\r\n- The second line of each test case contains the encoded string $S$.\r\n\r\n###Output:\r\nFor each test case, print the decoded string, in a separate line.\r\n\r\n###Constraints \r\n- $1 \\leq T \\leq 10$\r\n- $4 \\leq N \\leq 10^5$\r\n- The length of the encoded string is a multiple of $4$.\r\n- $0 \\le S_i \\le 1$\r\n\r\n###Subtasks\r\n- **$100$ points :** Original constraints. \r\n\r\n###Sample Input:\r\n```\r\n3\r\n4\r\n0000\r\n8\r\n00001111\r\n4\r\n1001\r\n```\r\n###Sample Output:\r\n```\r\na\r\nap\r\nj\r\n```\r\n\t\r\n###Explanation:\r\n- **Sample Case $1$ :**     \r\n\r\nThe first bit is $0$, so the letter lies among the first $8$ letters, i.e., among $a,b,c,d,e,f,g,h$. The second bit is $0$, so it lies among the first four of these, i.e., among $a,b,c,d$. \r\n\r\nThe third bit is $0$, so it again lies in the first half, i.e., it's either $a$ or $b$. Finally, the fourth bit is also $0$, so we know that the letter is $a$.\r\n\r\n- **Sample Case $2$ :**     \r\n\r\nEach four bits correspond to a character. Just like in sample case $1$, $0000$ is equivalent to $a$. Similarly, $1111$ is equivalent to $p$. So, the decoded string is $ap$.\r\n\r\n- **Sample Case $3$ :**     \r\n\r\nThe first bit is $1$, so the letter lies among the last $8$ letters, i.e., among $i,j,k,l,m,n,o,p$. The second bit is $0$, so it lies among the first four of these, i.e., among $i,j,k,l$. \r\n\r\nThe third bit is $0$, so it again lies in the first half, i.e., it's either $i$ or $j$. Finally, the fourth bit is $1$, so we know that the letter is $j$.\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/JAN21\/hindi\/DECODEIT.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/JAN21\/bengali\/DECODEIT.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/JAN21\/mandarin\/DECODEIT.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/JAN21\/russian\/DECODEIT.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/JAN21\/vietnamese\/DECODEIT.pdf) as well.\r\n\r\nAn encoder encodes the **first $16$ lowercase English letters** using $4$ bits each. The first bit (from the left) of the code is $0$ if the letter lies among the first $8$ letters, else it is $1$, signifying that it lies among the last $8$ letters. The second bit of the code is $0$ if the letter lies among the first $4$ letters of those $8$ letters found in the previous step, else it's $1$, signifying that it lies among the last $4$ letters of those $8$ letters. Similarly, the third and the fourth bit each **signify the half in which the letter lies**. \r\n\r\nFor example, the letter $j$ would be encoded as :\r\n- Among $(a,b,c,d,e,f,g,h$ $|$ $i,j,k,l,m,n,o,p)$, $j$ appears in the second half. So the first bit of its encoding is $1$.\r\n- Now, among $(i,j,k,l$ $|$ $m,n,o,p)$, $j$ appears in the first half. So the second bit of its encoding is $0$.\r\n- Now, among $(i,j$ $|$ $k,l)$, $j$ appears in the first half. So the third bit of its encoding is $0$.\r\n- Now, among $(i$ $|$ $j)$, $j$ appears in the second half. So the fourth and last bit of its encoding is $1$.\r\n\r\nSo $j$'s encoding is $1001$,\r\n\r\nGiven a binary encoded string $S$, of length at most $10^5$, decode the string. That is, the first 4 bits are the encoding of the first letter of the secret message, the next 4 bits encode the second letter, and so on. It is guaranteed that the string's length is a multiple of 4.\r\n\r\n###Input:\r\n- The first line of the input contains an integer $T$, denoting the number of test cases.\r\n- The first line of each test case contains an integer $N$, the length of the encoded string.\r\n- The second line of each test case contains the encoded string $S$.\r\n\r\n###Output:\r\nFor each test case, print the decoded string, in a separate line.\r\n\r\n###Constraints \r\n- $1 \\leq T \\leq 10$\r\n- $4 \\leq N \\leq 10^5$\r\n- The length of the encoded string is a multiple of $4$.\r\n- $0 \\le S_i \\le 1$\r\n\r\n###Subtasks\r\n- **$100$ points :** Original constraints.","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[{"id":"1","input":"3\r\n4\r\n0000\r\n8\r\n00001111\r\n4\r\n1001","output":"a\r\nap\r\nj","explanation":"- **Sample Case $1$ :**     \r\n\r\nThe first bit is $0$, so the letter lies among the first $8$ letters, i.e., among $a,b,c,d,e,f,g,h$. The second bit is $0$, so it lies among the first four of these, i.e., among $a,b,c,d$. \r\n\r\nThe third bit is $0$, so it again lies in the first half, i.e., it's either $a$ or $b$. Finally, the fourth bit is also $0$, so we know that the letter is $a$.\r\n\r\n- **Sample Case $2$ :**     \r\n\r\nEach four bits correspond to a character. Just like in sample case $1$, $0000$ is equivalent to $a$. Similarly, $1111$ is equivalent to $p$. So, the decoded string is $ap$.\r\n\r\n- **Sample Case $3$ :**     \r\n\r\nThe first bit is $1$, so the letter lies among the last $8$ letters, i.e., among $i,j,k,l,m,n,o,p$. The second bit is $0$, so it lies among the first four of these, i.e., among $i,j,k,l$. \r\n\r\nThe third bit is $0$, so it again lies in the first half, i.e., it's either $i$ or $j$. Finally, the fourth bit is $1$, so we know that the letter is $j$.","isDeleted":false}]},"video_editorial_url":"https:\/\/youtu.be\/Ma2kUa4lDoY","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"daanish_adm","problem_author_html_handle":"daanish_adm","problem_tester":"","problem_tester_html_handle":"","date_added":"31-12-2020","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/akashbhalotia'>akashbhalotia<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/binary'>binary<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/daanish_adm'>daanish_adm<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy'>easy<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/jan21'>jan21<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/observation'>observation<\/a>","problem_difficulty_level":"Easy","user_zen_mode":false,"best_tag":"","editorial_url":"https:\/\/discuss.codechef.com\/problems\/DECODEIT","time":{"view_start_date":1104528600,"submit_start_date":1104528600,"visible_start_date":1104528600,"end_date":1735669800,"current":1643797719},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=DECODEIT","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}