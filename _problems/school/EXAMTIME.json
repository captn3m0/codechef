{"category_name":"school","status":"success","problem_code":"EXAMTIME","problem_name":"TCS Examination","body":"This is an example statement in markdown. This is the statement of the problem [TANDC](https:\/\/codechef.com\/problems\/TANDC) on CodeChef. The main statement starts with the next paragraph. Please make sure to remove this paragraph from your statement before publishing your problem. If your problem doesn't contain Subtasks, you should remove the section subtask too. We are using markdown the syntax of which can be seen [at](https:\/\/github.com\/showdownjs\/showdown\/wiki\/Showdown's-Markdown-syntax). We request you to not use any HTML tags in the statement, e.g. no p, ul, li, pre, br or b tags. If you face any issue, please contact admins or email us at help@codechef.com.\n\nTracy is teaching Charlie maths via a game called $N$-Cube, which involves three sections involving $N$.\n\nTracy gives Charlie a number $N$, and Charlie makes a list of $N$-th powers of integers in increasing order $1^N, 2^N, 3^N, \\dot, \\text{so on}$. This teaches him exponentiation.\n\nThen Charlie performs the following subtraction game $N$ times: Take all pairs of consecutive numbers in the list and take their difference. These differences then form the new list for the next iteration of the game. Eg, if $N$ was 6, the list proceeds as $[1, 64, 729, 4096 ... ]$ to $[63, 685, 3367 ...]$, and so on $5$ more times.\n\nAfter the subtraction game, Charlie has to correctly tell Tracy the $N$-th element of the list. This number is the *value of the game*.\n\nAfter practice Charlie became an expert in the game. To challenge him more, Tracy will give two numbers $M$ (where $M$ is a prime) and $R$ instead of just a single number $N$, and the game must start from $M_R - 1$ instead of $N$. Since the *value of the game* can now become large, Charlie just have to tell the largest integer $K$ such that $M_K$ divides this number. Since even $K$ can be large, output $K$ modulo 1000000007 ($10^9 + 7$).\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"- $1 \\leq T \\leq 1000$\n- Each score of both Dragon and Sloth lies between $0$ and $100$.","constraintsState":true,"subtasks":"**Subtask #1 (100 points):** Original constraints\n\n","subtasksState":true,"statement":"Two friends, Dragon and Sloth, are writing a computer science examination series.\nThere are three subjects in this series: $\\text{DSA}$, $\\text{TOC}$, and $\\text{DM}$. Each subject carries $100$ marks.\n\nYou know the individual scores of both Dragon and Sloth in all $3$ subjects. You have to determine who got a better rank.\n\nThe rank is decided as follows:\n- The person with a bigger total score gets a better rank\n- If the total scores are tied, the person who scored higher in $\\text{DSA}$ gets a better rank\n- If the total score and the $\\text{DSA}$ score are tied, the person who scored higher in $\\text{TOC}$ gets a better rank\n- If everything is tied, they get the same rank.","inputFormat":"- The first line of input contains a single integer $T$, denoting the number of test cases. The description of $T$ test cases follows.\n- The first line of each test case contains three space-separated integers denoting the scores of Dragon in $\\text{DSA}$, $\\text{TOC}$ and $\\text{DM}$ respectively.  \n- The second line of each test case contains three space-separated integers denoting the scores of Sloth in $\\text{DSA}$, $\\text{TOC}$ and $\\text{DM}$ respectively.  ","inputFormatState":true,"outputFormat":"- For each test case, if Dragon got a better rank then output `\"Dragon\"`, else if Sloth got a better rank then output `\"Sloth\"`. If there was a tie then output `\"Tie\"`. Note that the string you output should not contain quotes.\n- The output is **case insensitive**. For example, If the output is \"Tie\" then \"TiE\", \"tiE\", \"tie\", etc are also considered correct.\n","outputFormatState":true,"sampleTestCases":[{"id":"1","input":"4\n10 20 30\n30 20 10\n5 23 87\n5 23 87\n0 15 100\n100 5 5\n50 50 50\n50 49 51\n","output":"SLOTH\nTIE\nDRAGON\nDRAGON","explanation":"- For the first test case, Sloth and Dragon have the same total score but Sloth gets a better rank because he has a higher score in $\\text{DSA}$.\n- For the second test case, Sloth and Dragon have the same rank because they have the same score among all subjects.\n- For the third test case, Dragon gets a better rank because he has a greater total score.\n- For the fourth test case, Sloth and Dragon have the same total score and same $\\text{DSA}$ score. Dragon gets a better rank because he has a greater $\\text{TOC}$ score.","isDeleted":false}]},"video_editorial_url":"https:\/\/youtu.be\/9sa9EO0-nFI","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"utkarsh_adm","problem_author_html_handle":"utkarsh_adm","problem_tester":"","problem_tester_html_handle":"","date_added":"11-01-2022","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/cakewalk'>cakewalk<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/jan222'>jan222<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/utkarsh_adm'>utkarsh_adm<\/a>","problem_difficulty_level":"Unavailable","user_zen_mode":false,"best_tag":"","editorial_url":"https:\/\/discuss.codechef.com\/problems\/EXAMTIME","time":{"view_start_date":1642411800,"submit_start_date":1642411800,"visible_start_date":1642411800,"end_date":1735669800,"current":1643797723},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=EXAMTIME","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}