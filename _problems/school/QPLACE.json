{"category_name":"school","status":"success","problem_code":"QPLACE","problem_name":"Queens Placement ","body":"This is an example statement in markdown. This is the statement of the problem [TANDC](https:\/\/codechef.com\/problems\/TANDC) on CodeChef. The main statement starts with the next paragraph. Please make sure to remove this paragraph from your statement before publishing your problem. If your problem doesn't contain Subtasks, you should remove the section subtask too. We are using markdown the syntax of which can be seen [at](https:\/\/github.com\/showdownjs\/showdown\/wiki\/Showdown's-Markdown-syntax). We request you to not use any HTML tags in the statement, e.g. no p, ul, li, pre, br or b tags. If you face any issue, please contact admins or email us at help@codechef.com.\n\nTracy is teaching Charlie maths via a game called $N$-Cube, which involves three sections involving $N$.\n\nTracy gives Charlie a number $N$, and Charlie makes a list of $N$-th powers of integers in increasing order $1^N, 2^N, 3^N, \\dot, \\text{so on}$. This teaches him exponentiation.\n\nThen Charlie performs the following subtraction game $N$ times: Take all pairs of consecutive numbers in the list and take their difference. These differences then form the new list for the next iteration of the game. Eg, if $N$ was 6, the list proceeds as $[1, 64, 729, 4096 ... ]$ to $[63, 685, 3367 ...]$, and so on $5$ more times.\n\nAfter the subtraction game, Charlie has to correctly tell Tracy the $N$-th element of the list. This number is the *value of the game*.\n\nAfter practice Charlie became an expert in the game. To challenge him more, Tracy will give two numbers $M$ (where $M$ is a prime) and $R$ instead of just a single number $N$, and the game must start from $M_R - 1$ instead of $N$. Since the *value of the game* can now become large, Charlie just have to tell the largest integer $K$ such that $M_K$ divides this number. Since even $K$ can be large, output $K$ modulo 1000000007 ($10^9 + 7$).\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"- $1 \\leq T \\leq 100$\n- $3 \\leq N \\leq 100$\n- The sum of $N^2$ over all test cases does not exceed $10^5$\n","constraintsState":true,"subtasks":"- 30 points : $1 \\leq R \\leq 10000$\n- 70 points : $1 \\leq R \\leq 10^9$\n","subtasksState":false,"statement":"### Read problem statements in [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/SNCK1B21\/mandarin\/QPLACE.pdf) [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/SNCK1B21\/vietnamese\/QPLACE.pdf), and [Russian](https:\/\/www.codechef.com\/download\/translated\/SNCK1B21\/russian\/QPLACE.pdf)\n\nIn order to impress Chefina, Chef is trying to improve his chess calculation skills.\n\nToday, Chef took a big chessboard with $N$ rows (numbered $1$ through $N$) and $N$ columns (numbered $1$ through $N$). Let's denote the square in row $r$ and column $c$ of the chessboard by $(r, c)$. Chef wants to place some queens on this chessboard in such a way that the following conditions are satisfied:\n- Each square of the board contains at most one queen.\n- There are exactly $N-2$ queens on the board.\n- All squares are reachable by at least one queen.\n\nA queen can reach all cells along the row, column, and diagonals it is placed at.\n\nFormally, a queen placed at square $(r, c)$ can reach square $(x, y)$ if **at least one** of the following conditions holds:\n- $x = r$\n- $y = c$\n- $r+c = x+y$\n- $r-c = x-y$\n\nHelp Chef find a possible distribution of queens. If there are multiple solutions, you may find any one. It is guaranteed that under the given constraints, a solution always exists.","inputFormat":"- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\n- The first and only line of each test case contains a single integer $N$.","inputFormatState":true,"outputFormat":"For each test case, print $N$ lines. For each valid $i$, the $i$-th of these lines should contain a single string with length $N$ describing row $i$ of the chessboard; for each valid $j$, the $j$-th character of this string should be `'Q'` if there is a queen in the square $(i, j)$ or `'.'` if this square is empty. Please note you have to place exactly $N-2$ queens.\n","outputFormatState":true,"sampleTestCases":[{"id":"1","input":"2\n3\n4\n","output":"...\n.Q.\n...\n...Q\n....\n.Q..\n....","explanation":"**Test Case $1$:** The Queen in the middle covers all squares on the board.\n\n**Test Case $2$:** The Queen at square $(1,4)$ covers all squares in the first row and the last column, while the other Queen covers all the other squares.","isDeleted":false}]},"video_editorial_url":"https:\/\/youtu.be\/TP0j5qyeVv4","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"0.5","source_sizelimit":"50000","problem_author":"utkarsh_adm","problem_author_html_handle":"utkarsh_adm","problem_tester":"","problem_tester_html_handle":"","date_added":"27-10-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/cakewalk'>cakewalk<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/snck1b21'>snck1b21<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/utkarsh_adm'>utkarsh_adm<\/a>","problem_difficulty_level":"Unavailable","user_zen_mode":false,"best_tag":"","editorial_url":"https:\/\/discuss.codechef.com\/problems\/QPLACE","time":{"view_start_date":1635694200,"submit_start_date":1635694200,"visible_start_date":1635694200,"end_date":1735669800,"current":1643797744},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=QPLACE","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}