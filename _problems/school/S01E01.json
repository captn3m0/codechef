{"category_name":"school","status":"success","problem_code":"S01E01","problem_name":"The One Where It All Began","body":"This is an example statement in markdown. This is the statement of the problem [TANDC](https:\/\/codechef.com\/problems\/TANDC) on CodeChef. The main statement starts with the next paragraph. Please make sure to remove this paragraph from your statement before publishing your problem. If your problem doesn't contain Subtasks, you should remove the section subtask too. We are using markdown the syntax of which can be seen [at](https:\/\/github.com\/showdownjs\/showdown\/wiki\/Showdown's-Markdown-syntax). We request you to not use any HTML tags in the statement, e.g. no p, ul, li, pre, br or b tags. If you face any issue, please contact admins or email us at help@codechef.com.\n\nTracy is teaching Charlie maths via a game called $N$-Cube, which involves three sections involving $N$.\n\nTracy gives Charlie a number $N$, and Charlie makes a list of $N$-th powers of integers in increasing order $1^N, 2^N, 3^N, \\dot, \\text{so on}$. This teaches him exponentiation.\n\nThen Charlie performs the following subtraction game $N$ times: Take all pairs of consecutive numbers in the list and take their difference. These differences then form the new list for the next iteration of the game. Eg, if $N$ was 6, the list proceeds as $[1, 64, 729, 4096 ... ]$ to $[63, 685, 3367 ...]$, and so on $5$ more times.\n\nAfter the subtraction game, Charlie has to correctly tell Tracy the $N$-th element of the list. This number is the *value of the game*.\n\nAfter practice Charlie became an expert in the game. To challenge him more, Tracy will give two numbers $M$ (where $M$ is a prime) and $R$ instead of just a single number $N$, and the game must start from $M_R - 1$ instead of $N$. Since the *value of the game* can now become large, Charlie just have to tell the largest integer $K$ such that $M_K$ divides this number. Since even $K$ can be large, output $K$ modulo 1000000007 ($10^9 + 7$).\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"- $1 \\leq T \\leq 10^3$\n- $1 \\leq N \\leq 10^3$\n","constraintsState":true,"subtasks":"","subtasksState":true,"statement":"<em>In a New York City coffee house called Central Perk, we're introduced to six friends: chef Monica Geller, data controller Chandler Bing who lives across the hall from Monica, Chandler's roommate\/actor Joey Tribbiani, Monica's brother Ross Geller, new ageist Phoebe Buffay, and \"born to be a wife\" Rachel Green.<\/em>\n\nChef wants to divide $N$ cookies between the **six** friends such that:\n- Each friend gets at least one cookie.\n- No two friends get the same number of cookies.\n\nFind if it is possible for Chef to do so.","inputFormat":"- First line will contain $T$, number of testcases. Then the testcases follow.\n- Each testcase contains of a single line of input, one integers $N$.\n","inputFormatState":true,"outputFormat":"For each test case print \"YES\" if Chef can divide the cookies according to the given rules, else print \"NO\".\n\nYou may print each character of each string in uppercase or lowercase (for example, the strings \"yEs\", \"yes\", \"Yes\" and \"YES\" will all be treated as identical).","outputFormatState":true,"sampleTestCases":[{"id":"1","input":"3\n42\n5\n909","output":"YES\nNO\nYES","explanation":"**Test case 1**: One possible way of distribution would be $2, 4, 6, 8, 10, 12$.\n\n**Test case 2**: It is impossible to divide $5$ cookies among six friends according to given rules.","isDeleted":false}]},"video_editorial_url":"https:\/\/youtu.be\/2fvCMOtM7D8","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"0.5","source_sizelimit":"50000","problem_author":"notsoloud","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;<\/span><span class='m-username--link'>notsoloud<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"21-11-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/cakewalk'>cakewalk<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/cakewalk'>cakewalk<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/four2021'>four2021<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/four2021'>four2021<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/notsoloud'>notsoloud<\/a>","problem_difficulty_level":"Unavailable","user_zen_mode":false,"best_tag":"","editorial_url":"https:\/\/discuss.codechef.com\/problems\/S01E01","time":{"view_start_date":1638207000,"submit_start_date":1638207000,"visible_start_date":1638207000,"end_date":1735669800,"current":1643797746},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=S01E01","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}