{"category_name":"school","status":"success","problem_code":"ADAKING","problem_name":"Ada King","body":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/JULY20\/hindi\/ADAKING.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/JULY20\/bengali\/ADAKING.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/JULY20\/mandarin\/ADAKING.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/JULY20\/russian\/ADAKING.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/JULY20\/vietnamese\/ADAKING.pdf) as well.\r\n\r\nChef Ada is training her calculation skills. She wants to place a <a href=\"\">king<\/a> and some obstacles on a <a href=\"https:\/\/en.wikipedia.org\/wiki\/Chessboard\">chessboard<\/a> in such a way that the number of distinct cells the king can reach is exactly $K$.\r\n\r\nRecall that a chessboard has $8$ rows (numbered $1$ through $8$) and $8$ columns (numbered $1$ through $8$); let's denote a cell in row $r$ and column $c$ by $(r,c)$.\r\n\r\nIn one move, a king can move to any adjacent cell which shares a side or corner with its current cell and does not contain an obstacle. More formally, a king in a cell $(r,c)$ can move to any cell $(r_n,c_n)$ if $(r_n,c_n)$ is a valid cell of the chessboard which does not contain an obstacle and $(r-r_n)^2+(c-c_n)^2 \\le 2$. \r\n\r\nA cell $(x,y)$ can be reached by a king if, after an arbitrary number of moves (including zero), the king is in the cell $(x,y)$.\r\n\r\nHelp Ada find any valid configuration of the board such that the king can reach exactly $K$ distinct cells. It is guaranteed that such a configuration always exists. If there are multiple solutions, you may find any one.\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first and only line of each test case contains a single integer $K$.\r\n\r\n### Output\r\nFor each test case, print $8$ lines describing a chessboard, each containing $8$ characters. For each valid $i$ and $j$, the $j$-th character on the $i$-th line should be one of the following:\r\n- 'O' if the cell $(i,j)$ initially contains the king; there should be exactly one such cell\r\n- 'X' if the cell $(i,j)$ contains an obstacle\r\n- '.' if the cell $(i,j)$ is empty\r\n\r\n### Constraints\r\n- $1 \\le T \\le 64$\r\n- $1 \\le K \\le 64$\r\n\r\n### Subtasks\r\n**Subtask #1 (10 points):** $K \\le 8$\r\n\r\n**Subtask #2 (90 points):** original constraints\r\n\r\n### Example Input\r\n```\r\n4\r\n1\r\n5\r\n9\r\n64\r\n```\r\n\r\n### Example Output\r\n```\r\n........\r\n........\r\n........\r\n.XXX....\r\n.XOX....\r\n.XXX....\r\n........\r\n........\r\n\r\n........\r\n........\r\n........\r\n........\r\n........\r\nXXX.....\r\n..XX....\r\nO..X....\r\n\r\n........\r\n.XXXXXXX\r\n.X.O...X\r\n.X...XXX\r\n.XXX.X..\r\n...XXX..\r\n........\r\n........\r\n\r\n........\r\n........\r\n........\r\n...O....\r\n........\r\n........\r\n........\r\n........\r\n```\r\n\r\n### Explanation\r\nThe descriptions of the chessboard for each test case are separated by blank lines for clarity. Note that these lines should not appear on the output of your submission.\r\n\r\n**Example case 1:** The king is surrounded by obstacles, so it cannot move \u2015 the only cell it can reach is its initial cell.\r\n\r\n**Example case 4:** The king can visit all cells of the board.\r\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/JULY20\/hindi\/ADAKING.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/JULY20\/bengali\/ADAKING.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/JULY20\/mandarin\/ADAKING.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/JULY20\/russian\/ADAKING.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/JULY20\/vietnamese\/ADAKING.pdf) as well.\r\n\r\nChef Ada is training her calculation skills. She wants to place a <a href=\"\">king<\/a> and some obstacles on a <a href=\"https:\/\/en.wikipedia.org\/wiki\/Chessboard\">chessboard<\/a> in such a way that the number of distinct cells the king can reach is exactly $K$.\r\n\r\nRecall that a chessboard has $8$ rows (numbered $1$ through $8$) and $8$ columns (numbered $1$ through $8$); let's denote a cell in row $r$ and column $c$ by $(r,c)$.\r\n\r\nIn one move, a king can move to any adjacent cell which shares a side or corner with its current cell and does not contain an obstacle. More formally, a king in a cell $(r,c)$ can move to any cell $(r_n,c_n)$ if $(r_n,c_n)$ is a valid cell of the chessboard which does not contain an obstacle and $(r-r_n)^2+(c-c_n)^2 \\le 2$. \r\n\r\nA cell $(x,y)$ can be reached by a king if, after an arbitrary number of moves (including zero), the king is in the cell $(x,y)$.\r\n\r\nHelp Ada find any valid configuration of the board such that the king can reach exactly $K$ distinct cells. It is guaranteed that such a configuration always exists. If there are multiple solutions, you may find any one.\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first and only line of each test case contains a single integer $K$.\r\n\r\n### Output\r\nFor each test case, print $8$ lines describing a chessboard, each containing $8$ characters. For each valid $i$ and $j$, the $j$-th character on the $i$-th line should be one of the following:\r\n- 'O' if the cell $(i,j)$ initially contains the king; there should be exactly one such cell\r\n- 'X' if the cell $(i,j)$ contains an obstacle\r\n- '.' if the cell $(i,j)$ is empty\r\n\r\n### Constraints\r\n- $1 \\le T \\le 64$\r\n- $1 \\le K \\le 64$\r\n\r\n### Subtasks\r\n**Subtask #1 (10 points):** $K \\le 8$\r\n\r\n**Subtask #2 (90 points):** original constraints\r\n\r\n### Example Input\r\n```\r\n4\r\n1\r\n5\r\n9\r\n64\r\n```\r\n\r\n### Example Output\r\n```\r\n........\r\n........\r\n........\r\n.XXX....\r\n.XOX....\r\n.XXX....\r\n........\r\n........\r\n\r\n........\r\n........\r\n........\r\n........\r\n........\r\nXXX.....\r\n..XX....\r\nO..X....\r\n\r\n........\r\n.XXXXXXX\r\n.X.O...X\r\n.X...XXX\r\n.XXX.X..\r\n...XXX..\r\n........\r\n........\r\n\r\n........\r\n........\r\n........\r\n...O....\r\n........\r\n........\r\n........\r\n........\r\n```\r\n\r\n### Explanation\r\nThe descriptions of the chessboard for each test case are separated by blank lines for clarity. Note that these lines should not appear on the output of your submission.\r\n\r\n**Example case 1:** The king is surrounded by obstacles, so it cannot move \u2015 the only cell it can reach is its initial cell.\r\n\r\n**Example case 4:** The king can visit all cells of the board.\r\n","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"https:\/\/youtu.be\/UHheckWroMk","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"alei","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;<\/span><span class='m-username--link'>alei<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"16-10-2018","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/alei'>alei<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/alei'>alei<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/cakewalk'>cakewalk<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/constructive'>constructive<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/july20'>july20<\/a>","problem_difficulty_level":"Cakewalk","user_zen_mode":false,"best_tag":"","editorial_url":"https:\/\/discuss.codechef.com\/problems\/ADAKING","time":{"view_start_date":1594632600,"submit_start_date":1594632600,"visible_start_date":1594632600,"end_date":1735669800,"current":1643797703},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=ADAKING","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}