{"category_name":"medium","status":"success","problem_code":"BRBAL","problem_name":"Balancing Game","body":"### Read problems statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/COOK122\/hindi\/BRBAL.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/COOK122\/mandarin\/BRBAL.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/COOK122\/russian\/BRBAL.pdf), [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/COOK122\/vietnamese\/BRBAL.pdf), and [Bengali](https:\/\/www.codechef.com\/download\/translated\/COOK122\/bengali\/BRBAL.pdf) as well.\r\n\r\nTwo of your friends (let's denote them by $P$ and $Q$) are playing a game and you are acting as their dealer. The rules of the game are as follows:\r\n- There are $N$ bracket sequences, denoted by $S_1, S_2, \\ldots, S_N$.\r\n- Initially, both players do not have any sequences. They play up to $N$ turns. For each valid $i$, in the $i$-th turn, you have to choose one player and give the bracket sequence $S_i$ to this player.\r\n- After each turn, if it is possible to arrange **all** the sequences of one player in some order and concatenate them in such a way that the resulting bracket sequence is non-empty and *balanced*, that player immediately wins and the game ends. Note that it is impossible for both players to form non-empty balanced sequences at the same time.\r\n\r\nYou like $P$ more and hence want $P$ to win. Find the smallest number of turns you need in order to make $P$ win or determine that it is impossible to achieve this.\r\n\r\nNotes:\r\n- A bracket sequence is an arbitrary string containing only characters '(' and ')'.\r\n- A balanced bracket sequence is one of the following:\r\n    - An empty string.\r\n    - A concatenation of two non-empty balanced bracket sequences.\r\n    - A string formed by adding '(' to the beginning and ')' to the end of a balanced bracket sequence.\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains a single integer $N$.\r\n- $N$ lines follow. For each valid $i$, the $i$-th of these lines contains a single string $S_i$.\r\n\r\n### Output\r\nFor each test case, print a single line containing one integer \u2015 the smallest number of turns needed to make $P$ win or $-1$ if it is impossible.\r\n\r\n### Constraints \r\n- $1 \\le T \\le 15$\r\n- $1 \\le N \\le 200$\r\n- $1 \\le |S_i| \\le 200$ for each valid $i$\r\n\r\n### Example Input\r\n```\r\n1\r\n4\r\n())\r\n((\r\n()))\r\n()((\r\n```\r\n\r\n### Example Output\r\n```\r\n3\r\n```\r\n\r\n### Explanation\r\n**Example case 1:** You can give $S_1$ to $Q$ and $S_2$ and $S_3$ to $P$.\r\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"### Read problems statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/COOK122\/hindi\/BRBAL.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/COOK122\/mandarin\/BRBAL.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/COOK122\/russian\/BRBAL.pdf), [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/COOK122\/vietnamese\/BRBAL.pdf), and [Bengali](https:\/\/www.codechef.com\/download\/translated\/COOK122\/bengali\/BRBAL.pdf) as well.\r\n\r\nTwo of your friends (let's denote them by $P$ and $Q$) are playing a game and you are acting as their dealer. The rules of the game are as follows:\r\n- There are $N$ bracket sequences, denoted by $S_1, S_2, \\ldots, S_N$.\r\n- Initially, both players do not have any sequences. They play up to $N$ turns. For each valid $i$, in the $i$-th turn, you have to choose one player and give the bracket sequence $S_i$ to this player.\r\n- After each turn, if it is possible to arrange **all** the sequences of one player in some order and concatenate them in such a way that the resulting bracket sequence is non-empty and *balanced*, that player immediately wins and the game ends. Note that it is impossible for both players to form non-empty balanced sequences at the same time.\r\n\r\nYou like $P$ more and hence want $P$ to win. Find the smallest number of turns you need in order to make $P$ win or determine that it is impossible to achieve this.\r\n\r\nNotes:\r\n- A bracket sequence is an arbitrary string containing only characters '(' and ')'.\r\n- A balanced bracket sequence is one of the following:\r\n    - An empty string.\r\n    - A concatenation of two non-empty balanced bracket sequences.\r\n    - A string formed by adding '(' to the beginning and ')' to the end of a balanced bracket sequence.\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains a single integer $N$.\r\n- $N$ lines follow. For each valid $i$, the $i$-th of these lines contains a single string $S_i$.\r\n\r\n### Output\r\nFor each test case, print a single line containing one integer \u2015 the smallest number of turns needed to make $P$ win or $-1$ if it is impossible.\r\n\r\n### Constraints \r\n- $1 \\le T \\le 15$\r\n- $1 \\le N \\le 200$\r\n- $1 \\le |S_i| \\le 200$ for each valid $i$","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[{"id":"1","input":"1\r\n4\r\n())\r\n((\r\n()))\r\n()((","output":"3","explanation":"**Example case 1:** You can give $S_1$ to $Q$ and $S_2$ and $S_3$ to $P$.","isDeleted":false}]},"video_editorial_url":"https:\/\/youtu.be\/mr0AKKiglVI","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"2","source_sizelimit":"50000","problem_author":"smartnj","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;<\/span><span class='m-username--link'>smartnj<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"5-09-2020","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/binary-search'>binary-search<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/cook122'>cook122<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/dynamic-programming'>dynamic-programming<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy-medium'>easy-medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/rahuldugar'>rahuldugar<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/rishup_nitdgp'>rishup_nitdgp<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/smartnj'>smartnj<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/smartnj'>smartnj<\/a>","problem_difficulty_level":"Easy-Medium","user_zen_mode":false,"best_tag":"Binary Search","editorial_url":"https:\/\/discuss.codechef.com\/problems\/BRBAL","time":{"view_start_date":1104528600,"submit_start_date":1104528600,"visible_start_date":1104528600,"end_date":1735669800,"current":1643797924},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=BRBAL","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}