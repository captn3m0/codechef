{"category_name":"medium","status":"success","problem_code":"CLPS","problem_name":"4 - Collapse The Array","body":"Ayush has an array $a$ of $n$ integers. He wants to collapse the entire array into a single element. To do this, he can perform the operation described below any number of times. Each operation grants some points, and Ayush's total score will be the sum of the points granted over all operations he performs.\r\n\r\nLet $a[i..j]$ denote the subarray of $a$ starting at index $i$ and ending at $j$. Define $min_{i, j}$ to be the minimum value in $a[i..j]$. \r\n\r\nIn one operation he can do the following:\r\n- Select any subarray $a[i..j]$ of $a$ of size at least $2$ and replace this subarray by a single element equal to the sum of elements of the subarray.\r\n\r\nThe number of points granted by such an operation, which will be added to his total score, is $(j - i + 1) \\cdot min_{i, j}$.\r\n\r\nFor example, consider an array $a = [2, 3, 5]$. If he selects the subarray $a[1..2]$, his total score increases by $2 \\cdot 2 = 4$ points. Now $a = [5, 5]$.\r\n\r\nAyush performs operations until only a single element remains. Help Ayush determine the maximum possible total score he can receive.\r\n\r\n###Input:\r\n\r\n- First line will contain $T$, number of testcases. Then the testcases follow. \r\n- The first line of each testcase contains $n$, the size of the array $a$.\r\n- The next $n$ lines contains $n$ integers $a_1, a_2, \\ldots, a_n$.\r\n\r\n###Output:\r\nFor each testcase, output in a single line  the maximum score possible when a single element remains.\r\n\r\n###Constraints \r\n- $1 \\leq T \\leq 5$\r\n- $2 \\leq n \\leq 60$\r\n- $-10^9 \\leq a_i \\leq 10^9$ for all valid $i$\r\n\r\n###Subtasks\r\n- **Subtask #1 (8 points)** : $2 \\leq n \\leq 8$\r\n- **Subtask #2 (16 points)** : $ 2 \\leq n \\leq 16$\r\n- **Subtask #3 (29 points)**  : $ 2 \\leq n \\leq 40$\r\n- **Subtask #4 (15 points)** : $0 \\leq a_i \\leq 10^9 $ for all valid $i$\r\n- **Subtask #5 (32 points)** : No additional constraints\r\n\r\n###Sample Input:\r\n    2\r\n    4\r\n    1 2 3 4\r\n    5\r\n    -1 -2 -3 -4 -5\r\n\r\n\r\n###Sample Output:\r\n    16\r\n    -24\r\n\t\r\n###EXPLANATION:\r\n\r\nThe optimal solution in the first testcase is:\r\n\r\n$[1, 2, 3, 4] \\xrightarrow[+2 \\cdot 1]{a[1..2]} [3, 3, 4] \\xrightarrow[+2 \\cdot 3]{a[1..2]} [6, 4] \\xrightarrow[+2 \\cdot 4]{a[1..2]} [10]$\r\n\r\nThe optimal solution in the second testcase is:\r\n\r\n$[-1,-2,-3,-4,-5] \\xrightarrow[+2 \\cdot (-2)]{a[1..2]} [-3,-3,-4,-5] \\xrightarrow[+4 \\cdot (-5)]{a[1..4]}[-15]$\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"Ayush has an array $a$ of $n$ integers. He wants to collapse the entire array into a single element. To do this, he can perform the operation described below any number of times. Each operation grants some points, and Ayush's total score will be the sum of the points granted over all operations he performs.\r\n\r\nLet $a[i..j]$ denote the subarray of $a$ starting at index $i$ and ending at $j$. Define $min_{i, j}$ to be the minimum value in $a[i..j]$. \r\n\r\nIn one operation he can do the following:\r\n- Select any subarray $a[i..j]$ of $a$ of size at least $2$ and replace this subarray by a single element equal to the sum of elements of the subarray.\r\n\r\nThe number of points granted by such an operation, which will be added to his total score, is $(j - i + 1) \\cdot min_{i, j}$.\r\n\r\nFor example, consider an array $a = [2, 3, 5]$. If he selects the subarray $a[1..2]$, his total score increases by $2 \\cdot 2 = 4$ points. Now $a = [5, 5]$.\r\n\r\nAyush performs operations until only a single element remains. Help Ayush determine the maximum possible total score he can receive.\r\n\r\n###Input:\r\n\r\n- First line will contain $T$, number of testcases. Then the testcases follow. \r\n- The first line of each testcase contains $n$, the size of the array $a$.\r\n- The next $n$ lines contains $n$ integers $a_1, a_2, \\ldots, a_n$.\r\n\r\n###Output:\r\nFor each testcase, output in a single line  the maximum score possible when a single element remains.\r\n\r\n###Constraints \r\n- $1 \\leq T \\leq 5$\r\n- $2 \\leq n \\leq 60$\r\n- $-10^9 \\leq a_i \\leq 10^9$ for all valid $i$\r\n\r\n###Subtasks\r\n- **Subtask #1 (8 points)** : $2 \\leq n \\leq 8$\r\n- **Subtask #2 (16 points)** : $ 2 \\leq n \\leq 16$\r\n- **Subtask #3 (29 points)**  : $ 2 \\leq n \\leq 40$\r\n- **Subtask #4 (15 points)** : $0 \\leq a_i \\leq 10^9 $ for all valid $i$\r\n- **Subtask #5 (32 points)** : No additional constraints\r\n\r\n###Sample Input:\r\n    2\r\n    4\r\n    1 2 3 4\r\n    5\r\n    -1 -2 -3 -4 -5\r\n\r\n\r\n###Sample Output:\r\n    16\r\n    -24\r\n\t\r\n###EXPLANATION:\r\n\r\nThe optimal solution in the first testcase is:\r\n\r\n$[1, 2, 3, 4] \\xrightarrow[+2 \\cdot 1]{a[1..2]} [3, 3, 4] \\xrightarrow[+2 \\cdot 3]{a[1..2]} [6, 4] \\xrightarrow[+2 \\cdot 4]{a[1..2]} [10]$\r\n\r\nThe optimal solution in the second testcase is:\r\n\r\n$[-1,-2,-3,-4,-5] \\xrightarrow[+2 \\cdot (-2)]{a[1..2]} [-3,-3,-4,-5] \\xrightarrow[+4 \\cdot (-5)]{a[1..4]}[-15]$","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"2","source_sizelimit":"50000","problem_author":"jatin_adm","problem_author_html_handle":"jatin_adm","problem_tester":"","problem_tester_html_handle":"","date_added":"12-10-2020","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/jatin_adm'>jatin_adm<\/a>","problem_difficulty_level":"Unavailable","user_zen_mode":false,"best_tag":"","editorial_url":"","time":{"view_start_date":1104528600,"submit_start_date":1104528600,"visible_start_date":1104528600,"end_date":1735669800,"current":1643797932},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=CLPS","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}