{"category_name":"medium","status":"success","problem_code":"TREESUB","problem_name":"Maximum GCD Subset","body":"### Read problems statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/COOK117\/hindi\/TREESUB.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/COOK117\/mandarin\/TREESUB.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/COOK117\/russian\/TREESUB.pdf), [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/COOK117\/vietnamese\/TREESUB.pdf), and [Bengali](https:\/\/www.codechef.com\/download\/translated\/COOK117\/bengali\/TREESUB.pdf) as well.\r\n\r\nYou are given a rooted tree with $N$ nodes (numbered $1$ through $N$). Node $1$ is the root. You are also given integer sequences $x_1, x_2, \\ldots, x_N$ and $v_1, v_2, \\ldots, v_N$.\r\n\r\nLet $S$ be a subset of nodes. It is called *valid* if it is non-empty and the following conditions hold:\r\n- There is no pair of nodes $(i, j)$ such that $i,j \\in S$ and $i$ is an ancestor of $j$.\r\n- The greatest common divisor of the values $x_i$ for all nodes $i \\in S$ (let's denote it by $G$) is greater than $1$.\r\n\r\nNext, let's define the *value* of $S$ as $G \\cdot V$, where $G$ is defined above and $V = \\sum_{i \\in S}{v_i}$.\r\n\r\nYou need to find a valid subset of nodes with the maximum value.\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains a single integer $N$.\r\n- Each of the next $N-1$ lines contains two space-separated integers $u$ and $v$ denoting that nodes $u$ and $v$ are connected by an edge.\r\n- $N$ lines follow. For each valid $i$, the $i$-th of these lines contains two space-separated integers $x_i$ and $v_i$.\r\n\r\n### Output\r\nFor each test case, print three lines.\r\n- The first of these lines should contain two space-separated integers $G \\cdot V$ and $G$ for your chosen subset.\r\n- The second line should contain a single integer $K$ \u2015 the size of your subset.\r\n- The third line should contain $K$ space-separated integers \u2015 the numbers of the nodes in this subset (in any order).\r\n\r\nIf there are multiple solutions, you may find any one.\r\n\r\n### Constraints\r\n- $1 \\le T \\le 100,000$\r\n- $1 \\le N \\le 100,000$\r\n- $1 \\le u, v \\le N$\r\n- the graph described on the input is a tree\r\n- $1 \\le x_i, v_i \\le 100,000$ for each valid $i$\r\n- at least one valid subset exists\r\n- the sum of $N$ over all test cases does not exceed $1,000,000$\r\n\r\n### Example Input\r\n```\r\n1\r\n6\r\n1 2\r\n1 3\r\n2 4\r\n2 5\r\n5 6\r\n3 12\r\n2 10\r\n10 3\r\n6 6\r\n3 8\r\n15 2\r\n```\r\n\r\n### Example Output\r\n```\r\n42 3\r\n2\r\n5 4\r\n```\r\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"### Read problems statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/COOK117\/hindi\/TREESUB.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/COOK117\/mandarin\/TREESUB.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/COOK117\/russian\/TREESUB.pdf), [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/COOK117\/vietnamese\/TREESUB.pdf), and [Bengali](https:\/\/www.codechef.com\/download\/translated\/COOK117\/bengali\/TREESUB.pdf) as well.\r\n\r\nYou are given a rooted tree with $N$ nodes (numbered $1$ through $N$). Node $1$ is the root. You are also given integer sequences $x_1, x_2, \\ldots, x_N$ and $v_1, v_2, \\ldots, v_N$.\r\n\r\nLet $S$ be a subset of nodes. It is called *valid* if it is non-empty and the following conditions hold:\r\n- There is no pair of nodes $(i, j)$ such that $i,j \\in S$ and $i$ is an ancestor of $j$.\r\n- The greatest common divisor of the values $x_i$ for all nodes $i \\in S$ (let's denote it by $G$) is greater than $1$.\r\n\r\nNext, let's define the *value* of $S$ as $G \\cdot V$, where $G$ is defined above and $V = \\sum_{i \\in S}{v_i}$.\r\n\r\nYou need to find a valid subset of nodes with the maximum value.\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains a single integer $N$.\r\n- Each of the next $N-1$ lines contains two space-separated integers $u$ and $v$ denoting that nodes $u$ and $v$ are connected by an edge.\r\n- $N$ lines follow. For each valid $i$, the $i$-th of these lines contains two space-separated integers $x_i$ and $v_i$.\r\n\r\n### Output\r\nFor each test case, print three lines.\r\n- The first of these lines should contain two space-separated integers $G \\cdot V$ and $G$ for your chosen subset.\r\n- The second line should contain a single integer $K$ \u2015 the size of your subset.\r\n- The third line should contain $K$ space-separated integers \u2015 the numbers of the nodes in this subset (in any order).\r\n\r\nIf there are multiple solutions, you may find any one.\r\n\r\n### Constraints\r\n- $1 \\le T \\le 100,000$\r\n- $1 \\le N \\le 100,000$\r\n- $1 \\le u, v \\le N$\r\n- the graph described on the input is a tree\r\n- $1 \\le x_i, v_i \\le 100,000$ for each valid $i$\r\n- at least one valid subset exists\r\n- the sum of $N$ over all test cases does not exceed $1,000,000$\r\n\r\n### Example Input\r\n```\r\n1\r\n6\r\n1 2\r\n1 3\r\n2 4\r\n2 5\r\n5 6\r\n3 12\r\n2 10\r\n10 3\r\n6 6\r\n3 8\r\n15 2\r\n```\r\n\r\n### Example Output\r\n```\r\n42 3\r\n2\r\n5 4\r\n```\r\n","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM","max_timelimit":"3.5","source_sizelimit":"50000","problem_author":"smartnj","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;<\/span><span class='m-username--link'>smartnj<\/span>","problem_tester":null,"problem_tester_html_handle":"","date_added":"31-03-2020","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/cook117'>cook117<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/dynamic-programming'>dynamic-programming<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/factorization'>factorization<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/invariants'>invariants<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/medium'>medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/rajarshi_basu'>rajarshi_basu<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/smartnj'>smartnj<\/a>","problem_difficulty_level":"Medium","user_zen_mode":false,"best_tag":"Dynamic Programming","editorial_url":"https:\/\/discuss.codechef.com\/problems\/TREESUB","time":{"view_start_date":1587407402,"submit_start_date":1587407402,"visible_start_date":1587407402,"end_date":1735669800,"current":1643797986},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=TREESUB","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}