{"category_name":"medium","status":"success","problem_code":"LCASQRT","problem_name":"Square Root of LCA Convolution","body":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/DEC20\/hindi\/LCASQRT.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/DEC20\/bengali\/LCASQRT.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/DEC20\/mandarin\/LCASQRT.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/DEC20\/russian\/LCASQRT.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/DEC20\/vietnamese\/LCASQRT.pdf) as well.\r\n\r\nYou are given a rooted tree with $N$ vertices (numbered $1$ through $N$) and a prime number $P$. Vertex $1$ is the root of the tree and for each $v$ ($2 \\le v \\le N$), the parent of vertex $v$ is $p_v$ ($p_v \\lt v$).\r\n\r\nA vertex $s$ is an ancestor of another vertex $f$ if $s$ lies on the path between $1$ and $f$ (in particular, $f$ is its own ancestor). For two vertices $u$ and $v$, let's define $\\mathrm{LCA}(u, v)$ as the vertex $s$ with the largest number which is an ancestor of both $u$ and $v$. Similarly, for two vertices $v$ and $s$, let $\\mathbb{L}_{v,s}$ be the set of all vertices $u$ such that $s = \\mathrm{LCA}(u, v)$.\r\n\r\nLet's define a set $\\mathbb{A}_P$ containing all sequences (indexed from $1$) with length $N$ whose elements are integers between $0$ and $P-1$ inclusive. For two sequences $a, b \\in \\mathbb{A}_P$, let's define an operation *LCA-convolution* as a sequence $c = a * b$ such that for each valid $x$, $$c_x = \\left(\\sum\\limits_{i=1}^N \\sum\\limits_{j \\in \\mathbb{L}_{i,x}} a_i b_j\\right) \\bmod P \\,.$$\r\n\r\nYou are also given some sequence $c \\in \\mathbb{A}_P$. You have two tasks:\r\n- Find the number of sequences $a \\in \\mathbb{A}_P$ such that $c = a * a$. Since this number can be large, compute it modulo $998,244,353$.\r\n- Find a sequence $a \\in \\mathbb{A}_P$ such that $c = a * a$ (if it exists).\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains two space-separated integers $N$ and $P$.\r\n- The second line contains $N-1$ space-separated integers $p_2, p_3, \\ldots, p_N$.\r\n- The third line contains $N$ space-separated integers $c_1, c_2, \\ldots, c_N$.\r\n\r\n### Output\r\nFor each test case, print two lines:\r\n- The first of these lines should contain a single integer \u2015 the number of sequences from the first task modulo $998,244,353$.\r\n- If there is no sequence $a \\in \\mathbb{A}_P$ such that $c = a * a$, the second line should contain the integer $-1$.\r\n- Otherwise, the second line should contain $N$ space-separated integers $a_1, a_2, \\ldots, a_N$, where $a \\in \\mathbb{A}_P$ and $c = a * a$ should hold. If there is more than one such sequence, you may find any one of them.\r\n\r\n### Constraints\r\n- $1 \\le T \\le 10^5$\r\n- $2 \\le N \\le 5 \\cdot 10^5$\r\n- $3 \\le P \\le 10^9 + 9$\r\n- $P$ is a prime\r\n- $1 \\le p_i \\lt i$ for each valid $i$\r\n- $0 \\le c_i \\lt P$ for each valid $i$\r\n- the sum of $N$ over all test cases does not exceed $5 \\cdot 10^5$\r\n\r\n### Subtasks\r\n**Subtask 1 (10 points, 1 second time limit):**\r\n- $T \\le 100$\r\n- $N \\le 6$\r\n- $P = 3$\r\n\r\n**Subtask 2 (30 points, 1 second time limit):**\r\n- $T \\le 100$\r\n- the sum of $N$ over all test cases does not exceed $1,000$\r\n\r\n**Subtask 3 (60 points, 5 seconds time limit):** original constraints\r\n\r\n### Example Input\r\n```\r\n3\r\n6 3\r\n1 1 2 3 2\r\n1 2 0 1 1 1\r\n5 3\r\n1 1 1 3\r\n2 1 0 2 1\r\n9 101\r\n1 1 2 3 2 4 3 5\r\n18 77 44 82 4 20 19 43 97\r\n```\r\n\r\n### Example Output\r\n```\r\n32\r\n2 2 0 1 2 2\r\n0\r\n-1\r\n64\r\n3 70 5 76 20 11 25 12 81\r\n```\r\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/DEC20\/hindi\/LCASQRT.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/DEC20\/bengali\/LCASQRT.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/DEC20\/mandarin\/LCASQRT.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/DEC20\/russian\/LCASQRT.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/DEC20\/vietnamese\/LCASQRT.pdf) as well.\r\n\r\nYou are given a rooted tree with $N$ vertices (numbered $1$ through $N$) and a prime number $P$. Vertex $1$ is the root of the tree and for each $v$ ($2 \\le v \\le N$), the parent of vertex $v$ is $p_v$ ($p_v \\lt v$).\r\n\r\nA vertex $s$ is an ancestor of another vertex $f$ if $s$ lies on the path between $1$ and $f$ (in particular, $f$ is its own ancestor). For two vertices $u$ and $v$, let's define $\\mathrm{LCA}(u, v)$ as the vertex $s$ with the largest number which is an ancestor of both $u$ and $v$. Similarly, for two vertices $v$ and $s$, let $\\mathbb{L}_{v,s}$ be the set of all vertices $u$ such that $s = \\mathrm{LCA}(u, v)$.\r\n\r\nLet's define a set $\\mathbb{A}_P$ containing all sequences (indexed from $1$) with length $N$ whose elements are integers between $0$ and $P-1$ inclusive. For two sequences $a, b \\in \\mathbb{A}_P$, let's define an operation *LCA-convolution* as a sequence $c = a * b$ such that for each valid $x$, $$c_x = \\left(\\sum\\limits_{i=1}^N \\sum\\limits_{j \\in \\mathbb{L}_{i,x}} a_i b_j\\right) \\bmod P \\,.$$\r\n\r\nYou are also given some sequence $c \\in \\mathbb{A}_P$. You have two tasks:\r\n- Find the number of sequences $a \\in \\mathbb{A}_P$ such that $c = a * a$. Since this number can be large, compute it modulo $998,244,353$.\r\n- Find a sequence $a \\in \\mathbb{A}_P$ such that $c = a * a$ (if it exists).\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains two space-separated integers $N$ and $P$.\r\n- The second line contains $N-1$ space-separated integers $p_2, p_3, \\ldots, p_N$.\r\n- The third line contains $N$ space-separated integers $c_1, c_2, \\ldots, c_N$.\r\n\r\n### Output\r\nFor each test case, print two lines:\r\n- The first of these lines should contain a single integer \u2015 the number of sequences from the first task modulo $998,244,353$.\r\n- If there is no sequence $a \\in \\mathbb{A}_P$ such that $c = a * a$, the second line should contain the integer $-1$.\r\n- Otherwise, the second line should contain $N$ space-separated integers $a_1, a_2, \\ldots, a_N$, where $a \\in \\mathbb{A}_P$ and $c = a * a$ should hold. If there is more than one such sequence, you may find any one of them.\r\n\r\n### Constraints\r\n- $1 \\le T \\le 10^5$\r\n- $2 \\le N \\le 5 \\cdot 10^5$\r\n- $3 \\le P \\le 10^9 + 9$\r\n- $P$ is a prime\r\n- $1 \\le p_i \\lt i$ for each valid $i$\r\n- $0 \\le c_i \\lt P$ for each valid $i$\r\n- the sum of $N$ over all test cases does not exceed $5 \\cdot 10^5$\r\n\r\n### Subtasks\r\n**Subtask 1 (10 points, 1 second time limit):**\r\n- $T \\le 100$\r\n- $N \\le 6$\r\n- $P = 3$\r\n\r\n**Subtask 2 (30 points, 1 second time limit):**\r\n- $T \\le 100$\r\n- the sum of $N$ over all test cases does not exceed $1,000$\r\n\r\n**Subtask 3 (60 points, 5 seconds time limit):** original constraints\r\n\r\n### Example Input\r\n```\r\n3\r\n6 3\r\n1 1 2 3 2\r\n1 2 0 1 1 1\r\n5 3\r\n1 1 1 3\r\n2 1 0 2 1\r\n9 101\r\n1 1 2 3 2 4 3 5\r\n18 77 44 82 4 20 19 43 97\r\n```\r\n\r\n### Example Output\r\n```\r\n32\r\n2 2 0 1 2 2\r\n0\r\n-1\r\n64\r\n3 70 5 76 20 11 25 12 81\r\n```\r\n","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"https:\/\/youtu.be\/8DfMco0nynA","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1 - 5","source_sizelimit":"50000","problem_author":"isaf27","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;<\/span><span class='m-username--link'>isaf27<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"29-11-2020","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/dec20'>dec20<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/depth-first-search'>depth-first-search<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/isaf27'>isaf27<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/medium'>medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/number-theory'>number-theory<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/quadratic-residue'>quadratic-residue<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/subtree-sum'>subtree-sum<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/tonelli-shanks'>tonelli-shanks<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/trees'>trees<\/a>","problem_difficulty_level":"Medium","user_zen_mode":false,"best_tag":"Number Theory","editorial_url":"https:\/\/discuss.codechef.com\/problems\/LCASQRT","time":{"view_start_date":1104528600,"submit_start_date":1104528600,"visible_start_date":1104528600,"end_date":1735669800,"current":1643797954},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=LCASQRT","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}