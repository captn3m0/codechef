{"category_name":"medium","status":"success","problem_code":"POFP","problem_name":"Pairs of Pairs","body":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/LTIME86\/hindi\/POFP.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/LTIME86\/bengali\/POFP.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/LTIME86\/mandarin\/POFP.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/LTIME86\/russian\/POFP.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/LTIME86\/vietnamese\/POFP.pdf) as well.\r\n\r\nConsider any way to pair the integers $1$ through $2N$ into $N$ pairs $(A_1,B_1), (A_2,B_2), \\ldots, (A_N,B_N)$ in such a way that each of these integers is present in exactly one pair, $A_i \\lt B_i$ for each valid $i$ and $A_1 \\lt A_2 \\lt \\ldots \\lt A_N$. Let's call such a sequence of pairs a *pairing*.\r\n\r\nFor a pairing $(A_1,B_1), (A_2,B_2), \\ldots, (A_N,B_N)$, we can create an undirected graph with $2N$ nodes (numbered $1$ through $2N$) and the following edges:\r\n- first type: for each valid $i$, an edge between nodes $i$ and $i+1$\r\n- second type: for each valid $i$, an edge between nodes $A_i$ and $B_i$\r\n\r\nThis pairing is valid if for each edge $(i,i+1)$ of the first type, there is an edge of the second type $(A_j, B_j)$ which \"surrounds\" it, i.e. satisfies $A_j \\le i$ and $B_j \\gt i$. The *cost* of a valid pairing is defined as the number of pairs of edges of the second type such that one of these edges is \"nested\" in the other, i.e. pairs $(A_i, B_i)$ and $(A_j, B_j)$ such that $A_i \\lt A_j \\lt B_j \\lt B_i$.\r\n\r\nFind the sum of costs of all valid pairings. Since this number may be very large, compute it modulo a given prime $P$.\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first and only line of each test case contains two space-separated integers $N$ and $P$.\r\n\r\n### Output\r\nFor each test case, print a single line containing one integer \u2014 the sum of costs of all valid pairings modulo $P$.\r\n\r\n### Constraints\r\n- $1 \\le T \\le 10^2$\r\n- $2 \\le N \\le 10^3$\r\n- $1 \\le P \\le 10^9$\r\n- $P$ is prime\r\n- the sum of $N$ over all test cases does not exceed $10,000$\r\n\r\n### Subtasks\r\n**Subtask #1 (50 points):** $N \\le 10$\r\n\r\n**Subtask #2 (50 points):** original constraints\r\n\r\n### Example Input\r\n```\r\n3\r\n2 17\r\n3 5\r\n817 999999797\r\n```\r\n\r\n### Example Output\r\n```\r\n1\r\n3\r\n223160771\r\n```\r\n\r\n### Explanation\r\n**Example case 1:** For $N = 2$, there are two valid pairings $[(1,3), (2,4)]$ and $[(1,4), (2,3)]$, with costs $0$ and $1$ respectively.\r\n\r\n**Example case 2:** For $N = 3$, all valid pairings along with their costs are listed below. \r\n- $[(1,4), (2,5), (3,6)]$ with cost $0$\r\n- $[(1,4), (2,6), (3,5)]$ with cost $1$\r\n- $[(1,5), (2,4), (3,6)]$ with cost $1$\r\n- $[(1,5), (2,6), (3,4)]$ with cost $2$\r\n- $[(1,6), (2,5), (3,4)]$ with cost $3$\r\n- $[(1,6), (2,4), (3,5)]$ with cost $2$\r\n- $[(1,3), (2,6), (4,5)]$ with cost $1$\r\n- $[(1,3), (2,5), (4,6)]$ with cost $0$\r\n- $[(1,6), (2,3), (4,5)]$ with cost $2$\r\n- $[(1,5), (2,3), (4,6)]$ with cost $1$\r\n\r\nThe sum of all costs is $13$ and its remainder modulo $5$ is $3$.\r\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/LTIME86\/hindi\/POFP.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/LTIME86\/bengali\/POFP.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/LTIME86\/mandarin\/POFP.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/LTIME86\/russian\/POFP.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/LTIME86\/vietnamese\/POFP.pdf) as well.\r\n\r\nConsider any way to pair the integers $1$ through $2N$ into $N$ pairs $(A_1,B_1), (A_2,B_2), \\ldots, (A_N,B_N)$ in such a way that each of these integers is present in exactly one pair, $A_i \\lt B_i$ for each valid $i$ and $A_1 \\lt A_2 \\lt \\ldots \\lt A_N$. Let's call such a sequence of pairs a *pairing*.\r\n\r\nFor a pairing $(A_1,B_1), (A_2,B_2), \\ldots, (A_N,B_N)$, we can create an undirected graph with $2N$ nodes (numbered $1$ through $2N$) and the following edges:\r\n- first type: for each valid $i$, an edge between nodes $i$ and $i+1$\r\n- second type: for each valid $i$, an edge between nodes $A_i$ and $B_i$\r\n\r\nThis pairing is valid if for each edge $(i,i+1)$ of the first type, there is an edge of the second type $(A_j, B_j)$ which \"surrounds\" it, i.e. satisfies $A_j \\le i$ and $B_j \\gt i$. The *cost* of a valid pairing is defined as the number of pairs of edges of the second type such that one of these edges is \"nested\" in the other, i.e. pairs $(A_i, B_i)$ and $(A_j, B_j)$ such that $A_i \\lt A_j \\lt B_j \\lt B_i$.\r\n\r\nFind the sum of costs of all valid pairings. Since this number may be very large, compute it modulo a given prime $P$.\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first and only line of each test case contains two space-separated integers $N$ and $P$.\r\n\r\n### Output\r\nFor each test case, print a single line containing one integer \u2014 the sum of costs of all valid pairings modulo $P$.\r\n\r\n### Constraints\r\n- $1 \\le T \\le 10^2$\r\n- $2 \\le N \\le 10^3$\r\n- $1 \\le P \\le 10^9$\r\n- $P$ is prime\r\n- the sum of $N$ over all test cases does not exceed $10,000$\r\n\r\n### Subtasks\r\n**Subtask #1 (50 points):** $N \\le 10$\r\n\r\n**Subtask #2 (50 points):** original constraints","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[{"id":"1","input":"3\r\n2 17\r\n3 5\r\n817 999999797","output":"1\r\n3\r\n223160771","explanation":"**Example case 1:** For $N = 2$, there are two valid pairings $[(1,3), (2,4)]$ and $[(1,4), (2,3)]$, with costs $0$ and $1$ respectively.\r\n\r\n**Example case 2:** For $N = 3$, all valid pairings along with their costs are listed below. \r\n- $[(1,4), (2,5), (3,6)]$ with cost $0$\r\n- $[(1,4), (2,6), (3,5)]$ with cost $1$\r\n- $[(1,5), (2,4), (3,6)]$ with cost $1$\r\n- $[(1,5), (2,6), (3,4)]$ with cost $2$\r\n- $[(1,6), (2,5), (3,4)]$ with cost $3$\r\n- $[(1,6), (2,4), (3,5)]$ with cost $2$\r\n- $[(1,3), (2,6), (4,5)]$ with cost $1$\r\n- $[(1,3), (2,5), (4,6)]$ with cost $0$\r\n- $[(1,6), (2,3), (4,5)]$ with cost $2$\r\n- $[(1,5), (2,3), (4,6)]$ with cost $1$\r\n\r\nThe sum of all costs is $13$ and its remainder modulo $5$ is $3$.","isDeleted":false}]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1.5","source_sizelimit":"50000","problem_author":"shashwatchandr","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #684273;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>4&#9733;<\/span><span class='m-username--link'>shashwatchandr<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"22-07-2020","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/dynamic-programming'>dynamic-programming<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/ltime86'>ltime86<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/medium'>medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/rajarshi_basu'>rajarshi_basu<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/shashwatchandr'>shashwatchandr<\/a>","problem_difficulty_level":"Medium","user_zen_mode":false,"best_tag":"Dynamic Programming","editorial_url":"https:\/\/discuss.codechef.com\/problems\/POFP","time":{"view_start_date":1595696400,"submit_start_date":1595696400,"visible_start_date":1595696400,"end_date":1735669800,"current":1643797970},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=POFP","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}