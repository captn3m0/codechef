{"category_name":"medium","status":"success","problem_code":"SMTOUR","problem_name":"F - Beautiful Walk","body":"You are given a directed graph with $n$ vertices and $m$ edges. A walk is defined as a sequence of vertices, such that there is an edge from every vertex in the walk to the next vertex in the walk.\r\n\r\nFormally, a walk with $t$ edges is a sequence $v_1, v_2, \\ldots v_{t+1}$, where for each $1 \\leq i \\leq t$, there is an edge from $v_i$ to $v_{i + 1}$. \r\n\r\nThe vertices $v_i$ of a walk do *not* have to be distinct. A single edge can occur multiple times in a walk.\r\n\r\nCall a walk beautiful if it has atmost $ \\left \\lfloor \\frac{n^2}{4}  \\right \\rfloor $ edges and each vertex is present in it at least once.\r\n\r\nThere are multiple independent testcases. For each testcase, find a beautiful walk in the given graph or claim that it doesn't exist.\r\n\r\n### Input\r\n- First line will contain $T$, number of testcases. Then the testcases follow. \r\n- The first line of each testcase contains of $n$ and $m$, the number of vertices and the number of edges in the graph respectively.\r\n- The next $m$ lines describe the edges of the graph. Each line consists of two integers $a$ and $b$ denoting a directed edge from $a$ to $b$.\r\n\r\n### Output\r\nFor each testcase:\r\n- If there doesn't exist a beautiful walk, print $-1$ on a newline.\r\n- If there exists a beautiful walk, find any such walk. Say it has $l \\leq \\frac{n^2}{4}$ edges, and the sequence of vertices is $\\{v_1, v_2, \\ldots v_{l + 1} \\}$. Print $l$ followed by $v_1, v_2, \\ldots v_{l + 1}$ on a new line.\r\n\r\n### Constraints \r\n- $1 \\leq T \\leq 1000$\r\n- $2 \\leq n \\leq 1000$\r\n- $ 0 \\leq m \\leq \\min(n (n - 1), 10^4)$\r\n- The sum of $n$ over all testcases doesn't exceed $1000$.\r\n- There are no multiple edges in the input. Note that it is allowed to have an edge from $i$ to $j$ and another from $j$ to $i$ though.\r\n\r\n### Example Input\r\n```\r\n2\r\n5 6\r\n1 2\r\n2 3\r\n3 1\r\n1 4\r\n4 5\r\n5 1\r\n3 2\r\n1 2\r\n1 3\r\n```\r\n\r\n### Example Output\r\n```\r\n5 1 2 3 1 4 5\r\n-1\r\n```\r\n\r\n### Explanation\r\nIn the first testcase, the walk $1 \\rightarrow 2 \\rightarrow 3 \\rightarrow1 \\rightarrow 4 \\rightarrow 5$ is a beautiful walk, as it visits all vertices and has $5 \\leq \\frac{5^2}{4}$ edges.\r\nNote that `5 1 4 5 1 2 3` is also a valid output.\r\n\r\nIn the second test case, there is no beautiful walk, so you sould print $-1$.\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"You are given a directed graph with $n$ vertices and $m$ edges. A walk is defined as a sequence of vertices, such that there is an edge from every vertex in the walk to the next vertex in the walk.\r\n\r\nFormally, a walk with $t$ edges is a sequence $v_1, v_2, \\ldots v_{t+1}$, where for each $1 \\leq i \\leq t$, there is an edge from $v_i$ to $v_{i + 1}$. \r\n\r\nThe vertices $v_i$ of a walk do *not* have to be distinct. A single edge can occur multiple times in a walk.\r\n\r\nCall a walk beautiful if it has atmost $ \\left \\lfloor \\frac{n^2}{4}  \\right \\rfloor $ edges and each vertex is present in it at least once.\r\n\r\nThere are multiple independent testcases. For each testcase, find a beautiful walk in the given graph or claim that it doesn't exist.\r\n\r\n### Input\r\n- First line will contain $T$, number of testcases. Then the testcases follow. \r\n- The first line of each testcase contains of $n$ and $m$, the number of vertices and the number of edges in the graph respectively.\r\n- The next $m$ lines describe the edges of the graph. Each line consists of two integers $a$ and $b$ denoting a directed edge from $a$ to $b$.\r\n\r\n### Output\r\nFor each testcase:\r\n- If there doesn't exist a beautiful walk, print $-1$ on a newline.\r\n- If there exists a beautiful walk, find any such walk. Say it has $l \\leq \\frac{n^2}{4}$ edges, and the sequence of vertices is $\\{v_1, v_2, \\ldots v_{l + 1} \\}$. Print $l$ followed by $v_1, v_2, \\ldots v_{l + 1}$ on a new line.\r\n\r\n### Constraints \r\n- $1 \\leq T \\leq 1000$\r\n- $2 \\leq n \\leq 1000$\r\n- $ 0 \\leq m \\leq \\min(n (n - 1), 10^4)$\r\n- The sum of $n$ over all testcases doesn't exceed $1000$.\r\n- There are no multiple edges in the input. Note that it is allowed to have an edge from $i$ to $j$ and another from $j$ to $i$ though.\r\n\r\n### Example Input\r\n```\r\n2\r\n5 6\r\n1 2\r\n2 3\r\n3 1\r\n1 4\r\n4 5\r\n5 1\r\n3 2\r\n1 2\r\n1 3\r\n```\r\n\r\n### Example Output\r\n```\r\n5 1 2 3 1 4 5\r\n-1\r\n```\r\n\r\n### Explanation\r\nIn the first testcase, the walk $1 \\rightarrow 2 \\rightarrow 3 \\rightarrow1 \\rightarrow 4 \\rightarrow 5$ is a beautiful walk, as it visits all vertices and has $5 \\leq \\frac{5^2}{4}$ edges.\r\nNote that `5 1 4 5 1 2 3` is also a valid output.\r\n\r\nIn the second test case, there is no beautiful walk, so you sould print $-1$.","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"jtnydv25","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;<\/span><span class='m-username--link'>jtnydv25<\/span>","problem_tester":null,"problem_tester_html_handle":"","date_added":"10-12-2019","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/graphs'>graphs<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/jtnydv25'>jtnydv25<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/medium-hard'>medium-hard<\/a>","problem_difficulty_level":"Medium-Hard","user_zen_mode":false,"best_tag":"Medium Hard","editorial_url":"","time":{"view_start_date":1576781100,"submit_start_date":1576781100,"visible_start_date":1576781100,"end_date":1735669800,"current":1643797977},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=SMTOUR","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}