{"category_name":"medium","status":"success","problem_code":"BOFP","problem_name":"Beauty of Pairs","body":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/LTIME75\/hindi\/BOFP.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/LTIME75\/bengali\/BOFP.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/LTIME75\/mandarin\/BOFP.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/LTIME75\/russian\/BOFP.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/LTIME75\/vietnamese\/BOFP.pdf) as well.\n\nYou are given a tree with $N$ vertices numbered 1 through $N$ as a sequence of $N-1$ edges \u2014 pairs $(a_1, b_1), (a_2, b_2), \\ldots, (a_{N-1}, b_{N-1})$. Let's define the *value* of a sequence $A$ with length $N-1$ as\n$$F(A)=\\sum_{i=1}^{N-1} A_i \\cdot W_i \\,,$$\nwhere $W_1, W_2, \\ldots, W_{N-1}$ are given weights.\n\nYou may change the order of the pairs and the order of elements within any pairs. Formally, consider a *reordering* $(P, R)$ \u2014 any permutation $P = (P_1, P_2, \\ldots, P_{N-1})$ of the integers $1$ through $N-1$ and any subset $R$ of these integers (possibly containing all of them). Let's define two sequences $C = (c_{P_1}, c_{P_2}, \\ldots, c_{P_{N-1}})$ and $D = (d_{P_1}, d_{P_2}, \\ldots, d_{P_{N-1}})$, where for each valid $i$, $c_i = a_i$ and $d_i = b_i$ if $i \\not\\in R$, or $c_i = b_i$ and $d_i = a_i$ if $i \\in R$. If $D$ is **strictly** increasing, the reordering is *valid* and its value is $F(C)$.\n\nFind the maximum value of a valid reordering, i.e. the maximum $F(C)$, and the number of valid reorderings that have this maximum value.\n\n### Input\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\n- The first line of each test case contains a single integer $N$.\n- The second line contains $N-1$ space-separated integers $W_1, W_2, \\ldots, W_{N-1}$.\n- $N-1$ lines follow. For each $i$ ($1 \\le i \\le N-1$), the $i$-th of these lines contains two space-separated integers $a_i$ and $b_i$.\n\n### Output\nFor each test case, print a single line containing two space-separated integers \u2014 the maximum value of a reordering and the number of reorderings with the maximum value.\n\n### Constraints\n- $1 \\le T \\le 100$\n- $2 \\le N \\le 2 \\cdot 10^5$\n- $|W_i| \\le 10^4$ for each valid $i$\n- $1 \\le a_i, b_i \\le N$ for each valid $i$\n- pairs $(a_i, b_i)$ are edges of a tree\n- the sum of $N$ over all test cases does not exceed $10^6$\n\n\n\n### Subtasks\n**Subtask #1 (50 points):**\n- $N \\le 1,000$\n- the sum of $N$ over all test cases does not exceed $5,000$\n\n**Subtask #2 (50 points):** original constraints\n\n### Example Input\n```\n1\n4\n1 1 0\n1 2\n1 3\n3 4\n```\n\n### Example Output\n```\n4 2\n```\n\n### Explanation\n**Example case 1:** There are two valid orderings with value $4$:\n- $P = (2, 1, 3)$, $R = \\{2, 3\\}$; $C = (3, 1, 4)$ and $D = (1, 2, 3)$, so $F(C) = 3 \\cdot 1 + 1 \\cdot 1 + 4 \\cdot 0 = 4$\n- $P = (2, 1, 3)$, $R = \\{2\\}$; $C = (3, 1, 3)$ and $D = (1, 2, 4)$, so $F(C) = 3 \\cdot 1 + 1 \\cdot 1 + 3 \\cdot 0 = 4$\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/LTIME75\/hindi\/BOFP.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/LTIME75\/bengali\/BOFP.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/LTIME75\/mandarin\/BOFP.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/LTIME75\/russian\/BOFP.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/LTIME75\/vietnamese\/BOFP.pdf) as well.\n\nYou are given a tree with $N$ vertices numbered 1 through $N$ as a sequence of $N-1$ edges \u2014 pairs $(a_1, b_1), (a_2, b_2), \\ldots, (a_{N-1}, b_{N-1})$. Let's define the *value* of a sequence $A$ with length $N-1$ as\n$$F(A)=\\sum_{i=1}^{N-1} A_i \\cdot W_i \\,,$$\nwhere $W_1, W_2, \\ldots, W_{N-1}$ are given weights.\n\nYou may change the order of the pairs and the order of elements within any pairs. Formally, consider a *reordering* $(P, R)$ \u2014 any permutation $P = (P_1, P_2, \\ldots, P_{N-1})$ of the integers $1$ through $N-1$ and any subset $R$ of these integers (possibly containing all of them). Let's define two sequences $C = (c_{P_1}, c_{P_2}, \\ldots, c_{P_{N-1}})$ and $D = (d_{P_1}, d_{P_2}, \\ldots, d_{P_{N-1}})$, where for each valid $i$, $c_i = a_i$ and $d_i = b_i$ if $i \\not\\in R$, or $c_i = b_i$ and $d_i = a_i$ if $i \\in R$. If $D$ is **strictly** increasing, the reordering is *valid* and its value is $F(C)$.\n\nFind the maximum value of a valid reordering, i.e. the maximum $F(C)$, and the number of valid reorderings that have this maximum value.\n\n### Input\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\n- The first line of each test case contains a single integer $N$.\n- The second line contains $N-1$ space-separated integers $W_1, W_2, \\ldots, W_{N-1}$.\n- $N-1$ lines follow. For each $i$ ($1 \\le i \\le N-1$), the $i$-th of these lines contains two space-separated integers $a_i$ and $b_i$.\n\n### Output\nFor each test case, print a single line containing two space-separated integers \u2014 the maximum value of a reordering and the number of reorderings with the maximum value.\n\n### Constraints\n- $1 \\le T \\le 100$\n- $2 \\le N \\le 2 \\cdot 10^5$\n- $|W_i| \\le 10^4$ for each valid $i$\n- $1 \\le a_i, b_i \\le N$ for each valid $i$\n- pairs $(a_i, b_i)$ are edges of a tree\n- the sum of $N$ over all test cases does not exceed $10^6$\n\n\n\n### Subtasks\n**Subtask #1 (50 points):**\n- $N \\le 1,000$\n- the sum of $N$ over all test cases does not exceed $5,000$\n\n**Subtask #2 (50 points):** original constraints","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[{"id":"1","input":"1\n4\n1 1 0\n1 2\n1 3\n3 4","output":"4 2","explanation":"**Example case 1:** There are two valid orderings with value $4$:\n- $P = (2, 1, 3)$, $R = \\{2, 3\\}$; $C = (3, 1, 4)$ and $D = (1, 2, 3)$, so $F(C) = 3 \\cdot 1 + 1 \\cdot 1 + 4 \\cdot 0 = 4$\n- $P = (2, 1, 3)$, $R = \\{2\\}$; $C = (3, 1, 3)$ and $D = (1, 2, 4)$, so $F(C) = 3 \\cdot 1 + 1 \\cdot 1 + 3 \\cdot 0 = 4$","isDeleted":false}]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM","max_timelimit":"2","source_sizelimit":"50000","problem_author":"farhod_farmon","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;<\/span><span class='m-username--link'>farhod_farmon<\/span>","problem_tester":null,"problem_tester_html_handle":"","date_added":"20-06-2019","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/farhod_farmon'>farhod_farmon<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/ltime75'>ltime75<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/medium-hard'>medium-hard<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/observation'>observation<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/segment-tree'>segment-tree<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/taran_1407'>taran_1407<\/a>","problem_difficulty_level":"Medium-Hard","user_zen_mode":false,"best_tag":"Segment Tree","editorial_url":"https:\/\/discuss.codechef.com\/problems\/BOFP","time":{"view_start_date":1567272600,"submit_start_date":1567272600,"visible_start_date":1567272600,"end_date":1735669800,"current":1643797923},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=BOFP","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}