{"category_name":"medium","status":"success","problem_code":"KPRB","problem_name":"K-Prob","body":"You are given a string $S$ of length $n$ and an integer $K$.    \r\nWe will define $F(L)$ here. Let's choose $K$ random sub-strings of length $L$ from $S$.    \r\nThen $F(L)$ equals the probability such that all of them are pairwise identical.      \r\n  \r\nSee the **Explanation** section for more clarity.   \r\n\r\n \r\nYou have to find $F(L)$  for each $1 \\leq L \\leq n$. \r\n\r\nIt can be shown that any $F(L)$ can be expressed as a fraction $\\frac{P}{Q}$, where $P$ and $Q$ are coprime integers, $P \\geq 0$, $Q > 0$ and $Q$ is coprime with $998244353$. You should compute $P \\times Q^{-1}%(998244353)$, where $Q^{\u22121}$ denotes the multiplicative inverse of $Q$ modulo $998244353$.\r\n\r\n\r\n###Input:\r\n\r\n- First line will contain two integers, $n$ (the length of string $S$) and $K$. \r\n- Next line will contain the string $S$. \r\n\r\n###Output:\r\nPrint $n$ space separated integers, $F(L)$, for each $1 \\leq L \\leq n$, in a single line, \r\n\r\n###Constraints \r\n- $1 \\leq n \\leq 10^6$\r\n- $2 \\leq K \\leq 10^6$\r\n- It\u2019s guaranteed that $S$ contains only lower-case Latin letters.\r\n\r\n\r\n###Sample Input:\r\n\t5 3\r\n\tababa\r\n\r\n###Sample Output:\r\n\t239578645 748683265 332748118 748683265 1\r\n\t\r\n###Explanation:\r\n\r\nIn our sample, for $L= 3$,  we have 3 sub-strings : \r\n\r\n- $aba$ (Starting from 1st position)\r\n- $bab$ (Starting from 2nd position)\r\n- $aba$ (Starting from 3rd position)\r\n\r\nAmong them we can chose in the following ways, to get all 3 of them pairwise identical:\r\n\r\n- $(1, 1, 1) : Probability\\ =\\ \\frac{1}{3} \\times \\frac{1}{3} \\times \\frac{1}{3} = \\frac{1}{27}$\r\n- $(2, 2, 2) : Probability\\ =\\ \\frac{1}{3} \\times \\frac{1}{3} \\times \\frac{1}{3} = \\frac{1}{27}$\r\n- $(3, 3, 3) : Probability\\ =\\ \\frac{1}{3} \\times \\frac{1}{3} \\times \\frac{1}{3} = \\frac{1}{27}$\r\n- $(1, 1, 3) : Probability\\ =\\ \\frac{1}{3} \\times \\frac{1}{3} \\times \\frac{1}{3} = \\frac{1}{27}$\r\n- $(1, 3, 1) : Probability\\ =\\ \\frac{1}{3} \\times \\frac{1}{3} \\times \\frac{1}{3} = \\frac{1}{27}$\r\n- $(3, 1, 1) : Probability\\ =\\ \\frac{1}{3} \\times \\frac{1}{3} \\times \\frac{1}{3} = \\frac{1}{27}$\r\n- $(3, 3, 1) : Probability\\ =\\ \\frac{1}{3} \\times \\frac{1}{3} \\times \\frac{1}{3} = \\frac{1}{27}$\r\n- $(3, 1, 3) : Probability\\ =\\ \\frac{1}{3} \\times \\frac{1}{3} \\times \\frac{1}{3} = \\frac{1}{27}$\r\n- $(1, 3, 3) : Probability\\ =\\ \\frac{1}{3} \\times \\frac{1}{3} \\times \\frac{1}{3} = \\frac{1}{27}$\r\n\r\n$(1, 3, 3)$ means that the three random substrings chosen are the substring starting at index 1, at index 3 and at index 3.\r\n\r\nSo $F(3) = 9 \\times \\frac{1}{27} =  \\frac{1}{3}$\r\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"You are given a string $S$ of length $n$ and an integer $K$.    \r\nWe will define $F(L)$ here. Let's choose $K$ random sub-strings of length $L$ from $S$.    \r\nThen $F(L)$ equals the probability such that all of them are pairwise identical.      \r\n  \r\nSee the **Explanation** section for more clarity.   \r\n\r\n \r\nYou have to find $F(L)$  for each $1 \\leq L \\leq n$. \r\n\r\nIt can be shown that any $F(L)$ can be expressed as a fraction $\\frac{P}{Q}$, where $P$ and $Q$ are coprime integers, $P \\geq 0$, $Q > 0$ and $Q$ is coprime with $998244353$. You should compute $P \\times Q^{-1}%(998244353)$, where $Q^{\u22121}$ denotes the multiplicative inverse of $Q$ modulo $998244353$.\r\n\r\n\r\n###Input:\r\n\r\n- First line will contain two integers, $n$ (the length of string $S$) and $K$. \r\n- Next line will contain the string $S$. \r\n\r\n###Output:\r\nPrint $n$ space separated integers, $F(L)$, for each $1 \\leq L \\leq n$, in a single line, \r\n\r\n###Constraints \r\n- $1 \\leq n \\leq 10^6$\r\n- $2 \\leq K \\leq 10^6$\r\n- It\u2019s guaranteed that $S$ contains only lower-case Latin letters.\r\n\r\n\r\n###Sample Input:\r\n\t5 3\r\n\tababa\r\n\r\n###Sample Output:\r\n\t239578645 748683265 332748118 748683265 1\r\n\t\r\n###Explanation:\r\n\r\nIn our sample, for $L= 3$,  we have 3 sub-strings : \r\n\r\n- $aba$ (Starting from 1st position)\r\n- $bab$ (Starting from 2nd position)\r\n- $aba$ (Starting from 3rd position)\r\n\r\nAmong them we can chose in the following ways, to get all 3 of them pairwise identical:\r\n\r\n- $(1, 1, 1) : Probability\\ =\\ \\frac{1}{3} \\times \\frac{1}{3} \\times \\frac{1}{3} = \\frac{1}{27}$\r\n- $(2, 2, 2) : Probability\\ =\\ \\frac{1}{3} \\times \\frac{1}{3} \\times \\frac{1}{3} = \\frac{1}{27}$\r\n- $(3, 3, 3) : Probability\\ =\\ \\frac{1}{3} \\times \\frac{1}{3} \\times \\frac{1}{3} = \\frac{1}{27}$\r\n- $(1, 1, 3) : Probability\\ =\\ \\frac{1}{3} \\times \\frac{1}{3} \\times \\frac{1}{3} = \\frac{1}{27}$\r\n- $(1, 3, 1) : Probability\\ =\\ \\frac{1}{3} \\times \\frac{1}{3} \\times \\frac{1}{3} = \\frac{1}{27}$\r\n- $(3, 1, 1) : Probability\\ =\\ \\frac{1}{3} \\times \\frac{1}{3} \\times \\frac{1}{3} = \\frac{1}{27}$\r\n- $(3, 3, 1) : Probability\\ =\\ \\frac{1}{3} \\times \\frac{1}{3} \\times \\frac{1}{3} = \\frac{1}{27}$\r\n- $(3, 1, 3) : Probability\\ =\\ \\frac{1}{3} \\times \\frac{1}{3} \\times \\frac{1}{3} = \\frac{1}{27}$\r\n- $(1, 3, 3) : Probability\\ =\\ \\frac{1}{3} \\times \\frac{1}{3} \\times \\frac{1}{3} = \\frac{1}{27}$\r\n\r\n$(1, 3, 3)$ means that the three random substrings chosen are the substring starting at index 1, at index 3 and at index 3.\r\n\r\nSo $F(3) = 9 \\times \\frac{1}{27} =  \\frac{1}{3}$\r\n","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM","max_timelimit":"4","source_sizelimit":"50000","problem_author":"msi_cse_buet","problem_author_html_handle":"msi_cse_buet","problem_tester":null,"problem_tester_html_handle":"","date_added":"17-12-2019","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/msi_cse_buet'>msi_cse_buet<\/a>","problem_difficulty_level":"Medium","user_zen_mode":false,"best_tag":"","editorial_url":"","time":{"view_start_date":1578249000,"submit_start_date":1578249000,"visible_start_date":1578249000,"end_date":1735669800,"current":1643797951},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=KPRB","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}