{"category_name":"medium","status":"success","problem_code":"MORPH21","problem_name":"Isomorphic Morphism","body":"### Read problems statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/COOK123\/hindi\/MORPH21.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/COOK123\/mandarin\/MORPH21.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/COOK123\/russian\/MORPH21.pdf), [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/COOK123\/vietnamese\/MORPH21.pdf), and [Bengali](https:\/\/www.codechef.com\/download\/translated\/COOK123\/bengali\/MORPH21.pdf) as well.\r\n\r\n*If I keep moving, they won't know |\r\nI'll morph to someone else |\r\nWhat they throw at me's too slow |\r\nI'll morph to someone else |\r\nI'm just a ghost |\r\nI'll morph to someone else |\r\nDefense mechanism mode!*\r\n\r\nYou are given two integer sequences $A_1, A_2, \\ldots, A_N$ and $B_1, B_2, \\ldots, B_N$ and an integer $K$. You may perform the following operation at most $3 \\cdot N$ times:\r\n- Select a contiguous subsequence of $A$ with length $K$. Let's denote this subsequence by $A_L, A_{L+1}, \\ldots, A_{L+K-1}$.\r\n- Create an integer sequence $S_1, S_2, \\ldots, S_K$ which is *isomorphic* to the selected subsequence \u2015 for each pair of integers $i$ and $j$ ($1 \\le i, j \\le K$), $S_i = S_j$ must hold if $A_{L-1+i} = A_{L-1+j}$ and $S_i \\neq S_j$ must hold if $A_{L-1+i} \\neq A_{L-1+j}$. In addition, $1 \\le S_i \\le 1,000$ must hold for each valid $i$.\r\n- For each valid $i$, replace $A_{L-1+i}$ by $S_i$.\r\n\r\nIs it possible to change the sequence $A$ to $B$? If it is possible, find a sequence of operations which morphs $A$ to $B$.\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains two space-separated integers $N$ and $K$.\r\n- The second line contains $N$ space-separated integers $A_1, A_2, \\ldots, A_N$.\r\n- The third line contains $N$ space-separated integers $B_1, B_2, \\ldots, B_N$.\r\n\r\n### Output\r\nFor each test case:\r\n- If it is impossible to morph $A$ to $B$ using no more than $3 \\cdot N$ operations, print a single line containing the string `\"NO\"` (without quotes).\r\n- Otherwise, start by printing a line containing the string `\"YES\"` (without quotes).\r\n- Then, print a line containing a single integer $P$ ($0 \\le P \\le 3 \\cdot N$) \u2015 the number of operations you want to perform.\r\n- Finally, print $P$ lines. Each of these lines should contain $K+1$ space-separated integers $L, S_1, S_2, \\ldots, S_K$ describing an operation ($1 \\le L \\le N-K+1$; $1 \\le S_i \\le 1,000$ for each valid $i$).\r\n\r\nIf there are multiple solutions, you may find any one of them.\r\n\r\n### Constraints\r\n- $1 \\le T \\le 100$\r\n- $1 \\le K \\le N \\le 100$\r\n- $1 \\le A_i, B_i \\le 1,000$ for each valid $i$\r\n\r\n### Example Input\r\n```\r\n4\r\n4 3\r\n1 2 3 4\r\n4 3 2 1\r\n7 5\r\n2 1 2 1 1 3 2\r\n5 4 1 5 4 3 9 \r\n6 4 \r\n1 1 5 4 3 6\r\n5 3 4 5 1 1\r\n3 1\r\n1 1 1\r\n9 10 21\r\n```\r\n\r\n### Example Output\r\n```\r\nYES\r\n2\r\n1 4 3 2\r\n2 3 2 1\r\nNO\r\nYES\r\n3\r\n2 3 4 1 6\r\n1 5 3 4 5\r\n3 4 5 1 1\r\nYES\r\n3\r\n1 9\r\n2 10\r\n3 21\r\n```\r\n\r\n### Explanation\r\n**Example case 1:** The state of the sequence after each operation is $[1, 2, 3, 4] \\rightarrow [4, 3, 2, 4] \\rightarrow [4, 3, 2, 1]$.\r\n\r\n**Example case 3:** The state of the sequence after each operation is $[1, 1, 5, 4, 3, 6] \\rightarrow [1, 3, 4, 1, 6, 6] \\rightarrow [5, 3, 4, 5, 6, 6] \\rightarrow [5, 3, 4, 5, 1, 1]$.\r\n\r\nSee the following animation for more clarity:\r\n\r\n<img src = \"https:\/\/codechef_shared.s3.amazonaws.com\/download\/Images\/COOK123\/MORPH21\/morph720p.gif\" width = \"100%\" height = \"100%\">\r\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"### Read problems statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/COOK123\/hindi\/MORPH21.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/COOK123\/mandarin\/MORPH21.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/COOK123\/russian\/MORPH21.pdf), [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/COOK123\/vietnamese\/MORPH21.pdf), and [Bengali](https:\/\/www.codechef.com\/download\/translated\/COOK123\/bengali\/MORPH21.pdf) as well.\r\n\r\n*If I keep moving, they won't know |\r\nI'll morph to someone else |\r\nWhat they throw at me's too slow |\r\nI'll morph to someone else |\r\nI'm just a ghost |\r\nI'll morph to someone else |\r\nDefense mechanism mode!*\r\n\r\nYou are given two integer sequences $A_1, A_2, \\ldots, A_N$ and $B_1, B_2, \\ldots, B_N$ and an integer $K$. You may perform the following operation at most $3 \\cdot N$ times:\r\n- Select a contiguous subsequence of $A$ with length $K$. Let's denote this subsequence by $A_L, A_{L+1}, \\ldots, A_{L+K-1}$.\r\n- Create an integer sequence $S_1, S_2, \\ldots, S_K$ which is *isomorphic* to the selected subsequence \u2015 for each pair of integers $i$ and $j$ ($1 \\le i, j \\le K$), $S_i = S_j$ must hold if $A_{L-1+i} = A_{L-1+j}$ and $S_i \\neq S_j$ must hold if $A_{L-1+i} \\neq A_{L-1+j}$. In addition, $1 \\le S_i \\le 1,000$ must hold for each valid $i$.\r\n- For each valid $i$, replace $A_{L-1+i}$ by $S_i$.\r\n\r\nIs it possible to change the sequence $A$ to $B$? If it is possible, find a sequence of operations which morphs $A$ to $B$.\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains two space-separated integers $N$ and $K$.\r\n- The second line contains $N$ space-separated integers $A_1, A_2, \\ldots, A_N$.\r\n- The third line contains $N$ space-separated integers $B_1, B_2, \\ldots, B_N$.\r\n\r\n### Output\r\nFor each test case:\r\n- If it is impossible to morph $A$ to $B$ using no more than $3 \\cdot N$ operations, print a single line containing the string `\"NO\"` (without quotes).\r\n- Otherwise, start by printing a line containing the string `\"YES\"` (without quotes).\r\n- Then, print a line containing a single integer $P$ ($0 \\le P \\le 3 \\cdot N$) \u2015 the number of operations you want to perform.\r\n- Finally, print $P$ lines. Each of these lines should contain $K+1$ space-separated integers $L, S_1, S_2, \\ldots, S_K$ describing an operation ($1 \\le L \\le N-K+1$; $1 \\le S_i \\le 1,000$ for each valid $i$).\r\n\r\nIf there are multiple solutions, you may find any one of them.\r\n\r\n### Constraints\r\n- $1 \\le T \\le 100$\r\n- $1 \\le K \\le N \\le 100$\r\n- $1 \\le A_i, B_i \\le 1,000$ for each valid $i$\r\n\r\n### Example Input\r\n```\r\n4\r\n4 3\r\n1 2 3 4\r\n4 3 2 1\r\n7 5\r\n2 1 2 1 1 3 2\r\n5 4 1 5 4 3 9 \r\n6 4 \r\n1 1 5 4 3 6\r\n5 3 4 5 1 1\r\n3 1\r\n1 1 1\r\n9 10 21\r\n```\r\n\r\n### Example Output\r\n```\r\nYES\r\n2\r\n1 4 3 2\r\n2 3 2 1\r\nNO\r\nYES\r\n3\r\n2 3 4 1 6\r\n1 5 3 4 5\r\n3 4 5 1 1\r\nYES\r\n3\r\n1 9\r\n2 10\r\n3 21\r\n```\r\n\r\n### Explanation\r\n**Example case 1:** The state of the sequence after each operation is $[1, 2, 3, 4] \\rightarrow [4, 3, 2, 4] \\rightarrow [4, 3, 2, 1]$.\r\n\r\n**Example case 3:** The state of the sequence after each operation is $[1, 1, 5, 4, 3, 6] \\rightarrow [1, 3, 4, 1, 6, 6] \\rightarrow [5, 3, 4, 5, 6, 6] \\rightarrow [5, 3, 4, 5, 1, 1]$.\r\n\r\nSee the following animation for more clarity:\r\n\r\n<img src = \"https:\/\/codechef_shared.s3.amazonaws.com\/download\/Images\/COOK123\/MORPH21\/morph720p.gif\" width = \"100%\" height = \"100%\">\r\n","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"https:\/\/youtu.be\/E4_-qk2TWeg","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"sjshohag","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;<\/span><span class='m-username--link'>sjshohag<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"5-10-2020","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/ad-hoc'>ad-hoc<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/cook123'>cook123<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/medium'>medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/psychik'>psychik<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/sjshohag'>sjshohag<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/sjshohag'>sjshohag<\/a>","problem_difficulty_level":"Medium","user_zen_mode":false,"best_tag":"Ad Hoc","editorial_url":"https:\/\/discuss.codechef.com\/problems\/MORPH21","time":{"view_start_date":1104528600,"submit_start_date":1104528600,"visible_start_date":1104528600,"end_date":1735669800,"current":1643797963},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=MORPH21","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}