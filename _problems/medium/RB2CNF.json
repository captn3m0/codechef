{"category_name":"medium","status":"success","problem_code":"RB2CNF","problem_name":"Red-Black Boolean Expression","body":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/NOV20\/hindi\/RB2CNF.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/NOV20\/bengali\/RB2CNF.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/NOV20\/mandarin\/RB2CNF.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/NOV20\/russian\/RB2CNF.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/NOV20\/vietnamese\/RB2CNF.pdf) as well.\r\n\r\nLet $S$ be a set of $N$ boolean variables $X_1, X_2, \\ldots, X_N$ and their negations $\\neg X_1, \\neg X_2, \\ldots, \\neg X_N$. You are given the initial values of all variables.\r\n\r\nA *2-CNF boolean expression* is defined as a [conjunction](https:\/\/en.wikipedia.org\/wiki\/Logical_conjunction) of clauses, where each clause is a [disjunction](https:\/\/en.wikipedia.org\/wiki\/Logical_disjunction) of two elements of the set $S$. Ada constructed a 2-CNF boolean expression $B$ with $M$ clauses as follows: \r\n- First, Ada painted each of the variables $X_1, X_2, \\ldots, X_N$ with one colour \u2015 either red or black.\r\n- Then, she painted the negated variables \u2015 for each valid $i$, if $X_i$ is painted red, then $\\neg X_i$ is painted black, and vice versa (if $X_i$ is black, $\\neg X_i$ is painted red).\r\n- Finally, she wrote the boolean expression $B = (P_1 \\lor Q_1) \\wedge (P_2 \\lor Q_2) \\wedge \\ldots \\wedge (P_M \\lor Q_M)$, in such a way that no clause contains two variables with the same colour and $P_i \\neq \\neg Q_i$ for each clause.\r\n\r\nAda wants the expression to evaluate to \"true\". In order to achieve that, she may change the values of variables; for each valid $i$, the cost of changing the value of $X_i$ (from \"true\" to \"false\" or vice versa) is $C_i$. Find the minimum total cost needed to make the expression $B$ evaluate to \"true\" or determine that it is impossible.\r\n\r\nNote that you are not given the colours of variables, but it is guaranteed that the expression $B$ is chosen in such a way that there is at least one valid way to assign colours and the minimum cost is the same for each valid assignment of colours.\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains two space-separated integers $N$ and $M$.\r\n- The second line contains a binary string $S$ with length $N$ describing the initial values of the variables. For each valid $i$, the $i$-th character of $S$ is '1' if $X_i$ is true or '0' if $X_i$ is false.\r\n- The third line contains $N$ space-separated integers $C_1, C_2, \\ldots, C_N$.\r\n- $M$ lines follow. For each valid $i$, the $i$-th of these lines contains two space-separated integers $P_i$ and $Q_i$. For each valid $i$, the variable $X_i$ is represented by the integer $i$ and its negation is represented by $-i$.\r\n\r\n### Output\r\nFor each test case, print a single line containing one integer \u2015 the minimum cost needed to make the boolean expression evaluate to \"true\", or $-1$ if it is impossible.\r\n\r\n### Constraints\r\n- $1 \\le T \\le 10^5$\r\n- $1 \\le N \\le 256$\r\n- $1 \\le C_i \\le 256$ for each valid $i$\r\n- $1 \\le |P_i|, |Q_i| \\le N$ for each valid $i$\r\n- each character of $S$ is either '0' or '1'\r\n- the sum of $M$ over all test cases does not exceed $43,210$\r\n\r\n### Subtasks\r\n**Subtask #1 (1 points):** $N \\le 10$\r\n\r\n**Subtask #2 (99 points):** original constraints\r\n\r\n### Example Input\r\n```\r\n1\r\n3 3\r\n101\r\n1 2 3\r\n-1 -2\r\n-1 -3\r\n2 1\r\n```\r\n\r\n### Example Output\r\n```\r\n3\r\n```\r\n\r\n### Explanation\r\n**Example case 1:** The expression $B$ is $(\\neg X_1 \\lor \\neg X_2) \\wedge (\\neg X_1 \\lor \\neg X_3) \\wedge (X_2 \\lor X_1)$. Ada generated this expression by painting $X_2$ and $X_3$ in red and $X_1$ in black.\r\n\r\nOne optimal way to make the expression true is changing the value of $X_3$.\r\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/NOV20\/hindi\/RB2CNF.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/NOV20\/bengali\/RB2CNF.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/NOV20\/mandarin\/RB2CNF.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/NOV20\/russian\/RB2CNF.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/NOV20\/vietnamese\/RB2CNF.pdf) as well.\r\n\r\nLet $S$ be a set of $N$ boolean variables $X_1, X_2, \\ldots, X_N$ and their negations $\\neg X_1, \\neg X_2, \\ldots, \\neg X_N$. You are given the initial values of all variables.\r\n\r\nA *2-CNF boolean expression* is defined as a [conjunction](https:\/\/en.wikipedia.org\/wiki\/Logical_conjunction) of clauses, where each clause is a [disjunction](https:\/\/en.wikipedia.org\/wiki\/Logical_disjunction) of two elements of the set $S$. Ada constructed a 2-CNF boolean expression $B$ with $M$ clauses as follows: \r\n- First, Ada painted each of the variables $X_1, X_2, \\ldots, X_N$ with one colour \u2015 either red or black.\r\n- Then, she painted the negated variables \u2015 for each valid $i$, if $X_i$ is painted red, then $\\neg X_i$ is painted black, and vice versa (if $X_i$ is black, $\\neg X_i$ is painted red).\r\n- Finally, she wrote the boolean expression $B = (P_1 \\lor Q_1) \\wedge (P_2 \\lor Q_2) \\wedge \\ldots \\wedge (P_M \\lor Q_M)$, in such a way that no clause contains two variables with the same colour and $P_i \\neq \\neg Q_i$ for each clause.\r\n\r\nAda wants the expression to evaluate to \"true\". In order to achieve that, she may change the values of variables; for each valid $i$, the cost of changing the value of $X_i$ (from \"true\" to \"false\" or vice versa) is $C_i$. Find the minimum total cost needed to make the expression $B$ evaluate to \"true\" or determine that it is impossible.\r\n\r\nNote that you are not given the colours of variables, but it is guaranteed that the expression $B$ is chosen in such a way that there is at least one valid way to assign colours and the minimum cost is the same for each valid assignment of colours.\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains two space-separated integers $N$ and $M$.\r\n- The second line contains a binary string $S$ with length $N$ describing the initial values of the variables. For each valid $i$, the $i$-th character of $S$ is '1' if $X_i$ is true or '0' if $X_i$ is false.\r\n- The third line contains $N$ space-separated integers $C_1, C_2, \\ldots, C_N$.\r\n- $M$ lines follow. For each valid $i$, the $i$-th of these lines contains two space-separated integers $P_i$ and $Q_i$. For each valid $i$, the variable $X_i$ is represented by the integer $i$ and its negation is represented by $-i$.\r\n\r\n### Output\r\nFor each test case, print a single line containing one integer \u2015 the minimum cost needed to make the boolean expression evaluate to \"true\", or $-1$ if it is impossible.\r\n\r\n### Constraints\r\n- $1 \\le T \\le 10^5$\r\n- $1 \\le N \\le 256$\r\n- $1 \\le C_i \\le 256$ for each valid $i$\r\n- $1 \\le |P_i|, |Q_i| \\le N$ for each valid $i$\r\n- each character of $S$ is either '0' or '1'\r\n- the sum of $M$ over all test cases does not exceed $43,210$\r\n\r\n### Subtasks\r\n**Subtask #1 (1 points):** $N \\le 10$\r\n\r\n**Subtask #2 (99 points):** original constraints","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[{"id":"1","input":"1\r\n3 3\r\n101\r\n1 2 3\r\n-1 -2\r\n-1 -3\r\n2 1","output":"3","explanation":"**Example case 1:** The expression $B$ is $(\\neg X_1 \\lor \\neg X_2) \\wedge (\\neg X_1 \\lor \\neg X_3) \\wedge (X_2 \\lor X_1)$. Ada generated this expression by painting $X_2$ and $X_3$ in red and $X_1$ in black.\r\n\r\nOne optimal way to make the expression true is changing the value of $X_3$.","isDeleted":false}]},"video_editorial_url":"https:\/\/youtu.be\/BsppQKBaxrQ","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"alei","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;<\/span><span class='m-username--link'>alei<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"14-10-2020","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/2-sat'>2-sat<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/alei'>alei<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/graphs'>graphs<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/medium-hard'>medium-hard<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/mincut-maxflow'>mincut-maxflow<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/nov20'>nov20<\/a>","problem_difficulty_level":"Medium-Hard","user_zen_mode":false,"best_tag":"Medium Hard","editorial_url":"https:\/\/discuss.codechef.com\/problems\/RB2CNF","time":{"view_start_date":1104528600,"submit_start_date":1104528600,"visible_start_date":1104528600,"end_date":1735669800,"current":1643797971},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=RB2CNF","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}