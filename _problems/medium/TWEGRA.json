{"category_name":"medium","status":"success","problem_code":"TWEGRA","problem_name":"Tweedle Graph","body":"Tweedledee and Tweedledum are in a fierce battle playing a complicated graph game.\r\n\r\nThe game is played on an undirected bidirectional simple graph of $N$ vertices (enumerated $1$ trhough $N$) and $(N \\cdot (N-1))\/2$ edges. We'll denote the beauty of vertex $u$ by $B_u$.\r\n\r\nThe game goes as follows:\r\n\r\n- First Twedledee places a token in one of the vertices of the graph.\r\n- Then players alternate turns, Tweedledum goes first. \r\n- In their turn a player must move the token to another vertex following one of its adjacent edges, the turn is finished by removing that edge.\r\n- After moving the token from one vertex to another, let's say from $u$ to $v$, the beauty of the game increases by $B_u \\cdot B_v$. When the game starts the beauty is equal to zero.\r\n- The player that cannot move loses.\r\n\r\nTweedledee and Tweedledum are legendary grand masters of combinatorial games, so they always play optimally. \r\n\r\nPlaying optimally means that:\r\n\r\n- If there is at least one move that allows the players winn, then he will choose one of those moves according to the following priorities in order\r\n    - Minimise the number of turns, he want to winn as quick as possible!\r\n    - Maximise the beauty of the game.\r\n- If the player can't winn, then he will choose a move according to the following priorities in order\r\n    - Maximise the number of turns, he want to last the longest possible!.\r\n    - Maximise the beauty of the game.\r\n\r\nAda doesn't want to wait till the end of the game. Help her finding the final beauty of the game.\r\n\r\n\r\n###Input:\r\n\r\n- The first line of input contains an integer $T$, the number of test cases.\r\n- Each test case consist of a single containing one integer $N$, followed by $N$ space separated integers $B_1, B_2, ..., B_N$.\r\n\r\n\r\n###Output:\r\nFor each test case print the final beauty fo the game.\r\n\r\n###Constraints \r\n- $3 \\leq N \\leq 10^5$\r\n- $1 \\leq B_i \\leq 10^3$\r\n- The sum of $N$ over all test cases does not exceed $5 \\cdot 10^5$\r\n\r\n###Sample Input:\r\n```\r\n1\r\n5 1 2 3 4 5\r\n```\r\n###Sample Output:\r\n```\r\n74\t\r\n```\r\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"Tweedledee and Tweedledum are in a fierce battle playing a complicated graph game.\r\n\r\nThe game is played on an undirected bidirectional simple graph of $N$ vertices (enumerated $1$ trhough $N$) and $(N \\cdot (N-1))\/2$ edges. We'll denote the beauty of vertex $u$ by $B_u$.\r\n\r\nThe game goes as follows:\r\n\r\n- First Twedledee places a token in one of the vertices of the graph.\r\n- Then players alternate turns, Tweedledum goes first. \r\n- In their turn a player must move the token to another vertex following one of its adjacent edges, the turn is finished by removing that edge.\r\n- After moving the token from one vertex to another, let's say from $u$ to $v$, the beauty of the game increases by $B_u \\cdot B_v$. When the game starts the beauty is equal to zero.\r\n- The player that cannot move loses.\r\n\r\nTweedledee and Tweedledum are legendary grand masters of combinatorial games, so they always play optimally. \r\n\r\nPlaying optimally means that:\r\n\r\n- If there is at least one move that allows the players winn, then he will choose one of those moves according to the following priorities in order\r\n    - Minimise the number of turns, he want to winn as quick as possible!\r\n    - Maximise the beauty of the game.\r\n- If the player can't winn, then he will choose a move according to the following priorities in order\r\n    - Maximise the number of turns, he want to last the longest possible!.\r\n    - Maximise the beauty of the game.\r\n\r\nAda doesn't want to wait till the end of the game. Help her finding the final beauty of the game.\r\n\r\n\r\n###Input:\r\n\r\n- The first line of input contains an integer $T$, the number of test cases.\r\n- Each test case consist of a single containing one integer $N$, followed by $N$ space separated integers $B_1, B_2, ..., B_N$.\r\n\r\n\r\n###Output:\r\nFor each test case print the final beauty fo the game.\r\n\r\n###Constraints \r\n- $3 \\leq N \\leq 10^5$\r\n- $1 \\leq B_i \\leq 10^3$\r\n- The sum of $N$ over all test cases does not exceed $5 \\cdot 10^5$\r\n\r\n###Sample Input:\r\n```\r\n1\r\n5 1 2 3 4 5\r\n```\r\n###Sample Output:\r\n```\r\n74\t\r\n```\r\n","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"alei","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;<\/span><span class='m-username--link'>alei<\/span>","problem_tester":null,"problem_tester_html_handle":"","date_added":"24-10-2019","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/alei'>alei<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/cnmp2019'>cnmp2019<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/easy-medium'>easy-medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/taran_1407'>taran_1407<\/a>","problem_difficulty_level":"Easy-Medium","user_zen_mode":false,"best_tag":"","editorial_url":"https:\/\/discuss.codechef.com\/problems\/TWEGRA","time":{"view_start_date":1573313400,"submit_start_date":1573313400,"visible_start_date":1573313400,"end_date":1735669800,"current":1643797986},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=TWEGRA","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}