{"category_name":"medium","status":"success","problem_code":"BT","problem_name":"Boring Trip","body":"This is an example statement in markdown. This is the statement of the problem [TANDC](https:\/\/codechef.com\/problems\/TANDC) on CodeChef. The main statement starts with the next paragraph. Please make sure to remove this paragraph from your statement before publishing your problem. If your problem doesn't contain Subtasks, you should remove the section subtask too. We are using markdown the syntax of which can be seen [at](https:\/\/github.com\/showdownjs\/showdown\/wiki\/Showdown's-Markdown-syntax). We request you to not use any HTML tags in the statement, e.g. no p, ul, li, pre, br or b tags. If you face any issue, please contact admins or email us at help@codechef.com.\n\nTracy is teaching Charlie maths via a game called $N$-Cube, which involves three sections involving $N$.\n\nTracy gives Charlie a number $N$, and Charlie makes a list of $N$-th powers of integers in increasing order $1^N, 2^N, 3^N, \\dot, \\text{so on}$. This teaches him exponentiation.\n\nThen Charlie performs the following subtraction game $N$ times: Take all pairs of consecutive numbers in the list and take their difference. These differences then form the new list for the next iteration of the game. Eg, if $N$ was 6, the list proceeds as $[1, 64, 729, 4096 ... ]$ to $[63, 685, 3367 ...]$, and so on $5$ more times.\n\nAfter the subtraction game, Charlie has to correctly tell Tracy the $N$-th element of the list. This number is the *value of the game*.\n\nAfter practice Charlie became an expert in the game. To challenge him more, Tracy will give two numbers $M$ (where $M$ is a prime) and $R$ instead of just a single number $N$, and the game must start from $M_R - 1$ instead of $N$. Since the *value of the game* can now become large, Charlie just have to tell the largest integer $K$ such that $M_K$ divides this number. Since even $K$ can be large, output $K$ modulo 1000000007 ($10^9 + 7$).\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"- $1 \\leq T \\leq 1000$\n- $2 \\leq K \\leq N \\leq 2 \\cdot 10^5$\n- $K$ is **even**\n- $-10^9 \\leq X_i \\leq 10^9$\n- $1 \\leq S_i \\leq 10^9$\n- Sum of $N$ over all test cases does not exceed $2 \\cdot 10^5$","constraintsState":true,"subtasks":"- 30 points : $1 \\leq R \\leq 10000$\n- 70 points : $1 \\leq R \\leq 10^9$\n","subtasksState":false,"statement":"The famous country Chefland can be represented as a number line. There are $N$ attractions in Chefland, among which the $i$-th attraction's position is $X_i$, and the time taken to completely explore it is $S_i$ hours. For convenience, we'll assume the time needed to move $1$ unit distance is $1$ hour.\n\nOne day, Chef decides to visit $K$ **distinct** attractions. He wants you to plan the trip, including selecting the attractions and arranging them. In addition, he somehow wants the trip to be as boring as possible.\n\nTo him, the *boredomness* of a trip is the total time wasted, including the time spent while moving between the attractions, and the time spent in exploring the attractions.\n\nFormally, if you list the indices of the attractions in the order he visits as an array $P = [P_1, P_2, P_3,...,P_K]$, then the boredomness equals $\\sum_{i=2}^{K} |X_{P_i} - X_{P_{i-1}}|$ + $\\sum_{i=1}^{K} S_{P_i}$.\n\nYour task is to find the maximum boredomness his trip could have.","inputFormat":"- The first line contains $T$ - the number of test cases. Then the test cases follow.\n- The first line of each test case contains two space-separated integers $N$ and $K$ - the number of attractions in the city and the number of attractions Chef wants to visit.\n- $N$ lines then follow, the $i$-th of which contains two space-separated integers $X_i$ and $S_i$ - the location and the time needed to completely explore the $i$-th attraction.\n","inputFormatState":true,"outputFormat":"For each test case, output the maximum possible boredomness the trip could have.\n","outputFormatState":true,"sampleTestCases":[{"id":"1","input":"2\n7 4\n0 3\n1 7\n2 4\n3 9\n4 5\n5 7\n6 4\n4 2\n0 7\n0 10\n0 8\n0 9\n","output":"39\n19\n","explanation":"- **Test case $1$**: The trip with the maximum boredomness is $[4, 7, 2, 6]$. The boredomness equals $|X_4 - X_7| + |X_7 - X_2| + |X_2 - X_6| + S_4 + S_7 + S_2 + S_6 = 3 + 6 + 4 + 9 + 4 + 7 + 7 = 39$.\n- **Test case $2$**: The trip with the maximum boredomness is $[2, 4]$. The boredomness equals $|X_2 - X_4| + S_2 + S_4 = 0 + 10 + 9 = 19$.","isDeleted":false}]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"dannyboy1204","problem_author_html_handle":"dannyboy1204","problem_tester":"","problem_tester_html_handle":"","date_added":"16-01-2022","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/dannyboy1204'>dannyboy1204<\/a>","problem_difficulty_level":"Medium","user_zen_mode":false,"best_tag":"","editorial_url":"","time":{"view_start_date":1642957200,"submit_start_date":1642957200,"visible_start_date":1642957200,"end_date":1735669800,"current":1643797924},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=BT","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}