{"category_name":"medium","status":"success","problem_code":"UNSQUERS","problem_name":"Unusual Queries","body":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/NOV20\/hindi\/UNSQUERS.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/NOV20\/bengali\/UNSQUERS.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/NOV20\/mandarin\/UNSQUERS.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/NOV20\/russian\/UNSQUERS.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/NOV20\/vietnamese\/UNSQUERS.pdf) as well.\r\n\r\nThere are $N$ mountains in Chefland, arranged in a line and numbered $1$ through $N$ from left to right. For each valid $i$, the $i$-th mountain from the left has a height $H_i$.\r\n\r\nChef wants to choose a contiguous sequence of mountains $l, l+1, \\ldots, r$ and visit them in this order. He has a notebook where he writes down some heights of mountains. Initially, the notebook contains only the integer $0$ and each time he visits a new mountain whose height is strictly greater than all the integers written in the notebook so far, he writes its height in the notebook. The *satisfaction* Chef gets from travelling is the number of positive integers written in the notebook at the end. For example, if the mountains have heights $(\\underline{1}, \\underline{5}, 2, 5, 3, \\underline{7}, 2, \\underline{9})$, Chef's satisfaction is $4$ and the integers written in the notebook at the end are $0, 1, 5, 7, 9$.\r\n\r\nYour task is to answer $Q$ queries. In each query, Chef gives you two integers $L$ and $R$ ($1 \\le L \\le R \\le N$) and you should find the maximum satisfaction he can get if he can choose to visit any contiguous sequence of mountains from $l$ to $r$ such that $L \\le l \\le r \\le R$. Note that the queries are encoded in such a way that they have to be processed online.\r\n\r\n### Input\r\n- The first line of each test case contains three space-separated integers $N$, $Q$ and $s$.\r\n- The second line contains $N$ space-separated integers $H_1, H_2, \\ldots, H_N$.\r\n- Each of the following $Q$ lines contains two space-separated integers $x$ and $y$ describing a query. The parameters $L$ and $R$ for this query can be computed as follows:\r\n\t- Let $last$ be the answer to the previous query, or $0$ if this is the first query in this test case.\r\n\t- Set $L$ to $(x + s \\cdot last - 1) \\,\\%\\, N + 1$.\r\n\t- Set $R$ to $(y + s \\cdot last - 1) \\,\\%\\, N + 1$.\r\n\t- If $L \\gt R$, swap $L$ and $R$.\r\n\r\n### Output\r\nFor each query, print a single line containing one integer \u2014 the maximum satisfaction Chef can get.\r\n\r\n### Constraints\r\n- $1 \\le N, Q \\le 10^5$\r\n- $0 \\le s \\le 1$\r\n- $1 \\le H_i \\le 10^5$ for each valid $i$\r\n- $1 \\le x, y \\le N$\r\n\r\n### Subtasks\r\n**Subtask #1 (15 points):** $N \\le 1,000$\r\n\r\n**Subtask #2 (35 points):** $s=0$, i.e. the queries do not have to be processed online\r\n\r\n**Subtask #2 (50 points):** original constraints\r\n\r\n### Example Input 1\r\n```\r\n6 3 0\r\n4 2 3 1 5 5\r\n1 6\r\n2 4\r\n3 4\r\n```\r\n\r\n### Example Output 1\r\n```\r\n3\r\n2\r\n1\r\n```\r\n\r\n### Explanation\r\nIn the first query, Chef can choose to visit a contiguous subsequence of mountains with heights $(4, 2, 3, 1, 5, 5)$. The subsequence that gives the maximum satisfaction is $(2, 3, 1, 5)$. In that case, Chef writes the integers $0, 2, 3, 5$ to his notebook, so the answer is $3$.\r\n\r\nIn the second query, Chef can choose to visit a contiguous subsequence of mountains with heights $(2, 3, 1)$. The whole sequence has the maximum satisfaction $2$, since Chef writes the integers $0, 2, 3$.\r\n\r\nIn the third query, the largest (and the only possible) satisfaction is $1$, since Chef writes either $0, 3$ or $0, 1$.\r\n\r\n### Example Input 2\r\n```\r\n10 10 1\r\n7 8 8 9 10 10 2 3 5 10\r\n9 6\r\n2 9\r\n10 6\r\n4 2\r\n5 10\r\n4 5\r\n8 7\r\n8 2\r\n7 7\r\n9 5\r\n```\r\n\r\n### Example Output 2\r\n```\r\n3\r\n3\r\n3\r\n1\r\n4\r\n2\r\n2\r\n4\r\n1\r\n4\r\n```\r\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/NOV20\/hindi\/UNSQUERS.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/NOV20\/bengali\/UNSQUERS.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/NOV20\/mandarin\/UNSQUERS.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/NOV20\/russian\/UNSQUERS.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/NOV20\/vietnamese\/UNSQUERS.pdf) as well.\r\n\r\nThere are $N$ mountains in Chefland, arranged in a line and numbered $1$ through $N$ from left to right. For each valid $i$, the $i$-th mountain from the left has a height $H_i$.\r\n\r\nChef wants to choose a contiguous sequence of mountains $l, l+1, \\ldots, r$ and visit them in this order. He has a notebook where he writes down some heights of mountains. Initially, the notebook contains only the integer $0$ and each time he visits a new mountain whose height is strictly greater than all the integers written in the notebook so far, he writes its height in the notebook. The *satisfaction* Chef gets from travelling is the number of positive integers written in the notebook at the end. For example, if the mountains have heights $(\\underline{1}, \\underline{5}, 2, 5, 3, \\underline{7}, 2, \\underline{9})$, Chef's satisfaction is $4$ and the integers written in the notebook at the end are $0, 1, 5, 7, 9$.\r\n\r\nYour task is to answer $Q$ queries. In each query, Chef gives you two integers $L$ and $R$ ($1 \\le L \\le R \\le N$) and you should find the maximum satisfaction he can get if he can choose to visit any contiguous sequence of mountains from $l$ to $r$ such that $L \\le l \\le r \\le R$. Note that the queries are encoded in such a way that they have to be processed online.\r\n\r\n### Input\r\n- The first line of each test case contains three space-separated integers $N$, $Q$ and $s$.\r\n- The second line contains $N$ space-separated integers $H_1, H_2, \\ldots, H_N$.\r\n- Each of the following $Q$ lines contains two space-separated integers $x$ and $y$ describing a query. The parameters $L$ and $R$ for this query can be computed as follows:\r\n\t- Let $last$ be the answer to the previous query, or $0$ if this is the first query in this test case.\r\n\t- Set $L$ to $(x + s \\cdot last - 1) \\,\\%\\, N + 1$.\r\n\t- Set $R$ to $(y + s \\cdot last - 1) \\,\\%\\, N + 1$.\r\n\t- If $L \\gt R$, swap $L$ and $R$.\r\n\r\n### Output\r\nFor each query, print a single line containing one integer \u2014 the maximum satisfaction Chef can get.\r\n\r\n### Constraints\r\n- $1 \\le N, Q \\le 10^5$\r\n- $0 \\le s \\le 1$\r\n- $1 \\le H_i \\le 10^5$ for each valid $i$\r\n- $1 \\le x, y \\le N$\r\n\r\n### Subtasks\r\n**Subtask #1 (15 points):** $N \\le 1,000$\r\n\r\n**Subtask #2 (35 points):** $s=0$, i.e. the queries do not have to be processed online\r\n\r\n**Subtask #2 (50 points):** original constraints\r\n\r\n### Example Input 1\r\n```\r\n6 3 0\r\n4 2 3 1 5 5\r\n1 6\r\n2 4\r\n3 4\r\n```\r\n\r\n### Example Output 1\r\n```\r\n3\r\n2\r\n1\r\n```\r\n\r\n### Explanation\r\nIn the first query, Chef can choose to visit a contiguous subsequence of mountains with heights $(4, 2, 3, 1, 5, 5)$. The subsequence that gives the maximum satisfaction is $(2, 3, 1, 5)$. In that case, Chef writes the integers $0, 2, 3, 5$ to his notebook, so the answer is $3$.\r\n\r\nIn the second query, Chef can choose to visit a contiguous subsequence of mountains with heights $(2, 3, 1)$. The whole sequence has the maximum satisfaction $2$, since Chef writes the integers $0, 2, 3$.\r\n\r\nIn the third query, the largest (and the only possible) satisfaction is $1$, since Chef writes either $0, 3$ or $0, 1$.\r\n\r\n### Example Input 2\r\n```\r\n10 10 1\r\n7 8 8 9 10 10 2 3 5 10\r\n9 6\r\n2 9\r\n10 6\r\n4 2\r\n5 10\r\n4 5\r\n8 7\r\n8 2\r\n7 7\r\n9 5\r\n```\r\n\r\n### Example Output 2\r\n```\r\n3\r\n3\r\n3\r\n1\r\n4\r\n2\r\n2\r\n4\r\n1\r\n4\r\n```\r\n","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"https:\/\/youtu.be\/deNty2kyEeI","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"2","source_sizelimit":"50000","problem_author":"dalgerok","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;<\/span><span class='m-username--link'>dalgerok<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"18-10-2020","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/dalgerok'>dalgerok<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/medium'>medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/nov20'>nov20<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/persistent-segment-tree'>persistent-segment-tree<\/a>","problem_difficulty_level":"Medium","user_zen_mode":false,"best_tag":"Persistent Segment Tree","editorial_url":"https:\/\/discuss.codechef.com\/problems\/UNSQUERS","time":{"view_start_date":1104528600,"submit_start_date":1104528600,"visible_start_date":1104528600,"end_date":1735669800,"current":1643797987},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=UNSQUERS","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}