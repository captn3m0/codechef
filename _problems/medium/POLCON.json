{"category_name":"medium","status":"success","problem_code":"POLCON","problem_name":"Polygon Containment","body":"Bob has created $N$ convex polygons on a $2-D$ plane, which are numbered from $1$ to $N$. He wants Alice to pick a maximum subset of these polygons such that no two polygons, $i, j$ $(i \\ne j)$, chosen in the subset are such that the $i^{th}$ polygon is contained strictly within the $j^{th}$ polygon or vice-versa.\r\n\r\nHelp Alice find the size of the maximum subset.\r\n\r\nNote:\r\n- By maximum subset, we mean a subset containing the maximum number of polygons.\r\n- A convex polygon $A$ is said to be strictly inside another convex polygon $B$ if none of its vertices lie on an edge of $B$ or outside $B$.\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains a single integer $N$, the number of polygons. The description of each polygon follows.\r\n- The $i^{th}$ polygon is described as follows:\r\n  - The first line contains an integer denoting the number of vertices of the polygon, $V_i$.\r\n  - $V_i$ lines follow. Each line contains $2$ space-separated integers denoting the $x$ co-ordinate and $y$ co-ordinate of that vertex respectively.\r\n  - The vertices are ordered in anti-clockwise direction.\r\n\r\n### Output\r\nFor each test case, print a single line containing an integer - the size of the largest subset of polygons that can be chosen as per the requirements mentioned in the problem.\r\n\r\n### Constraints\r\n- $1 \\le T \\le 5$\r\n- $2 \\le N \\le 100$, where $N$ denotes the number of polygons \r\n- $3 \\le V_i \\le 100$, where $V_i$ denotes the number of vertices in the $i^{th}$ polygon.\r\n- $-10^9 \\le$ all coordinates of vertices $\\le 10^9$\r\n- Sum of $N$ across all $T$ testcases does not exceed $100$.\r\n\r\n### Example Input\r\n```\r\n3\r\n2\r\n4\r\n0 0\r\n1 0\r\n1 1\r\n0 1\r\n4\r\n2 0\r\n3 0\r\n3 1\r\n2 1\r\n3\r\n10\r\n56 0\r\n85 14\r\n93 24\r\n97 33\r\n99 52\r\n96 69\r\n91 78\r\n6 75\r\n4 71\r\n0 59\r\n5\r\n50 42\r\n74 33\r\n77 36\r\n76 55\r\n56 57\r\n30\r\n110 147\r\n111 142\r\n112 139\r\n114 134\r\n117 129\r\n122 123\r\n126 119\r\n132 115\r\n136 113\r\n141 111\r\n146 110\r\n163 110\r\n181 118\r\n184 120\r\n189 125\r\n194 132\r\n195 134\r\n199 145\r\n198 167\r\n192 180\r\n183 190\r\n178 193\r\n167 198\r\n161 199\r\n142 198\r\n137 196\r\n124 188\r\n117 180\r\n113 173\r\n110 164\r\n2\r\n4\r\n0 2\r\n0 0\r\n2 0\r\n2 2\r\n4\r\n0 2\r\n0 1\r\n1 1\r\n1 2\r\n```\r\n\r\n### Example Output\r\n```\r\n2\r\n2\r\n2\r\n```\r\n\r\n### Explanation\r\n**Example case 1:** Polygon $1$ is not contained inside Polygon $2$ and neither is Polygon $2$ contained in Polygon $1$. Hence, both of them can be selected in the optimal solution.\r\n\r\n**Example case 2:** Polygon $2$ lies inside Polygon $1$. Hence, at most one of them can be selected in the subset.\r\n\r\n<img src=\"https:\/\/CodeChef.com\/uploads\/2019\/AR\/2.jpeg\" height=\"400\" width=\"400\">\r\n\r\n**Example case 3:** Polygon $2$ has a vertex lying on a side of Polygon $1$ and hence, it is not strictly inside Polygon $1$. Both polygons can be selected in the optimal solution.\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"Bob has created $N$ convex polygons on a $2-D$ plane, which are numbered from $1$ to $N$. He wants Alice to pick a maximum subset of these polygons such that no two polygons, $i, j$ $(i \\ne j)$, chosen in the subset are such that the $i^{th}$ polygon is contained strictly within the $j^{th}$ polygon or vice-versa.\r\n\r\nHelp Alice find the size of the maximum subset.\r\n\r\nNote:\r\n- By maximum subset, we mean a subset containing the maximum number of polygons.\r\n- A convex polygon $A$ is said to be strictly inside another convex polygon $B$ if none of its vertices lie on an edge of $B$ or outside $B$.\r\n\r\n### Input\r\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\r\n- The first line of each test case contains a single integer $N$, the number of polygons. The description of each polygon follows.\r\n- The $i^{th}$ polygon is described as follows:\r\n  - The first line contains an integer denoting the number of vertices of the polygon, $V_i$.\r\n  - $V_i$ lines follow. Each line contains $2$ space-separated integers denoting the $x$ co-ordinate and $y$ co-ordinate of that vertex respectively.\r\n  - The vertices are ordered in anti-clockwise direction.\r\n\r\n### Output\r\nFor each test case, print a single line containing an integer - the size of the largest subset of polygons that can be chosen as per the requirements mentioned in the problem.\r\n\r\n### Constraints\r\n- $1 \\le T \\le 5$\r\n- $2 \\le N \\le 100$, where $N$ denotes the number of polygons \r\n- $3 \\le V_i \\le 100$, where $V_i$ denotes the number of vertices in the $i^{th}$ polygon.\r\n- $-10^9 \\le$ all coordinates of vertices $\\le 10^9$\r\n- Sum of $N$ across all $T$ testcases does not exceed $100$.\r\n\r\n### Example Input\r\n```\r\n3\r\n2\r\n4\r\n0 0\r\n1 0\r\n1 1\r\n0 1\r\n4\r\n2 0\r\n3 0\r\n3 1\r\n2 1\r\n3\r\n10\r\n56 0\r\n85 14\r\n93 24\r\n97 33\r\n99 52\r\n96 69\r\n91 78\r\n6 75\r\n4 71\r\n0 59\r\n5\r\n50 42\r\n74 33\r\n77 36\r\n76 55\r\n56 57\r\n30\r\n110 147\r\n111 142\r\n112 139\r\n114 134\r\n117 129\r\n122 123\r\n126 119\r\n132 115\r\n136 113\r\n141 111\r\n146 110\r\n163 110\r\n181 118\r\n184 120\r\n189 125\r\n194 132\r\n195 134\r\n199 145\r\n198 167\r\n192 180\r\n183 190\r\n178 193\r\n167 198\r\n161 199\r\n142 198\r\n137 196\r\n124 188\r\n117 180\r\n113 173\r\n110 164\r\n2\r\n4\r\n0 2\r\n0 0\r\n2 0\r\n2 2\r\n4\r\n0 2\r\n0 1\r\n1 1\r\n1 2\r\n```\r\n\r\n### Example Output\r\n```\r\n2\r\n2\r\n2\r\n```\r\n\r\n### Explanation\r\n**Example case 1:** Polygon $1$ is not contained inside Polygon $2$ and neither is Polygon $2$ contained in Polygon $1$. Hence, both of them can be selected in the optimal solution.\r\n\r\n**Example case 2:** Polygon $2$ lies inside Polygon $1$. Hence, at most one of them can be selected in the subset.\r\n\r\n<img src=\"https:\/\/CodeChef.com\/uploads\/2019\/AR\/2.jpeg\" height=\"400\" width=\"400\">\r\n\r\n**Example case 3:** Polygon $2$ has a vertex lying on a side of Polygon $1$ and hence, it is not strictly inside Polygon $1$. Both polygons can be selected in the optimal solution.","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"wittyceaser","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #1E7D22;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>2&#9733;<\/span><span class='m-username--link'>wittyceaser<\/span>","problem_tester":null,"problem_tester_html_handle":"","date_added":"21-12-2019","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/wittyceaser'>wittyceaser<\/a>","problem_difficulty_level":"Medium","user_zen_mode":false,"best_tag":"","editorial_url":"","time":{"view_start_date":1577730600,"submit_start_date":1577730600,"visible_start_date":1577730600,"end_date":1735669800,"current":1643797970},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=POLCON","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}