{"category_name":"medium","status":"success","problem_code":"ISLNDHOP","problem_name":"Island Hopping","body":"### Read problem statements in [Mandarin](https:\/\/www.codechef.com\/download\/translated\/LTIME97\/mandarin\/ISLNDHOP.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/LTIME97\/bengali\/ISLNDHOP.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/LTIME97\/russian\/ISLNDHOP.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/LTIME97\/vietnamese\/ISLNDHOP.pdf) as well.\n\nThe nation of Islandia can be represented as an $N \\times N$ grid. Let $(i, j)$ denote the square at the $i$-th row from the top and the $j$-th column from the left. A cell $(i, j)$ is labelled $1$ if it is land and $0$ if it is water. Any two cells of the grid which share a side, and are both land are said to belong to the same island. \n\nIslandia holds two contests a year, the first at $(x_a, y_a)$ and the second at $(x_b, y_b)$. Ashish will need to travel from cell $(x_a, y_a)$ to $(x_b, y_b)$. To do so, he can perform a sequence of zero or more moves. In each move if he is at $(x_i, y_i)$, he can perform one of two actions:\n\n\n- Type 1: Move from $(x_i, y_i)$ to some land cell $(x_j, y_j)$ that lies on a different island at a cost of $| x_i - x_j | + | y_i - y_j |$\n- Type 2: Move from $(x_i, y_i)$ to some land cell $(x_j, y_j)$ that lies on the same island at a cost of $0$.\n\n\nLet the *beauty* of a sequence of moves be the number of moves of type $1$ while traveling from $(x_a, y_a)$ to $(x_b, y_b)$. We define the *simple cost* as the minimum cost of a sequence with $\\mathrm{beauty} \\leq 1$.\n\nAshish wants to figure out the maximum beauty possible to go from $(x_a,y_a)$ to $(x_b, y_b)$ without exceeding the *simple* cost. However, Ashish only knows $(x_a, y_a)$. Find the answer for **every possible** land cell $(x_b, y_b)$.\n\nNote that we **DO NOT need to minimize the cost of the trip**, only maximize the beauty without exceeding the simple cost.\n\n### Input\n\n- The first line contains an integer $T$, the number of test cases. Then $T$ test cases follow.\n- The first line of each test case contains an integer $N$.\n- The following $N$ lines each contains a string $S=s_1 s_2 \\ldots s_N$. The string on the $i$-th line represents the $i$-th row of the grid, where $s_{j}$ is $1$ if the cell $(i, j)$ is land, and $0$ if it is water.\n- The last line of each test case contains two integers $x_{a}$ and $y_{a}$ where $(x_a, y_a)$ represents the cell where the first contest will be held. It is guaranteed that this cell will be a land cell.\n\n### Output\n\nFor each test case, print $N$ lines, each containing the $N$ space-separated integers. The $j$-th value of the $i$-th line represents the maximum beauty possible on a journey from $(x_a, y_a)$ to $(i, j)$ satisfying the mentioned conditions, if the cell $(i, j)$ is land. If $(i, j)$ is a water cell or belongs to the same island as $(x_a, y_a)$, the value to be printed is 0.\n\n### Constraints\n\n- $1 \\leq T \\leq 20$\n- $1 \\leq N \\leq 200$\n- $1\\le x_a, y_a\\le N$\n- The sum of $N^2$ over all cases does not exceed $4\\cdot 10^4$\n\n###Subtasks\n\n**Subtask #1 (15 points):**\n- $N \\leq 50$\n- The sum of $N^2$ over all cases does not exceed $2500$\n\n**Subtask #2 (35 points):**\n- $N \\leq 100$\n- The sum of $N^2$ over all cases does not exceed $10^4$\n\n**Subtask #3 (50 points):** Original constraints\n\n###Sample Input 1\n```\n2\n2\n00\n01\n2 2\n5\n00001\n10010\n00001\n00000\n01010\n2 4\n```\n###Sample Output 1\n```\n0 0 \n0 0 \n0 0 0 0 1 \n1 0 0 0 0 \n0 0 0 0 1 \n0 0 0 0 0 \n0 2 0 1 0 \n```\n\n###Sample Input 2\n```\n2\n3\n011\n010\n001\n2 2\n9\n110000011\n001100001\n100100111\n011000010\n000110011\n000010100\n000011111\n111101001\n101110110\n3 1\n```\n\n###Sample Output 2\n```\n0 0 0 \n0 0 0 \n0 0 1 \n1 1 0 0 0 0 0 3 3 \n0 0 1 1 0 0 0 0 3 \n0 0 0 1 0 0 3 3 3 \n0 1 1 0 0 0 0 3 0 \n0 0 0 2 2 0 0 3 3 \n0 0 0 0 2 0 2 0 0 \n0 0 0 0 2 2 2 2 2 \n1 1 1 1 0 2 0 0 2 \n1 0 1 1 1 0 6 6 0 \n```\n\n###Sample Input 3\n```\n2\n7\n1011101\n0000000\n0000000\n0000000\n0000000\n0000000\n0000000\n1 1\n9\n111111101\n100000000\n100000000\n100000000\n100000000\n100000000\n100000000\n100000000\n111111101\n9 9\n```\n\n###Sample Output 3\n```\n0 0 1 1 1 0 2 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n1 1 1 1 1 1 1 0 4 \n1 0 0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 0 0 \n1 1 1 1 1 1 1 0 0 \n```\n\n###Explanation\n\n**Sample 1, test case 2:**\n\nThe simple cost from $(2, 4)$ to $(5, 2)$ is $| 2 - 5 | + | 4 - 2 | = 3 + 2 = 5$. We can achieve a beauty of $2$ without exceeding the simple cost in the following manner:\n\n- Perform a move of type $1$ from $(2, 4)$ to $(5, 4)$ at a cost of $3$.\n- Perform a move of type $1$ from $(5, 4)$ to $(5, 2)$ at a cost of $2$.\n\n**Sample 3, test case 1:**\n\nThe simple cost from $(1, 1)$ to $(1, 7)$ is $| 1 - 1 | + | 1 - 7 | = 0 + 6 = 6$. However we can achieve a beauty of $2$ without exceeding the simple cost in the following manner:\n\n- Perform a move of type $1$ from $(1, 1)$ to $(1, 3)$ at a cost of $2$.\n- Perform a move of type $2$ from $(1, 3)$ to $(1, 5)$ at a cost of $0$.\n- Perform a move of type $1$ from $(1, 5)$ to $(1, 7)$ at a cost of $2$.\n\nNote that the cost of some sequence with beauty $> 1$ might be lower than the simple cost.\n\n**Sample 3, test case 2:**\n\nIn the second case of third sample, the simple cost from $(9, 9)$ to $(1, 9)$ is $| 9 - 1 | + | 9 - 9 | = 8 + 0 = 8$. However we can achieve a beauty of $4$ without exceeding the simple cost in the following manner:\n\n- Perform a move of type $1$ from $(9, 9)$ to $(9, 7)$ at a cost of $2$.\n- Perform a move of type $2$ from $(9, 7)$ to $(1, 7)$ at a cost of $0$.\n- Perform a move of type $1$ from $(1, 7)$ to $(1, 9)$ at a cost of $2$.\n- Perform a move of type $1$ from $(1, 9)$ to $(1, 7)$ at a cost of $2$.\n- Perform a move of type $1$ from $(1, 7)$ to $(1, 9)$ at a cost of $2$.\n\nAlso note that in the same sample the answer for $(1, 7)$ will be $1$, not $3$ as the simple cost from $(9, 9)$ to $(1, 7)$ is $2$. This can be achieved by performing a move of type $1$ from $(9, 9)$ to $(9, 7)$ at cost of $2$ and then a move of type $2$ from $(9, 7)$ to $(1, 7)$ at a cost of $0$.\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"### Read problem statements in [Mandarin](https:\/\/www.codechef.com\/download\/translated\/LTIME97\/mandarin\/ISLNDHOP.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/LTIME97\/bengali\/ISLNDHOP.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/LTIME97\/russian\/ISLNDHOP.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/LTIME97\/vietnamese\/ISLNDHOP.pdf) as well.\n\nThe nation of Islandia can be represented as an $N \\times N$ grid. Let $(i, j)$ denote the square at the $i$-th row from the top and the $j$-th column from the left. A cell $(i, j)$ is labelled $1$ if it is land and $0$ if it is water. Any two cells of the grid which share a side, and are both land are said to belong to the same island. \n\nIslandia holds two contests a year, the first at $(x_a, y_a)$ and the second at $(x_b, y_b)$. Ashish will need to travel from cell $(x_a, y_a)$ to $(x_b, y_b)$. To do so, he can perform a sequence of zero or more moves. In each move if he is at $(x_i, y_i)$, he can perform one of two actions:\n\n\n- Type 1: Move from $(x_i, y_i)$ to some land cell $(x_j, y_j)$ that lies on a different island at a cost of $| x_i - x_j | + | y_i - y_j |$\n- Type 2: Move from $(x_i, y_i)$ to some land cell $(x_j, y_j)$ that lies on the same island at a cost of $0$.\n\n\nLet the *beauty* of a sequence of moves be the number of moves of type $1$ while traveling from $(x_a, y_a)$ to $(x_b, y_b)$. We define the *simple cost* as the minimum cost of a sequence with $\\mathrm{beauty} \\leq 1$.\n\nAshish wants to figure out the maximum beauty possible to go from $(x_a,y_a)$ to $(x_b, y_b)$ without exceeding the *simple* cost. However, Ashish only knows $(x_a, y_a)$. Find the answer for **every possible** land cell $(x_b, y_b)$.\n\nNote that we **DO NOT need to minimize the cost of the trip**, only maximize the beauty without exceeding the simple cost.\n\n### Input\n\n- The first line contains an integer $T$, the number of test cases. Then $T$ test cases follow.\n- The first line of each test case contains an integer $N$.\n- The following $N$ lines each contains a string $S=s_1 s_2 \\ldots s_N$. The string on the $i$-th line represents the $i$-th row of the grid, where $s_{j}$ is $1$ if the cell $(i, j)$ is land, and $0$ if it is water.\n- The last line of each test case contains two integers $x_{a}$ and $y_{a}$ where $(x_a, y_a)$ represents the cell where the first contest will be held. It is guaranteed that this cell will be a land cell.\n\n### Output\n\nFor each test case, print $N$ lines, each containing the $N$ space-separated integers. The $j$-th value of the $i$-th line represents the maximum beauty possible on a journey from $(x_a, y_a)$ to $(i, j)$ satisfying the mentioned conditions, if the cell $(i, j)$ is land. If $(i, j)$ is a water cell or belongs to the same island as $(x_a, y_a)$, the value to be printed is 0.\n\n### Constraints\n\n- $1 \\leq T \\leq 20$\n- $1 \\leq N \\leq 200$\n- $1\\le x_a, y_a\\le N$\n- The sum of $N^2$ over all cases does not exceed $4\\cdot 10^4$\n\n###Subtasks\n\n**Subtask #1 (15 points):**\n- $N \\leq 50$\n- The sum of $N^2$ over all cases does not exceed $2500$\n\n**Subtask #2 (35 points):**\n- $N \\leq 100$\n- The sum of $N^2$ over all cases does not exceed $10^4$\n\n**Subtask #3 (50 points):** Original constraints\n\n###Sample Input 1\n```\n2\n2\n00\n01\n2 2\n5\n00001\n10010\n00001\n00000\n01010\n2 4\n```\n###Sample Output 1\n```\n0 0 \n0 0 \n0 0 0 0 1 \n1 0 0 0 0 \n0 0 0 0 1 \n0 0 0 0 0 \n0 2 0 1 0 \n```\n\n###Sample Input 2\n```\n2\n3\n011\n010\n001\n2 2\n9\n110000011\n001100001\n100100111\n011000010\n000110011\n000010100\n000011111\n111101001\n101110110\n3 1\n```\n\n###Sample Output 2\n```\n0 0 0 \n0 0 0 \n0 0 1 \n1 1 0 0 0 0 0 3 3 \n0 0 1 1 0 0 0 0 3 \n0 0 0 1 0 0 3 3 3 \n0 1 1 0 0 0 0 3 0 \n0 0 0 2 2 0 0 3 3 \n0 0 0 0 2 0 2 0 0 \n0 0 0 0 2 2 2 2 2 \n1 1 1 1 0 2 0 0 2 \n1 0 1 1 1 0 6 6 0 \n```\n\n###Sample Input 3\n```\n2\n7\n1011101\n0000000\n0000000\n0000000\n0000000\n0000000\n0000000\n1 1\n9\n111111101\n100000000\n100000000\n100000000\n100000000\n100000000\n100000000\n100000000\n111111101\n9 9\n```\n\n###Sample Output 3\n```\n0 0 1 1 1 0 2 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n1 1 1 1 1 1 1 0 4 \n1 0 0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 0 0 \n1 1 1 1 1 1 1 0 0 \n```\n\n###Explanation\n\n**Sample 1, test case 2:**\n\nThe simple cost from $(2, 4)$ to $(5, 2)$ is $| 2 - 5 | + | 4 - 2 | = 3 + 2 = 5$. We can achieve a beauty of $2$ without exceeding the simple cost in the following manner:\n\n- Perform a move of type $1$ from $(2, 4)$ to $(5, 4)$ at a cost of $3$.\n- Perform a move of type $1$ from $(5, 4)$ to $(5, 2)$ at a cost of $2$.\n\n**Sample 3, test case 1:**\n\nThe simple cost from $(1, 1)$ to $(1, 7)$ is $| 1 - 1 | + | 1 - 7 | = 0 + 6 = 6$. However we can achieve a beauty of $2$ without exceeding the simple cost in the following manner:\n\n- Perform a move of type $1$ from $(1, 1)$ to $(1, 3)$ at a cost of $2$.\n- Perform a move of type $2$ from $(1, 3)$ to $(1, 5)$ at a cost of $0$.\n- Perform a move of type $1$ from $(1, 5)$ to $(1, 7)$ at a cost of $2$.\n\nNote that the cost of some sequence with beauty $> 1$ might be lower than the simple cost.\n\n**Sample 3, test case 2:**\n\nIn the second case of third sample, the simple cost from $(9, 9)$ to $(1, 9)$ is $| 9 - 1 | + | 9 - 9 | = 8 + 0 = 8$. However we can achieve a beauty of $4$ without exceeding the simple cost in the following manner:\n\n- Perform a move of type $1$ from $(9, 9)$ to $(9, 7)$ at a cost of $2$.\n- Perform a move of type $2$ from $(9, 7)$ to $(1, 7)$ at a cost of $0$.\n- Perform a move of type $1$ from $(1, 7)$ to $(1, 9)$ at a cost of $2$.\n- Perform a move of type $1$ from $(1, 9)$ to $(1, 7)$ at a cost of $2$.\n- Perform a move of type $1$ from $(1, 7)$ to $(1, 9)$ at a cost of $2$.\n\nAlso note that in the same sample the answer for $(1, 7)$ will be $1$, not $3$ as the simple cost from $(9, 9)$ to $(1, 7)$ is $2$. This can be achieved by performing a move of type $1$ from $(9, 9)$ to $(9, 7)$ at cost of $2$ and then a move of type $2$ from $(9, 7)$ to $(1, 7)$ at a cost of $0$.","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1.5","source_sizelimit":"50000","problem_author":"explodingfrz","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;<\/span><span class='m-username--link'>explodingfrz<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"22-06-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/dynamic-programming'>dynamic-programming<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/explodingfrz'>explodingfrz<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/graphs'>graphs<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/ltime97'>ltime97<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/medium-hard'>medium-hard<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/observation'>observation<\/a>","problem_difficulty_level":"Medium-Hard","user_zen_mode":false,"best_tag":"Dynamic Programming","editorial_url":"https:\/\/discuss.codechef.com\/problems\/ISLNDHOP","time":{"view_start_date":1624727702,"submit_start_date":1624727702,"visible_start_date":1624727702,"end_date":1735669800,"current":1643797951},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=ISLNDHOP","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}