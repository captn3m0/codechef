{"category_name":"medium","status":"success","problem_code":"BENDSPF7","problem_name":"7 - Wedding Bells","body":"It's wedding season in Chefland, and everyone can feel the magic! There are two towns in Chefland, town A and B, with a population of $N$ people in each. Since marriage from within the same town is forbidden, you as a match maker need to match people from town A to people from town B. Since people of Chefland are very amicable, most people have no problem marrying anyone from the other town. However, there are $M$ pairs of people $(A_i, B_i)$ who are incompatible with each other. Find the maximum number of people you can pair up for marriage as a wedding planner! \r\n\r\n###Input:\r\n\r\n- First line will contain $T$, number of testcases. Then the testcases follow. \r\n- The first line of each testcase contains  two integers $N, M$. \r\n- The next $M$ lines of each testcase contain the incompatible pairs $(A_i, B_i)$.\r\n\r\n###Output:\r\nFor each testcase, output in a single line the maximum number of people you can match.\r\n\r\n###Constraints \r\n- $1 \\leq T \\leq 1000$\r\n- $2 \\leq N \\leq 10^5$\r\n- $1 \\leq M \\leq 10^5$\r\n- $1 \\leq A_i, B_i \\leq N$\r\n- For two pairs $(A_i, B_i), (A_j, B_j)$ atleast one of $A_i \\neq A_j$ or $B_i \\neq B_j$ is true\r\n- Sum of $N$ across all testcases is $\\leq 10^6$\r\n- Sum of $M$ across all testcases is $\\leq 10^6$\r\n\r\n### Subtasks\r\n**Subtask #1 (100 points):** original constraints\r\n\r\n###Sample Input:\r\n\t1\r\n\t3 6\r\n\t1 1\r\n\t2 1\r\n\t2 2\r\n\t2 3\r\n\t3 2\r\n\t3 3\r\n\r\n###Sample Output:\r\n\t4\r\n\t\r\n###Explanation:\r\nThe pairs $(1,1), (2,1), (2,2), (2,3), (3,2), (3,3)$ are forbidden. The optimal match making in this case is as follows: $(1,2), (3,1)$, where $4$ people have been paired up. We can prove that no more than $4$ can be paired up.\r\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"It's wedding season in Chefland, and everyone can feel the magic! There are two towns in Chefland, town A and B, with a population of $N$ people in each. Since marriage from within the same town is forbidden, you as a match maker need to match people from town A to people from town B. Since people of Chefland are very amicable, most people have no problem marrying anyone from the other town. However, there are $M$ pairs of people $(A_i, B_i)$ who are incompatible with each other. Find the maximum number of people you can pair up for marriage as a wedding planner! \r\n\r\n###Input:\r\n\r\n- First line will contain $T$, number of testcases. Then the testcases follow. \r\n- The first line of each testcase contains  two integers $N, M$. \r\n- The next $M$ lines of each testcase contain the incompatible pairs $(A_i, B_i)$.\r\n\r\n###Output:\r\nFor each testcase, output in a single line the maximum number of people you can match.\r\n\r\n###Constraints \r\n- $1 \\leq T \\leq 1000$\r\n- $2 \\leq N \\leq 10^5$\r\n- $1 \\leq M \\leq 10^5$\r\n- $1 \\leq A_i, B_i \\leq N$\r\n- For two pairs $(A_i, B_i), (A_j, B_j)$ atleast one of $A_i \\neq A_j$ or $B_i \\neq B_j$ is true\r\n- Sum of $N$ across all testcases is $\\leq 10^6$\r\n- Sum of $M$ across all testcases is $\\leq 10^6$\r\n\r\n### Subtasks\r\n**Subtask #1 (100 points):** original constraints\r\n\r\n###Sample Input:\r\n\t1\r\n\t3 6\r\n\t1 1\r\n\t2 1\r\n\t2 2\r\n\t2 3\r\n\t3 2\r\n\t3 3\r\n\r\n###Sample Output:\r\n\t4\r\n\t\r\n###Explanation:\r\nThe pairs $(1,1), (2,1), (2,2), (2,3), (3,2), (3,3)$ are forbidden. The optimal match making in this case is as follows: $(1,2), (3,1)$, where $4$ people have been paired up. We can prove that no more than $4$ can be paired up.\r\n","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1","source_sizelimit":"50000","problem_author":"jtnydv25","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;<\/span><span class='m-username--link'>jtnydv25<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"31-12-2020","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/jtnydv25'>jtnydv25<\/a>","problem_difficulty_level":"Unavailable","user_zen_mode":false,"best_tag":"","editorial_url":"","time":{"view_start_date":1612018800,"submit_start_date":1612018800,"visible_start_date":1612018800,"end_date":1735669800,"current":1643797921},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=BENDSPF7","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}