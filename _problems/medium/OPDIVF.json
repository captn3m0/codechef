{"category_name":"medium","status":"success","problem_code":"OPDIVF","problem_name":"Overpowered Divisors","body":"The [Fundamental Theorem of Arithmetic](https:\/\/en.wikipedia.org\/wiki\/Fundamental_theorem_of_arithmetic) states that every number can be represented uniquely by its prime factorization, which is the decomposition of the number into the product of its prime powers.\n\nFormally, the prime factorization of a number $N = p_1^{q_1} \\times p_2^{q_2} \\times p_3^{q_3} \\dots \\times p_m^{q_m}$, where $p_1, p_2, p_3, ..., p_m$ are the prime factors, and $q_1, q_2, q_3, \\dots, q_m$ are the corresponding exponents, such that $p_i^{q_i}$ is the largest power of the prime $p_i$ that divides $N$.\n\nYou're given the prime factorization of a number $N$. You need to process $Q$ queries. In each query, you will be given a positive integer $K$. Let's call a divisor, $D$ of $N$ **overpowered** relative to $K$ if the sum of exponents in the prime factorization of $D$ equals to $K$. \n\nMore formally, if $D = p_1^{r_1} \\times p_2^{r_2} \\times p_3^{r_3} \\dots \\times p_m^{r_m}$, then $D$ is an overpowered divisor of $N$ relative to $K$ iff it divides $N$ and $r_1 + r_2 + r_3 + \\dots + r_m = K$.\n\nYou need to print the sum of each **distinct** overpowered divisor of $N$ relative to $K$ modulo $998244353$.\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"- $0 \\leq m \\leq 5 \\times 10^4$\n- $1 \\leq p_i \\leq 10^6$\n- $1 \\leq q_i \\leq 10^5$\n- Sum of $q_i$ over all primes won't exceed $10^5$.\n- $0 \\leq K \\leq 10^5$","constraintsState":true,"subtasks":"- 30 points : $1 \\leq R \\leq 10000$\n- 70 points : $1 \\leq R \\leq 10^9$\n","subtasksState":false,"statement":"The [Fundamental Theorem of Arithmetic](https:\/\/en.wikipedia.org\/wiki\/Fundamental_theorem_of_arithmetic) states that every number can be represented uniquely by its prime factorization, which is the decomposition of the number into the product of its prime powers.\n\nFormally, the prime factorization of a number $N = p_1^{q_1} \\times p_2^{q_2} \\times p_3^{q_3} \\dots \\times p_m^{q_m}$, where $p_1, p_2, p_3, ..., p_m$ are the prime factors, and $q_1, q_2, q_3, \\dots, q_m$ are the corresponding exponents, such that $p_i^{q_i}$ is the largest power of the prime $p_i$ that divides $N$.\n\nYou're given the prime factorization of a number $N$. You need to process $Q$ queries. In each query, you will be given a positive integer $K$. Let's call a divisor, $D$ of $N$ **overpowered** relative to $K$ if the sum of exponents in the prime factorization of $D$ equals to $K$. \n\nMore formally, if $D = p_1^{r_1} \\times p_2^{r_2} \\times p_3^{r_3} \\dots \\times p_m^{r_m}$, then $D$ is an overpowered divisor of $N$ relative to $K$ iff it divides $N$ and $r_1 + r_2 + r_3 + \\dots + r_m = K$.\n\nYou need to print the sum of each **distinct** overpowered divisor of $N$ relative to $K$ modulo $998244353$.","inputFormat":"- The first line contains a single integer $m$, the number of prime factors in the prime factorization of $N$.\n- The next $m$ lines contains two space-separated integers $p_i$ $q_i$, describing the prime factorization of $N$.\n- The next line contains a single integer $Q$, the number of queries. Description of the queries follows.\n- The next $Q$ lines consist of a single integer $K_i$ describing the $i^{th}$ query.","inputFormatState":true,"outputFormat":"For each query, you have to print a single integer, the answer to that query.\n","outputFormatState":true,"sampleTestCases":[{"id":"1","input":"2\n2 3\n3 2\n1\n3","output":"38","explanation":"- We have $N=2^3 \\times 3^2=72$, and the only query we need to process is $K=3$.\n- We notice that there are exactly three distinct **overpowered** divisors of $72$ relative to $3$, i.e., $2^1 \\times 3^2 = 18$ (as $1 + 2 = 3$), $2^2 \\times 3^1 = 12$ (as $2 + 1 = 3$), and $2^3 \\times 3^0 = 8$ (as $3 + 0 = 3$).\n- Hence, the sum of each distinct overpowered divisor of $72$ relative to $3$ is $18 + 12 + 8 = 38$.","isDeleted":false}]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"2","source_sizelimit":"50000","problem_author":"hitch_hiker42","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;<\/span><span class='m-username--link'>hitch_hiker42<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"18-07-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/cdmn2021'>cdmn2021<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/divide-and-conquer'>divide-and-conquer<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/fast-fourier-transform'>fast-fourier-transform<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/hitch_hiker42'>hitch_hiker42<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/medium-hard'>medium-hard<\/a>","problem_difficulty_level":"Medium-Hard","user_zen_mode":false,"best_tag":"Divide And Conquer","editorial_url":"https:\/\/discuss.codechef.com\/problems\/OPDIVF","time":{"view_start_date":1630603800,"submit_start_date":1630603800,"visible_start_date":1630603800,"end_date":1735669800,"current":1643797966},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=OPDIVF","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}