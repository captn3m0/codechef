{"category_name":"medium","status":"success","problem_code":"BINLAND","problem_name":"Binary Land","body":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/MAY20\/hindi\/BINLAND.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/MAY20\/bengali\/BINLAND.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/MAY20\/mandarin\/BINLAND.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/MAY20\/russian\/BINLAND.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/MAY20\/vietnamese\/BINLAND.pdf) as well.\r\n\r\nChefland is a city that always changes. It can be viewed as a grid with a fixed width $N$ (with $N$ columns numbered $1$ through $N$) and changing height. The rows of the grid are numbered with positive integers. Each cell in Chefland has a colour, which is either '0' or '1'.\r\n\r\nFrom a cell $(x, y)$, it is possible to move to one of the cells $(x+1, y-1)$, $(x+1, y)$ and $(x+1, y+1)$, but only if the destination cell exists and has the same colour as the origin cell.\r\n\r\nIn Chefland, rows sometimes appear or disappear. However, a row may only appear at the bottom of the grid or disappear if it was at the top of the grid; whenever that happens, rows are renumbered with positive integers from top to bottom in such a way that the topmost row has number $1$.\r\n\r\nNow, Chef received a difficult task \u2015 keeping track of the number of ways to move from the topmost row to the bottommost row. He is asking you to help him answer $Q$ queries. Initially, the grid is empty \u2015 it has $0$ rows. There are three types of queries:\r\n- `add L`: You are given a string $L$ with length $N$. A new row appears; for each valid $i$, the colour of the cell in this row and the $i$-th column is $L_i$.\r\n- `remove`: The topmost row disappears.\r\n- `path c d`: Find the number of paths starting in the cell in the topmost row and $c$-th column and ending in the cell in the bottommost row and $d$-th column. Two paths are considered different if there is a cell which is visited in one path, but not in the other. Since this number can be very big, compute it modulo $1,000,000,007$.\r\n\r\n### Input\r\n- The first line of the input contains two space-separated integers $N$ and $Q$.\r\n- Each of the following $Q$ lines describes a query in the format described above.\r\n\r\n### Output\r\nFor each `path` query, print a single line containing one integer \u2015 the number of paths modulo $1,000,000,007$.\r\n\r\n### Constraints\r\n- $1 \\le N \\le 20$\r\n- $1 \\le Q \\le 300,000$\r\n- $|L| = N$\r\n- $L$ contains only characters '0' and '1'\r\n- $1 \\le c, d \\le N$\r\n- for each `path` or `remove` query, the grid is not empty\r\n\r\n### Subtasks\r\n**Subtask #1 (10 points):**\r\n- $N \\le 10$\r\n- $Q \\le 300$\r\n\r\n**Subtask #2 (30 points):**\r\n- $N \\le 10$\r\n- $Q \\le 30,000$\r\n\r\n**Subtask #3 (60 points):** original constraints\r\n\r\n### Example Input\r\n```\r\n5 9\r\nadd 11101\r\npath 1 2\r\nadd 01110\r\npath 3 2\r\nadd 00100\r\npath 3 3\r\nadd 10110\r\nremove\r\npath 1 2\r\n```\r\n\r\n### Example Output\r\n```\r\n0\r\n1\r\n3\r\n2\r\n```\r\n\r\n### Explanation\r\nAfter the first query, the city is:\r\n```\r\n11101\r\n```\r\n\r\nThere is no way to move from column $1$ to column $2$.\r\n\r\nAfter the third query, the city is:\r\n```\r\n11101\r\n01110\r\n```\r\n\r\nThere is only one way to move from the cell $(1, 3)$ to the cell $(2, 2)$: $(1, 3) \\rightarrow (2, 2)$.\r\n\r\nAfter the fifth query, the city is:\r\n```\r\n11101\r\n01110\r\n00100\r\n```\r\n\r\nThere are $3$ ways to move from the cell $(1, 3)$ to the cell $(3, 3)$:\r\n- $(1, 3) \\rightarrow (2, 2) \\rightarrow (3, 3)$\r\n- $(1, 3) \\rightarrow (2, 3) \\rightarrow (3, 3)$\r\n- $(1, 3) \\rightarrow (2, 4) \\rightarrow (3, 3)$\r\n\r\nAfter the eighth query, the city is:\r\n```\r\n01110\r\n00100\r\n10110\r\n```\r\n\r\nThere are $2$ ways to move from the cell $(1, 1)$ to the cell $(3, 2)$:\r\n- $(1, 1) \\rightarrow (2, 1) \\rightarrow (3, 2)$\r\n- $(1, 1) \\rightarrow (2, 2) \\rightarrow (3, 2)$\r\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"### Read problem statements in [Hindi](https:\/\/www.codechef.com\/download\/translated\/MAY20\/hindi\/BINLAND.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/MAY20\/bengali\/BINLAND.pdf), [Mandarin Chinese](https:\/\/www.codechef.com\/download\/translated\/MAY20\/mandarin\/BINLAND.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/MAY20\/russian\/BINLAND.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/MAY20\/vietnamese\/BINLAND.pdf) as well.\r\n\r\nChefland is a city that always changes. It can be viewed as a grid with a fixed width $N$ (with $N$ columns numbered $1$ through $N$) and changing height. The rows of the grid are numbered with positive integers. Each cell in Chefland has a colour, which is either '0' or '1'.\r\n\r\nFrom a cell $(x, y)$, it is possible to move to one of the cells $(x+1, y-1)$, $(x+1, y)$ and $(x+1, y+1)$, but only if the destination cell exists and has the same colour as the origin cell.\r\n\r\nIn Chefland, rows sometimes appear or disappear. However, a row may only appear at the bottom of the grid or disappear if it was at the top of the grid; whenever that happens, rows are renumbered with positive integers from top to bottom in such a way that the topmost row has number $1$.\r\n\r\nNow, Chef received a difficult task \u2015 keeping track of the number of ways to move from the topmost row to the bottommost row. He is asking you to help him answer $Q$ queries. Initially, the grid is empty \u2015 it has $0$ rows. There are three types of queries:\r\n- `add L`: You are given a string $L$ with length $N$. A new row appears; for each valid $i$, the colour of the cell in this row and the $i$-th column is $L_i$.\r\n- `remove`: The topmost row disappears.\r\n- `path c d`: Find the number of paths starting in the cell in the topmost row and $c$-th column and ending in the cell in the bottommost row and $d$-th column. Two paths are considered different if there is a cell which is visited in one path, but not in the other. Since this number can be very big, compute it modulo $1,000,000,007$.\r\n\r\n### Input\r\n- The first line of the input contains two space-separated integers $N$ and $Q$.\r\n- Each of the following $Q$ lines describes a query in the format described above.\r\n\r\n### Output\r\nFor each `path` query, print a single line containing one integer \u2015 the number of paths modulo $1,000,000,007$.\r\n\r\n### Constraints\r\n- $1 \\le N \\le 20$\r\n- $1 \\le Q \\le 300,000$\r\n- $|L| = N$\r\n- $L$ contains only characters '0' and '1'\r\n- $1 \\le c, d \\le N$\r\n- for each `path` or `remove` query, the grid is not empty\r\n\r\n### Subtasks\r\n**Subtask #1 (10 points):**\r\n- $N \\le 10$\r\n- $Q \\le 300$\r\n\r\n**Subtask #2 (30 points):**\r\n- $N \\le 10$\r\n- $Q \\le 30,000$\r\n\r\n**Subtask #3 (60 points):** original constraints","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[{"id":"1","input":"5 9\r\nadd 11101\r\npath 1 2\r\nadd 01110\r\npath 3 2\r\nadd 00100\r\npath 3 3\r\nadd 10110\r\nremove\r\npath 1 2","output":"0\r\n1\r\n3\r\n2","explanation":"After the first query, the city is:\r\n```\r\n11101\r\n```\r\n\r\nThere is no way to move from column $1$ to column $2$.\r\n\r\nAfter the third query, the city is:\r\n```\r\n11101\r\n01110\r\n```\r\n\r\nThere is only one way to move from the cell $(1, 3)$ to the cell $(2, 2)$: $(1, 3) \\rightarrow (2, 2)$.\r\n\r\nAfter the fifth query, the city is:\r\n```\r\n11101\r\n01110\r\n00100\r\n```\r\n\r\nThere are $3$ ways to move from the cell $(1, 3)$ to the cell $(3, 3)$:\r\n- $(1, 3) \\rightarrow (2, 2) \\rightarrow (3, 3)$\r\n- $(1, 3) \\rightarrow (2, 3) \\rightarrow (3, 3)$\r\n- $(1, 3) \\rightarrow (2, 4) \\rightarrow (3, 3)$\r\n\r\nAfter the eighth query, the city is:\r\n```\r\n01110\r\n00100\r\n10110\r\n```\r\n\r\nThere are $2$ ways to move from the cell $(1, 1)$ to the cell $(3, 2)$:\r\n- $(1, 1) \\rightarrow (2, 1) \\rightarrow (3, 2)$\r\n- $(1, 1) \\rightarrow (2, 2) \\rightarrow (3, 2)$","isDeleted":false}]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"1.1","source_sizelimit":"50000","problem_author":"fmota","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;<\/span><span class='m-username--link'>fmota<\/span>","problem_tester":null,"problem_tester_html_handle":"","date_added":"27-02-2020","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/dynamic-programming'>dynamic-programming<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/fmota'>fmota<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/fmota'>fmota<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/may20'>may20<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/medium-hard'>medium-hard<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/queue'>queue<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/stack'>stack<\/a>","problem_difficulty_level":"Medium-Hard","user_zen_mode":false,"best_tag":"Dynamic Programming","editorial_url":"https:\/\/discuss.codechef.com\/problems\/BINLAND","time":{"view_start_date":1589189402,"submit_start_date":1589189402,"visible_start_date":1589189402,"end_date":1735669800,"current":1643797921},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=BINLAND","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}