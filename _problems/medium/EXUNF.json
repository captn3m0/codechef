{"category_name":"medium","status":"success","problem_code":"EXUNF","problem_name":"Dipole Moment","body":"You are given a tree with $N$ nodes, numbered from $1$ to $N$. It is  rooted at node $1$.\r\n\r\nWe call the simple path between node $A$ and node $B$ to be vertical if node $A$ lies on the path from the root to $B$ or node $B$ lies on the path from the root to $A$. In other words, [LCA](https:\/\/en.wikipedia.org\/wiki\/Lowest_common_ancestor) ($A,B$) must be $A$ or $B$.  And in such cases, we define a node $A$ to lie **above** node $B$ in the tree if distance to $A$ from the root is less than the distance from the root to $B$. Otherwise we define it to lie **below** $B$.\r\n\r\nYou also have with you $1$ Proton and $E$ Electrons (together called as particles) .  And you need to place these in some nodes of the tree.\r\n\r\nSuppose we fix the proton to be at some node $A$. We then call a placement of electrons **valid** if the following conditions are met  :-\r\n\r\n- Each node can have at most one particle in it. Also, every particle should be placed in some node.\r\n- Electrons can only be placed in nodes from which the simple path to $A$ is **vertical** (that is, they should either be above $A$, or below $A$).\r\n- At least $X_A$ nodes **above** $A$ should contain an electron and at least $Y_A$ nodes **below** $A$ should contain an electron. \r\n\r\nThe Dipole moment for a **valid placement** of electrons is calculated as follows :- \r\n\r\n- Consider the sum of distances from $A$ to nodes which contain an electron and lie **above** $A$. Let this sum be $S_1$.\r\n- Similarly, consider the sum of distances from $A$ to nodes which contain an electron and lie **below** $A$. Let this sum be $S_2$.\r\n- The Dipole Moment is then defined as |$S_1-S_2+Z_A$|, here $Z_A$ is the positive charge if the proton is placed at $A$. Here, |$X$| refers to the absolute value of $X$.\r\n\r\n\r\nFor every $A$ ($1 \\leq A \\leq N$) print the minimum dipole moment you can achieve among all valid placement in which the node $A$ contains the proton. \r\n\r\nIn case there is no valid placement for a particular node $A$, print $-1$ for that.\r\n\r\nNote that the distance between two nodes is the number of edges in the simple path between them.\r\n \r\n###Input:\r\n \r\n- The first line contains a single integer, $T$, which denotes the number of testcases.\r\n- The first line of each testcase will contain two integers, $N$ and $E$, which denote the number of nodes and number of electrons respectively. \r\n- The next $N-1$ lines contain two integers $u$ and $v$ denoting that there\u2019s an edge between $u$ and $v$ in the tree.\r\n- The i-th of the next $N$ lines contain 3 space separated integers ,  $X_i,Y_i,Z_i$ \r\n\r\n \r\n###Output:\r\n- Output $T$ lines, where each line should be containing $N$ space-separated integers, the $A^{th}$ integer should be the minimum dipole moment if the proton is placed at node $A$ , or -1 if there is no valid placement. \r\n  \r\n###Constraints\r\n- $1 \\leq T \\leq 5$\r\n- $2 \\leq N \\leq 2*10^5$\r\n- $1 \\leq u,v \\leq N$\r\n- Sum of $N$ over all testcases $\\leq 4*10^5$\r\n- $1 \\leq E \\leq N-1$\r\n- $ 0 \\leq |Z_i|  \\leq 10^6$\r\n- $ 0 \\leq X_i,Y_i  <  N$\r\n- $ 0 \\leq X_i+Y_i  \\leq  E$\r\n-  $X_A \\leq $ number of nodes **above**  $A$, for all $A$. \r\n- $Y_A \\leq $ number of nodes **below** $A$, for all $A$. \r\n\r\n\r\n###Subtasks\r\n- 15 points : sum of $N$ over all testcases $ \\leq 300$\r\n- 25 points : sum of $N$ over all testcases $ \\leq 3000$\r\n- 60 points : Original Constraints. \r\n  \r\n###Sample Input:\r\n```\r\n1\r\n13 2\r\n1 2\r\n2 3\r\n2 4\r\n2 5\r\n4 6\r\n4 7\r\n1 8\r\n8 9\r\n8 10\r\n8 12\r\n10 11\r\n1 13\r\n0 1 5\r\n0 0 0\r\n1 0 4\r\n2 0 -3\r\n1 0 -8\r\n2 0 -6\r\n2 0 3\r\n0 2 0\r\n1 0 -4\r\n2 0 7\r\n0 0 2\r\n0 0 10\r\n1 0 -2\r\n```\r\n\r\n###Sample Output:\r\n```\r\n0 0 7 0 5 1 6 2 1 10 5 13 -1\r\n```\r\n\r\n###Explanation:\r\nWith the proton fixed at node $1$, we can achieve a dipole moment of $0$ by placing the electrons at nodes $2$ and $12$ for instance.\r\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"You are given a tree with $N$ nodes, numbered from $1$ to $N$. It is  rooted at node $1$.\r\n\r\nWe call the simple path between node $A$ and node $B$ to be vertical if node $A$ lies on the path from the root to $B$ or node $B$ lies on the path from the root to $A$. In other words, [LCA](https:\/\/en.wikipedia.org\/wiki\/Lowest_common_ancestor) ($A,B$) must be $A$ or $B$.  And in such cases, we define a node $A$ to lie **above** node $B$ in the tree if distance to $A$ from the root is less than the distance from the root to $B$. Otherwise we define it to lie **below** $B$.\r\n\r\nYou also have with you $1$ Proton and $E$ Electrons (together called as particles) .  And you need to place these in some nodes of the tree.\r\n\r\nSuppose we fix the proton to be at some node $A$. We then call a placement of electrons **valid** if the following conditions are met  :-\r\n\r\n- Each node can have at most one particle in it. Also, every particle should be placed in some node.\r\n- Electrons can only be placed in nodes from which the simple path to $A$ is **vertical** (that is, they should either be above $A$, or below $A$).\r\n- At least $X_A$ nodes **above** $A$ should contain an electron and at least $Y_A$ nodes **below** $A$ should contain an electron. \r\n\r\nThe Dipole moment for a **valid placement** of electrons is calculated as follows :- \r\n\r\n- Consider the sum of distances from $A$ to nodes which contain an electron and lie **above** $A$. Let this sum be $S_1$.\r\n- Similarly, consider the sum of distances from $A$ to nodes which contain an electron and lie **below** $A$. Let this sum be $S_2$.\r\n- The Dipole Moment is then defined as |$S_1-S_2+Z_A$|, here $Z_A$ is the positive charge if the proton is placed at $A$. Here, |$X$| refers to the absolute value of $X$.\r\n\r\n\r\nFor every $A$ ($1 \\leq A \\leq N$) print the minimum dipole moment you can achieve among all valid placement in which the node $A$ contains the proton. \r\n\r\nIn case there is no valid placement for a particular node $A$, print $-1$ for that.\r\n\r\nNote that the distance between two nodes is the number of edges in the simple path between them.\r\n \r\n###Input:\r\n \r\n- The first line contains a single integer, $T$, which denotes the number of testcases.\r\n- The first line of each testcase will contain two integers, $N$ and $E$, which denote the number of nodes and number of electrons respectively. \r\n- The next $N-1$ lines contain two integers $u$ and $v$ denoting that there\u2019s an edge between $u$ and $v$ in the tree.\r\n- The i-th of the next $N$ lines contain 3 space separated integers ,  $X_i,Y_i,Z_i$ \r\n\r\n \r\n###Output:\r\n- Output $T$ lines, where each line should be containing $N$ space-separated integers, the $A^{th}$ integer should be the minimum dipole moment if the proton is placed at node $A$ , or -1 if there is no valid placement. \r\n  \r\n###Constraints\r\n- $1 \\leq T \\leq 5$\r\n- $2 \\leq N \\leq 2*10^5$\r\n- $1 \\leq u,v \\leq N$\r\n- Sum of $N$ over all testcases $\\leq 4*10^5$\r\n- $1 \\leq E \\leq N-1$\r\n- $ 0 \\leq |Z_i|  \\leq 10^6$\r\n- $ 0 \\leq X_i,Y_i  <  N$\r\n- $ 0 \\leq X_i+Y_i  \\leq  E$\r\n-  $X_A \\leq $ number of nodes **above**  $A$, for all $A$. \r\n- $Y_A \\leq $ number of nodes **below** $A$, for all $A$. \r\n\r\n\r\n###Subtasks\r\n- 15 points : sum of $N$ over all testcases $ \\leq 300$\r\n- 25 points : sum of $N$ over all testcases $ \\leq 3000$\r\n- 60 points : Original Constraints. \r\n  \r\n###Sample Input:\r\n```\r\n1\r\n13 2\r\n1 2\r\n2 3\r\n2 4\r\n2 5\r\n4 6\r\n4 7\r\n1 8\r\n8 9\r\n8 10\r\n8 12\r\n10 11\r\n1 13\r\n0 1 5\r\n0 0 0\r\n1 0 4\r\n2 0 -3\r\n1 0 -8\r\n2 0 -6\r\n2 0 3\r\n0 2 0\r\n1 0 -4\r\n2 0 7\r\n0 0 2\r\n0 0 10\r\n1 0 -2\r\n```\r\n\r\n###Sample Output:\r\n```\r\n0 0 7 0 5 1 6 2 1 10 5 13 -1\r\n```\r\n\r\n###Explanation:\r\nWith the proton fixed at node $1$, we can achieve a dipole moment of $0$ by placing the electrons at nodes $2$ and $12$ for instance.\r\n","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM","max_timelimit":"2.5","source_sizelimit":"50000","problem_author":"shashwatchandr","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #684273;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>4&#9733;<\/span><span class='m-username--link'>shashwatchandr<\/span>","problem_tester":null,"problem_tester_html_handle":"","date_added":"25-09-2019","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/expp2019'>expp2019<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/medium'>medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/medium-hard'>medium-hard<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/shashwatchandr'>shashwatchandr<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/trees'>trees<\/a>","problem_difficulty_level":"Medium","user_zen_mode":false,"best_tag":"Medium Hard","editorial_url":"https:\/\/discuss.codechef.com\/problems\/EXUNF","time":{"view_start_date":1571142600,"submit_start_date":1571142600,"visible_start_date":1571142600,"end_date":1735669800,"current":1643797942},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=EXUNF","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}