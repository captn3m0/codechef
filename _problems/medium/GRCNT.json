{"category_name":"medium","status":"success","problem_code":"GRCNT","problem_name":"Graph Count","body":"### Read problem statements in [Mandarin](https:\/\/www.codechef.com\/download\/translated\/LTIME97\/mandarin\/GRCNT.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/LTIME97\/bengali\/GRCNT.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/LTIME97\/russian\/GRCNT.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/LTIME97\/vietnamese\/GRCNT.pdf) as well.\n\nYou are given an undirected graph with $N$ nodes and $M$ edges. There are exactly $K = \\frac{N(N-1)}{2} - M$ unordered pairs $(i, j)$ such that the edge $(i, j)$ is not present in the graph. For each of these pairs, you can choose whether to add the edge $(i, j)$ to the graph. Out of all $2^K$ ways, find the number of ways in which each vertex has degree $2$ in the final graph.\n\nSince the answer can be large, print it modulo $998\\ 244\\ 353$.\n\n### Input\n\n- The first line contains an integer $T$, the number of test cases. Then the test cases follow.\n- The first line of each test case contains two integers $N$, $M$, the number of nodes and the number of edges in the graph.\n- Each of the next $M$ lines contains two space-separated integers $u$, $v$, denoting an edge between nodes $u$ and $v$ in the graph.\n\n\n### Output:\nFor each testcase, output in a single line, the number of ways in which all nodes of the final graph have degree $2$, modulo $998\\ 244\\ 353$.\n\n### Constraints\n- $1 \\leq T \\leq 1000$\n- $0\\le M\\le N\\le 3\\cdot 10^5$\n- $1\\le N$\n- $1\\le u, v\\le N$, $u\\ne v$\n- There is at most one edge between the same pair of nodes.\n- The sum of $N$ over all test cases does not exceed $3 \\cdot 10^5$\n\n### Subtasks\n- **Subtask 1 (10 points)**: $T \\le 10$, $N \\le 11$\n- **Subtask 2 (15 points)**: $T \\le 10$, $N \\le 40$\n- **Subtask 3 (20 points)**: $T \\le 10$, $N \\le 350$\n- **Subtask 4 (30 points)**: The sum of $N$ over all test cases does not exceed $5000$\n- **Subtask 5 (25 points)**: Original constraints\n\n### Sample Input\n```\n3\n4 3\n1 4\n3 2\n2 4\n4 4\n1 2\n2 3\n1 3\n1 4\n6 0\n```\n\n### Sample Output\n```\n1\n0\n70\n```\n\n### Explanation\n\nIn the first test case, there is only one valid way: adding an edge between $1$ and $3$.\n\nIn the second test case, there is no valid way.\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>","problemComponents":{"constraints":"","constraintsState":false,"subtasks":"","subtasksState":false,"statement":"### Read problem statements in [Mandarin](https:\/\/www.codechef.com\/download\/translated\/LTIME97\/mandarin\/GRCNT.pdf), [Bengali](https:\/\/www.codechef.com\/download\/translated\/LTIME97\/bengali\/GRCNT.pdf), [Russian](https:\/\/www.codechef.com\/download\/translated\/LTIME97\/russian\/GRCNT.pdf), and [Vietnamese](https:\/\/www.codechef.com\/download\/translated\/LTIME97\/vietnamese\/GRCNT.pdf) as well.\n\nYou are given an undirected graph with $N$ nodes and $M$ edges. There are exactly $K = \\frac{N(N-1)}{2} - M$ unordered pairs $(i, j)$ such that the edge $(i, j)$ is not present in the graph. For each of these pairs, you can choose whether to add the edge $(i, j)$ to the graph. Out of all $2^K$ ways, find the number of ways in which each vertex has degree $2$ in the final graph.\n\nSince the answer can be large, print it modulo $998\\ 244\\ 353$.\n\n### Input\n\n- The first line contains an integer $T$, the number of test cases. Then the test cases follow.\n- The first line of each test case contains two integers $N$, $M$, the number of nodes and the number of edges in the graph.\n- Each of the next $M$ lines contains two space-separated integers $u$, $v$, denoting an edge between nodes $u$ and $v$ in the graph.\n\n\n### Output:\nFor each testcase, output in a single line, the number of ways in which all nodes of the final graph have degree $2$, modulo $998\\ 244\\ 353$.\n\n### Constraints\n- $1 \\leq T \\leq 1000$\n- $0\\le M\\le N\\le 3\\cdot 10^5$\n- $1\\le N$\n- $1\\le u, v\\le N$, $u\\ne v$\n- There is at most one edge between the same pair of nodes.\n- The sum of $N$ over all test cases does not exceed $3 \\cdot 10^5$\n\n### Subtasks\n- **Subtask 1 (10 points)**: $T \\le 10$, $N \\le 11$\n- **Subtask 2 (15 points)**: $T \\le 10$, $N \\le 40$\n- **Subtask 3 (20 points)**: $T \\le 10$, $N \\le 350$\n- **Subtask 4 (30 points)**: The sum of $N$ over all test cases does not exceed $5000$\n- **Subtask 5 (25 points)**: Original constraints\n\n### Sample Input\n```\n3\n4 3\n1 4\n3 2\n2 4\n4 4\n1 2\n2 3\n1 3\n1 4\n6 0\n```\n\n### Sample Output\n```\n1\n0\n70\n```\n\n### Explanation\n\nIn the first test case, there is only one valid way: adding an edge between $1$ and $3$.\n\nIn the second test case, there is no valid way.\n","inputFormat":"","inputFormatState":false,"outputFormat":"","outputFormatState":false,"sampleTestCases":[]},"video_editorial_url":"","languages_supported":"CPP14, C, JAVA, PYTH 3.6, CPP17, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, kotlin, BASH, JS, LISP sbcl, rust, PAS gpc, BF, CLOJ, R, D, CAML, FORT, ASM, swift, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, ICK, NICE, PRLG, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, SQLQ, NEM","max_timelimit":"2","source_sizelimit":"50000","problem_author":"jtnydv25","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;<\/span><span class='m-username--link'>jtnydv25<\/span>","problem_tester":"","problem_tester_html_handle":"","date_added":"23-06-2021","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/combinatorics'>combinatorics<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/fast-fourier-transform'>fast-fourier-transform<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/inclusion-exclusion'>inclusion-exclusion<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/jtnydv25'>jtnydv25<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/ltime97'>ltime97<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/medium-hard'>medium-hard<\/a>","problem_difficulty_level":"Medium-Hard","user_zen_mode":false,"best_tag":"Fast Fourier Transform","editorial_url":"https:\/\/discuss.codechef.com\/problems\/GRCNT","time":{"view_start_date":1624727702,"submit_start_date":1624727702,"visible_start_date":1624727702,"end_date":1735669800,"current":1643797946},"user":{"username":null,"access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false,"problemDiscussURL":"https:\/\/discuss.codechef.com\/search?q=GRCNT","is_proctored":false,"is_user_verified_for_proctoring":null,"visitedContests":[]}